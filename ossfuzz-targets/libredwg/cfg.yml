libredwg:
  language: "c"
  image: "fuzzdrivergpt/libredwg:env"
  apiblocklist: [ "^$" ]
  precode: '#include "dwg.h"\n#include "dwg_api.h"\n'
  headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
  binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libredwg.a" ]
  compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include" ]
  build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libredwg.a -lm -o OUTEXE"
  run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
  known_drivers: [ "/src/libredwg/examples/llvmfuzz.c" ]


#clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAF
#E_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize
#=fuzzer-no-link -fsanitize=fuzzer examples/llvmfuzz.c -o /out/llvmfuzz src/.libs/
#libredwg.a -I./include -I./src