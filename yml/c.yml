targets:
  avahi:
    language: "c"
    image: "fuzzdrivergpt/avahi:env"
    apiblocklist: [ "^$" ]
    precode: '#include <assert.h>\n#include <sys/socket.h>\n#include "avahi-common/address.h"\n#include "avahi-common/error.h"\n#include "avahi-common/simple-watch.h"\n#include "avahi-core/core.h"\n#include "avahi-core/publish.h"\n#include "avahi-common/alternative.h"\n#include "avahi-common/gccmacro.h"\n#include "avahi-common/strlst.h"\n#include "avahi-core/dns.h"\n#include "avahi-core/rr.h"\n#include "avahi-common/cdecl.h"\n#include "avahi-common/llist.h"\n#include "avahi-common/thread-watch.h"\n#include "avahi-core/hashmap.h"\n#include "avahi-common/defs.h"\n#include "avahi-common/malloc.h"\n#include "avahi-common/timeval.h"\n#include "avahi-core/log.h"\n#include "avahi-common/domain.h"\n#include "avahi-common/rlist.h"\n#include "avahi-common/watch.h"\n#include "avahi-core/lookup.h"\n#include "client.h"\n'
    headers: { "/work/include" : "**/*" }
    binaries: [ "/work/lib/libavahi-common.a","/work/lib/libavahi-core.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/work/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-D_REENTRANT ","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/avahi/avahi-client" ]
    build: "COMPBASE OUTFILE   /work/lib/libavahi-core.a /work/lib/libavahi-common.a  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/avahi_packet_consume_record_fuzzer.cc","/src/avahi_packet_consume_key_fuzzer.cc" ]
  
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/work/include/ /src/avahi_packet_consume_record_fuzzer.cc -o /out/avahi_packet_consume_record_fuzzer -fsanitize=fuzzer /work/lib/libavahi-core.a /work/lib/libavahi-common.a
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/work/include/ /src/avahi_packet_consume_key_fuzzer.cc -o /out/avahi_packet_consume_key_fuzzer -fsanitize=fuzzer /work/lib/libavahi-core.a /work/lib/libavahi-common.a


  bind9:
    language: "c"
    image: "fuzzdrivergpt/bind9:env"
    apiblocklist: [ "^$" ]
    precode: '#include "bind9/check.h"\n#include "bind9/getaddresses.h"\n#include "dns/acl.h"\n#include "dns/adb.h"\n#include "dns/badcache.h"\n#include "dns/bit.h"\n#include "dns/byaddr.h"\n#include "dns/cache.h"\n#include "dns/callbacks.h"\n#include "dns/catz.h"\n#include "dns/cert.h"\n#include "dns/client.h"\n#include "dns/clientinfo.h"\n#include "dns/compress.h"\n#include "dns/db.h"\n#include "dns/dbiterator.h"\n#include "dns/diff.h"\n#include "dns/dispatch.h"\n#include "dns/dlz.h"\n#include "dns/dlz_dlopen.h"\n#include "dns/dns64.h"\n#include "dns/dnsrps.h"\n#include "dns/dnssec.h"\n#include "dns/dnstap.h"\n#include "dns/ds.h"\n#include "dns/dsdigest.h"\n#include "dns/dyndb.h"\n#include "dns/ecs.h"\n#include "dns/edns.h"\n#include "dns/enumclass.h"\n#include "dns/enumtype.h"\n#include "dns/events.h"\n#include "dns/fixedname.h"\n#include "dns/forward.h"\n#include "dns/geoip.h"\n#include "dns/ipkeylist.h"\n#include "dns/iptable.h"\n#include "dns/journal.h"\n#include "dns/kasp.h"\n#include "dns/keydata.h"\n#include "dns/keyflags.h"\n#include "dns/keymgr.h"\n#include "dns/keytable.h"\n#include "dns/keyvalues.h"\n#include "dns/librpz.h"\n#include "dns/log.h"\n#include "dns/master.h"\n#include "dns/masterdump.h"\n#include "dns/message.h"\n#include "dns/name.h"\n#include "dns/ncache.h"\n#include "dns/nsec.h"\n#include "dns/nsec3.h"\n#include "dns/nta.h"\n#include "dns/opcode.h"\n#include "dns/order.h"\n#include "dns/peer.h"\n#include "dns/private.h"\n#include "dns/rbt.h"\n#include "dns/rcode.h"\n#include "dns/rdata.h"\n#include "dns/rdataclass.h"\n#include "dns/rdatalist.h"\n#include "dns/rdataset.h"\n#include "dns/rdatasetiter.h"\n#include "dns/rdataslab.h"\n#include "dns/rdatastruct.h"\n#include "dns/rdatatype.h"\n#include "dns/remote.h"\n#include "dns/request.h"\n#include "dns/resolver.h"\n#include "dns/result.h"\n#include "dns/rootns.h"\n#include "dns/rpz.h"\n#include "dns/rriterator.h"\n#include "dns/rrl.h"\n#include "dns/sdb.h"\n#include "dns/sdlz.h"\n#include "dns/secalg.h"\n#include "dns/secproto.h"\n#include "dns/soa.h"\n#include "dns/ssu.h"\n#include "dns/stats.h"\n#include "dns/time.h"\n#include "dns/tkey.h"\n#include "dns/transport.h"\n#include "dns/tsig.h"\n#include "dns/ttl.h"\n#include "dns/types.h"\n#include "dns/update.h"\n#include "dns/validator.h"\n#include "dns/view.h"\n#include "dns/xfrin.h"\n#include "dns/zone.h"\n#include "dns/zonekey.h"\n#include "dns/zoneverify.h"\n#include "dns/zt.h"\n#include "dst/dst.h"\n#include "dst/gssapi.h"\n#include "irs/resconf.h"\n#include "isc/aes.h"\n#include "isc/align.h"\n#include "isc/ascii.h"\n#include "isc/assertions.h"\n#include "isc/async.h"\n#include "isc/atomic.h"\n#include "isc/attributes.h"\n#include "isc/backtrace.h"\n#include "isc/barrier.h"\n#include "isc/base32.h"\n#include "isc/base64.h"\n#include "isc/bind9.h"\n#include "isc/buffer.h"\n#include "isc/commandline.h"\n#include "isc/condition.h"\n#include "isc/counter.h"\n#include "isc/crc64.h"\n#include "isc/deprecated.h"\n#include "isc/dir.h"\n#include "isc/dnsstream.h"\n#include "isc/endian.h"\n#include "isc/entropy.h"\n#include "isc/errno.h"\n#include "isc/error.h"\n#include "isc/event.h"\n#include "isc/eventclass.h"\n#include "isc/file.h"\n#include "isc/formatcheck.h"\n#include "isc/fsaccess.h"\n#include "isc/fuzz.h"\n#include "isc/glob.h"\n#include "isc/hash.h"\n#include "isc/hashmap.h"\n#include "isc/heap.h"\n#include "isc/hex.h"\n#include "isc/hmac.h"\n#include "isc/ht.h"\n#include "isc/httpd.h"\n#include "isc/interfaceiter.h"\n#include "isc/iterated_hash.h"\n#include "isc/job.h"\n#include "isc/lang.h"\n#include "isc/lex.h"\n#include "isc/list.h"\n#include "isc/log.h"\n#include "isc/loop.h"\n#include "isc/magic.h"\n#include "isc/managers.h"\n#include "isc/md.h"\n#include "isc/mem.h"\n#include "isc/meminfo.h"\n#include "isc/mutex.h"\n#include "isc/mutexblock.h"\n#include "isc/net.h"\n#include "isc/netaddr.h"\n#include "isc/netdb.h"\n#include "isc/netmgr.h"\n#include "isc/netscope.h"\n#include "isc/nonce.h"\n#include "isc/offset.h"\n#include "isc/once.h"\n#include "isc/os.h"\n#include "isc/parseint.h"\n#include "isc/portset.h"\n#include "isc/print.h"\n#include "isc/quota.h"\n#include "isc/radix.h"\n#include "isc/random.h"\n#include "isc/ratelimiter.h"\n#include "isc/refcount.h"\n#include "isc/regex.h"\n#include "isc/region.h"\n#include "isc/result.h"\n#include "isc/rwlock.h"\n#include "isc/safe.h"\n#include "isc/serial.h"\n#include "isc/signal.h"\n#include "isc/siphash.h"\n#include "isc/sockaddr.h"\n#include "isc/stat.h"\n#include "isc/stats.h"\n#include "isc/stdio.h"\n#include "isc/stdtime.h"\n#include "isc/strerr.h"\n#include "isc/string.h"\n#include "isc/symtab.h"\n#include "isc/syslog.h"\n#include "isc/task.h"\n#include "isc/thread.h"\n#include "isc/tid.h"\n#include "isc/time.h"\n#include "isc/timer.h"\n#include "isc/tls.h"\n#include "isc/tm.h"\n#include "isc/types.h"\n#include "isc/url.h"\n#include "isc/utf8.h"\n#include "isc/util.h"\n#include "isc/uv.h"\n#include "isc/work.h"\n#include "isc/xml.h"\n#include "isccc/alist.h"\n#include "isccc/base64.h"\n#include "isccc/cc.h"\n#include "isccc/ccmsg.h"\n#include "isccc/events.h"\n#include "isccc/sexpr.h"\n#include "isccc/symtab.h"\n#include "isccc/symtype.h"\n#include "isccc/types.h"\n#include "isccc/util.h"\n#include "isccfg/aclconf.h"\n#include "isccfg/cfg.h"\n#include "isccfg/duration.h"\n#include "isccfg/grammar.h"\n#include "isccfg/kaspconf.h"\n#include "isccfg/log.h"\n#include "isccfg/namedconf.h"\n#include "ns/client.h"\n#include "ns/events.h"\n#include "ns/hooks.h"\n#include "ns/interfacemgr.h"\n#include "ns/listenlist.h"\n#include "ns/log.h"\n#include "ns/notify.h"\n#include "ns/query.h"\n#include "ns/server.h"\n#include "ns/sortlist.h"\n#include "ns/stats.h"\n#include "ns/types.h"\n#include "ns/update.h"\n#include "ns/xfrout.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libirs.a", "/root/workspace/fuzzdrivergpt/install/lib/libisccc.a", "/root/workspace/fuzzdrivergpt/install/lib/libisc.a", "/root/workspace/fuzzdrivergpt/install/lib/libbind9.a", "/root/workspace/fuzzdrivergpt/install/lib/libdns.a", "/root/workspace/fuzzdrivergpt/install/lib/libns.a", "/root/workspace/fuzzdrivergpt/install/lib/libisccfg.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include", "-include", "/src/bind9/config.h", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE -o OUTEXE /root/workspace/fuzzdrivergpt/install/lib/libisccc.a /root/workspace/fuzzdrivergpt/install/lib/libirs.a /root/workspace/fuzzdrivergpt/install/lib/libbind9.a /root/workspace/fuzzdrivergpt/install/lib/libns.a /root/workspace/fuzzdrivergpt/install/lib/libisccfg.a /root/workspace/fuzzdrivergpt/install/lib/libdns.a /root/workspace/fuzzdrivergpt/install/lib/libisc.a -luv -lrt -lnsl -ldl -lssl -lcrypto -lnghttp2 -lpthread -L/root/workspace/fuzzdrivergpt/install/lib/ -pthread"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/bind9/fuzz/dns_master_load.c", "/src/bind9/fuzz/dns_message_checksig.c", "/src/bind9/fuzz/dns_message_parse.c", "/src/bind9/fuzz/dns_name_fromtext_target.c", "/src/bind9/fuzz/dns_name_fromwire.c", "/src/bind9/fuzz/dns_rdata_fromtext.c", "/src/bind9/fuzz/dns_rdata_fromwire_text.c", "/src/bind9/fuzz/isc_lex_getmastertoken.c", "/src/bind9/fuzz/isc_lex_gettoken.c", ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o /out/isc_lex_gettoken_fuzzer fuzz/isc_lex_gettoken.o -include config.h -Ilib/isc/unix/include -Ilib/isc/pthreads/include -Ilib/isc/include -Ilib/dns/include lib/dns/.libs/libdns.a -Wl,-Bstatic -lcrypto -Wl,-Bdynamic lib/isc/.libs/libisc.a -Wl,-Bstatic -lssl -lcrypto -luv -lnghttp2 -Wl,-Bdynamic -fsanitize=fuzzer


  bluez:
    language: "c"
    image: "fuzzdrivergpt/bluez:env"
    apiblocklist: [ "^$" ]
    precode: '#include "bluetooth/bluetooth.h"\n#include "bluetooth/bnep.h"\n#include "bluetooth/cmtp.h"\n#include "bluetooth/hci.h"\n#include "bluetooth/hci_lib.h"\n#include "bluetooth/hidp.h"\n#include "bluetooth/l2cap.h"\n#include "bluetooth/rfcomm.h"\n#include "bluetooth/sco.h"\n#include "bluetooth/sdp.h"\n#include "bluetooth/sdp_lib.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libbluetooth-internal.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE /src/bluez/src/.libs/libshared-glib.a /root/workspace/fuzzdrivergpt/install/lib/libbluetooth-internal.a -l:libical.a -l:libicalss.a -l:libicalvcal.a -l:libdbus-1.a /src/glib/_build/glib/libglib-2.0.a -ldl -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz_gobex.c", "/src/fuzz_hci.c", "/src/fuzz_sdp.c", "/src/fuzz_textfile.c", "/src/fuzz_xml.c", ]
  
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer -I. -I./src -I./lib -I./gobex -I/usr/local/include/glib-2.0/ -I/src/glib/_build/glib/ /src/fuzz_xml.c ./src/bluetoothd-sdp-xml.o -o /out/fuzz_xml ./src/.libs/libshared-glib.a ./lib/.libs/libbluetooth-internal.a -l:libical.a -l:libicalss.a -l:libicalvcal.a -l:libdbus-1.a /src/glib/_build/glib/libglib-2.0.a -ldl -lpthread

  brotli:
    language: "c"
    image: "fuzzdrivergpt/brotli:env"
    apiblocklist: [ "^$" ]
    precode: '#include "brotli/decode.h"\n#include "brotli/encode.h"\n#include "brotli/port.h"\n#include "brotli/shared_dictionary.h"\n#include "brotli/types.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libbrotlicommon.a","/root/workspace/fuzzdrivergpt/install/lib/libbrotlidec.a","/root/workspace/fuzzdrivergpt/install/lib/ libbrotlienc.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-c","-std=c99" ]
    build: "COMPBASE OUTFILE  /src/brotli/libbrotlicommon.a  /src/brotli/libbrotlidec.a /src/brotli/libbrotlienc.a  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/brotli/c/fuzz/decode_fuzzer.c","/src/brotli/c/fuzz/run_decode_fuzzer.c" ]
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -c -std=c99 -I. -I./c/include /src/brotli/c/fuzz/decode_fuzzer.c
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ ./decode_fuzzer.o -o /out/decode_fuzzer -fsanitize=fuzzer ./libbrotlidec.a ./libbrotlicommon.a


  capstone:
    language: "c"
    image: "fuzzdrivergpt/capstone:env"
    apiblocklist: [ "^$" ]
    precode: '#include "capstone/capstone.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libcapstone.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link"  ]
    build: "COMPBASE OUTFILE /src/capstonenext/libcapstone.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/capstonenext/suite/fuzz/fuzz_decode_platform.c","/src/capstonenext/suite/fuzz/fuzz_diff.c","/src/capstonenext/suite/fuzz/fuzz_disasm.c","/src/capstonenext/suite/fuzz/fuzz_harness.c" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ CMakeFiles/fuzz_disasm.dir/suite/fuzz/fuzz_disasm.c.o CMakeFiles/fuzz_disasm.dir/suite/fuzz/platform.c.o -o /out/fuzz_disasmnext libcapstone.a -fsanitize=fuzzer

  casync:
    language: "c"
    image: "fuzzdrivergpt/casync:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/src/casync/src" : "**/*" }
    binaries: [ "/work/build/src/libshared.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/src/casync/src", "-L/usr/lib/clang/15.0.0/lib/linux","-Wl,--as-needed","-Wl,--allow-shlib-undefined","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link"  ]
    build: "COMPBASE OUTFILE /work/build/src/libshared.a -lacl /usr/lib/x86_64-linux-gnu/liblzma.so /lib/x86_64-linux-gnu/libselinux.so /usr/lib/x86_64-linux-gnu/libz.so -lm /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so -pthread -lFuzzingEngine  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/casync/test/fuzz/fuzz-compress.c" ]
  
  #
  #[1/2] clang++  -o fuzz-compress fuzz-compress.p/test_fuzz_fuzz-compress.c.o -L/usr/lib/clang/15.0.0/lib/linux -Wl,--as-needed -Wl,--allow-shlib-undefined -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link  -Wl,--start-group /work/build/src/libshared.a -lacl /usr/lib/x86_64-linux-gnu/liblzma.so /lib/x86_64-linux-gnu/libselinux.so /usr/lib/x86_64-linux-gnu/libz.so -lm /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so -pthread -lFuzzingEngine -Wl,--end-group
  #
  #[1/2] env MESON_SOURCE_ROOT=/src/casync MESON_BUILD_ROOT=/work/build MESON_SUBDIR= 'MESONINTROSPECT=/usr/local/bin/meson introspect' /usr/bin/true           + ninja -C /work/build install

  civetweb:
    language: "c"
    image: "fuzzdrivergpt/civetweb:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/civetweb.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-Wall", "-Wextra", "-Wshadow", "-Wformat-security", "-Winit-self", "-Wmissing-prototypes", "-DLINUX", "-I/root/workspace/fuzzdrivergpt/install/include", "-DUSE_STACK_SIZE=102400", "-DTEST_FUZZ1", "-DOPENSSL_API_1_1" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libcivetweb.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/civetweb/fuzztest/fuzzmain.c" ]
  
  
  #clang -c -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wall -Wextra -Wshadow -Wformat-security -Winit-self -Wmissing-prototypes -DLINUX -Iinclude  -DUSE_STACK_SIZE=102400 -DTEST_FUZZ1 -DOPENSSL_API_1_1 fuzztest/fuzzmain.c -o out/fuzztest/fuzzmain.o

  cjson:
    language: "c"
    image: "fuzzdrivergpt/cjson:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libcjson.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/cjson/build/libcjson.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/cjson/fuzzing/cjson_read_fuzzer.c" ]
  
  #++ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ /src/cjson/fuzzing/cjson_read_fuzzer.c -I. -o /out/cjson_read_fuzzer -fsanitize=fuzzer /src/cjson/build/libcjson.a

  cmark:
    language: "c"
    image: "fuzzdrivergpt/cmark:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/cmark.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE -lFuzzingEngine /src/cmark/build/src/libcmark.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/cmark/test/cmark-fuzz.c" ]
  
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Isrc -Ibuild/src -c /src/cmark/test/cmark-fuzz.c -o cmark_fuzzer.o
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -lFuzzingEngine cmark_fuzzer.o build/src/libcmark.a -o /out/cmark_fuzzer

  coturn:
    language: "c"
    image: "fuzzdrivergpt/coturn:env"
    apiblocklist: [ "^$" ]
    precode: '#include <fcntl.h>\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libturn_server.a" , "/root/workspace/fuzzdrivergpt/install/lib/libturnclient.a" , "/root/workspace/fuzzdrivergpt/install/lib/libturncommon.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-DTURN_NO_HIREDIS", "-I/root/workspace/fuzzdrivergpt/install/include", "-I/root/workspace/fuzzdrivergpt/install/include/turn/server", "-I/root/workspace/fuzzdrivergpt/install/include/turn/client", "-I/root/workspace/fuzzdrivergpt/install/include/turn", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-std=gnu11", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE -o OUTEXE /root/workspace/fuzzdrivergpt/install/lib/libturnclient.a /root/workspace/fuzzdrivergpt/install/lib/libturn_server.a /root/workspace/fuzzdrivergpt/install/lib/libturncommon.a /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so /root/workspace/fuzzdrivergpt/install/lib/libevent_core.so /root/workspace/fuzzdrivergpt/install/lib/libevent_extra.so /root/workspace/fuzzdrivergpt/install/lib/libevent_openssl.so /root/workspace/fuzzdrivergpt/install/lib/libevent_pthreads.so /root/workspace/fuzzdrivergpt/install/lib/libevent.so"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/coturn/fuzzing/FuzzStun.c", "/src/coturn/fuzzing/FuzzStunClient.c", ]
  
  #/usr/lib/libFuzzingEngine.a 
  #/usr/local/bin/clang -DTURN_NO_HIREDIS -I/src/coturn/my_build/fuzzing -I/src/coturn/fuzzing -I/src/coturn/src/apps/common -I/src/coturn/src/server -I/src/coturn/src -I/src/coturn/src/client -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -std=gnu11 -MD -MT fuzzing/CMakeFiles/FuzzStun.dir/FuzzStun.c.o -MF CMakeFiles/FuzzStun.dir/FuzzStun.c.o.d -o CMakeFiles/FuzzStun.dir/FuzzStun.c.o -c /src/coturn/fuzzing/FuzzStun.c
  #
  #
  #/usr/local/bin/clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wl,-rpath,'$ORIGIN/lib' CMakeFiles/FuzzStun.dir/FuzzStun.c.o -o FuzzStun  -Wl,-rpath,/out/lib ../lib/libturnclient.a /usr/lib/libFuzzingEngine.a ../lib/libturncommon.a /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so /out/lib/libevent_core.so /out/lib/libevent_extra.so /out/lib/libevent_openssl.so /out/lib/libevent_pthreads.so

  croaring:
    language: "c"
    image: "fuzzdrivergpt/croaring:env"
    apiblocklist: [ "^$" ]
    precode: '#include <stdarg.h>\n#include <stddef.h>\n#include <setjmp.h>\n#include <assert.h>\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libroaring.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/root/workspace/fuzzdrivergpt/install/include", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libroaring.a /root/workspace/fuzzdrivergpt/install/lib/libcmocka.so -o OUTEXE"
    run: "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/root/workspace/fuzzdrivergpt/install/lib OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/croaring_fuzzer.c" ]
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I/src/croaring/include -c /src/croaring_fuzzer.c -o fuzzer.o
  #
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer fuzzer.o -o /out/croaring_fuzzer /src/croaring/build-dir/src/libroaring.a

  cups:
    language: "c"
    image: "fuzzdrivergpt/cups:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib64/libcups.a",
    "/root/workspace/fuzzdrivergpt/install/lib64/libcupsimage.a"]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-Wall","-Werror","-D_CUPS_SOURCE","-D_FORTIFY_SOURCE=2","-D_REENTRANT","-D_LARGEFILE_SOURCE","-D_LARGEFILE64_SOURCE","-D_THREAD_SAFE","-D_REENTRANT","-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib64/libcups.a /root/workspace/fuzzdrivergpt/install/lib64/libcupsimage.a  -lssl -lcrypto -lz -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/cups/fuzzer/FuzzCUPS.c", "/src/cups/fuzzer/FuzzIPP.c", "/src/cups/fuzzer/FuzzRaster.c", ]
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -Werror -D_CUPS_SOURCE -D_FORTIFY_SOURCE=2 -D_REENTRANT -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_THREAD_SAFE -D_REENTRANT -I./../ -I./../cups/ -c FuzzCUPS.c
  #  clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -Werror -D_CUPS_SOURCE -D_FORTIFY_SOURCE=2 -D_REENTRANT -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_THREAD_SAFE -D_REENTRANT -I./../ -I./../cups/ -c FuzzIPP.c
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -Werror -D_CUPS_SOURCE -D_FORTIFY_SOURCE=2 -D_REENTRANT -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_THREAD_SAFE -D_REENTRANT -I./../ -I./../cups/ -c FuzzRaster.c
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -o FuzzCUPS FuzzCUPS.o -L./../cups/ /usr/lib/libFuzzingEngine.a -lcups -lcupsimage -lssl -lcrypto -lz -lpthread


  cyclonedds:
    language: "c"
    image: "fuzzdrivergpt/cyclonedds:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libddsc.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-O2","-g","-DNDEBUG","-Wall","-Wextra","-Wconversion","-Wunused","-Wmissing-prototypes","-Winfinite-recursion","-Wassign-enum","-Wcomma","-Wdocumentation","-Wstrict-prototypes","-Wconditional-uninitialized","-Wshadow","-std=gnu99","-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libddsc.a  -lpthread -ldl -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/cyclonedds/fuzz/fuzz_config_init/fuzz_config_init.c", "/src/cyclonedds/fuzz/fuzz_handle_rtps_message/fuzz_handle_rtps_message.c", ]
  
  
  #/usr/local/bin/clang  -I/src/cyclonedds/fuzz/fuzz_config_init/../../src/core/ddsc/src -I/src/cyclonedds/fuzz/fuzz_config_init/../../src/core/cdr/include -I/src/cyclonedds/fuzz/fuzz_config_init/..
  #/../src/core/ddsi/include -I/src/cyclonedds/fuzz/fuzz_config_init/../../src/core/ddsi/src -I/src/cyclonedds/build/src/core -I/src/cyclonedds/build/src/core/include -I/src/cyclonedds/src/core/ddsc/include -I/src/cyclonedds/src/ddsrt/include -I/sr
  #c/cyclonedds/src/ddsrt/src -I/src/cyclonedds/build/src/ddsrt/include -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -O2 -g -DNDEBUG -Wall -Wextra -Wconversion -Wunused -Wmissing-prototypes -Winfinite-re
  #cursion -Wassign-enum -Wcomma -Wdocumentation -Wstrict-prototypes -Wconditional-uninitialized -Wshadow -std=gnu99 -MD -MT fuzz/fuzz_config_init/CMakeFiles/fuzz_config_init.dir/fuzz_config_init.c.o -MF CMakeFiles/fuzz_config_init.dir/fuzz_config_
  #init.c.o.d -o CMakeFiles/fuzz_config_init.dir/fuzz_config_init.c.o -c /src/cyclonedds/fuzz/fuzz_config_init/fuzz_config_init.c
  
  
  
  #/usr/local/bin/clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -O2 -g -DNDEBUG -undefined error CMakeFiles/fuzz_config_init.dir/fuzz_config_init.c.o -o ../../bin/fuzz_config_init  ../../lib/libddsc
  #.a /usr/lib/libFuzzingEngine.a -lpthread -ldl

  dovecot:
    language: "c"
    image: "fuzzdrivergpt/dovecot:env"
    apiblocklist: [ "^$" ]
    precode: '#include <stdbool.h>\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib01_acl_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib02_imap_acl_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib02_lazy_expunge_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib05_mail_crypt_acl_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib05_pop3_migration_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib10_last_login_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib10_mail_crypt_plug in.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib10_quota_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib11_imap_quota_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib11_trash_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib15_notify_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_charset_alias_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_fts_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_listescape_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_mail_compress_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_mail_log_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_notify_status_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_push_notification_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_quota_clone_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_replication_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_var_expand_crypt.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib20_virtual_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/lib99_welcome_plugin.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdcrypt_openssl.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-compression.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-dsync.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-fts.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-lda.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-login.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-sql.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-storage.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libfs_compress.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libfs_crypt.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libfs_mail_crypt.a", "/root/workspace/fuzzdrivergpt/install/lib/dovecot/libssl_iostream_openssl.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-DHAVE_CONFIG_H","-I/root/workspace/fuzzdrivergpt/install/include","-fPIE","-DPIE","-std=gnu11","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fstack-protector-strong","-U_FORTIFY_SOURCE","-D_FORTIFY_SOURCE=2","-fsanitize=fuzzer-no-link","-Wall","-W","-Wmissing-prototypes","-Wmissing-declarations","-Wpointer-arith","-Wchar-subscripts","-Wformat=2","-Wbad-function-cast","-Wno-duplicate-decl-specifier","-Wstrict-aliasing=2" ]
    build: "COMPBASE OUTFILE -Wl,--as-needed -Wl,--export-dynamic /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot.a  /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdcrypt_openssl.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-compression.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-dsync.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-fts.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-lda.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-login.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-sql.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libdovecot-storage.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libfs_compress.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libfs_crypt.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libfs_mail_crypt.a /root/workspace/fuzzdrivergpt/install/lib/dovecot/libssl_iostream_openssl.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/dovecot/src/lib-imap/fuzz-imap-bodystructure.c", "/src/dovecot/src/lib-imap/fuzz-imap-utf7.c", "/src/dovecot/src/lib-mail/fuzz-message-parser.c", "/src/dovecot/src/lib-smtp/fuzz-smtp-server.c", ]
  
  #clang -DHAVE_CONFIG_H -I. -I../..  -I../../src/lib -I../../src/lib-test -I../../src/lib-settings -I../../src/lib-master -I../../src/lib-sasl -I../../src/lib-auth -I../../src/lib-ssl-iostream -I../../src/lib-dns -I../../src/lib-program-client -I../../src/lib-mail -DTEST_BIN_DIR=\"/src/dovecot/src/lib-smtp/test-bin\" -fPIE -DPIE   -std=gnu11 -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fstack-protector-strong -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -fsanitize=fuzzer-no-link -Wall -W -Wmissing-prototypes -Wmissing-declarations -Wpointer-arith -Wchar-subscripts -Wformat=2 -Wbad-function-cast -Wno-duplicate-decl-specifier -Wstrict-aliasing=2  -MT fuzz_smtp_server-fuzz-smtp-server.o -MD -MP -MF .deps/fuzz_smtp_server-fuzz-smtp-server.Tpo -c -o fuzz_smtp_server-fuzz-smtp-server.o `test -f 'fuzz-smtp-server.c' || echo './'`fuzz-smtp-server.c
  #
  #
  #
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -D__STDC_LIMIT_MACROS -fsanitize=fuzzer -Wl,--as-needed -o fuzz-smtp-server fuzz_smtp_server-fuzz-smtp-server.o -Wl,--export-dynamic  ./.libs/libsmtp.a ../lib-program-client/.libs/libprogram_client.a ../lib-dns/.libs/libdns.a ../lib-mail/.libs/libmail.a ../lib-charset/.libs/libcharset.a ../lib-master/.libs/libmaster.a ../lib-auth/.libs/libauth.a ../lib-ssl-iostream/.libs/libssl_iostream.a ../lib-settings/.libs/libsettings.a ../lib-sasl/.libs/libsasl.a ../lib-test/.libs/libtest.a ../lib/.libs/liblib.a
  
  #./.libs/libsmtp.a ../lib-program-client/.libs/libprogram_client.a ../lib-dns/.libs/libdns.a ../lib-mail/.libs/libmail.a ../lib-charset/.libs/libcharset.a ../lib-master/.libs/libmaster.a ../lib-auth/.libs/libauth.a ../lib-ssl-iostream/.libs/libssl_iostream.a ../lib-settings/.libs/libsettings.a ../lib-sasl/.libs/libsasl.a ../lib-test/.libs/libtest.a ../lib/.libs/liblib.a
  


  e2fsprogs:
    language: "c"
    image: "fuzzdrivergpt/e2fsprogs:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [
  "/root/workspace/fuzzdrivergpt/install/lib/libblkid.a","/root/workspace/fuzzdrivergpt/install/lib/libcom_err.a","/root/workspace/fuzzdrivergpt/install/lib/libe2p.a","/root/workspace/fuzzdrivergpt/install/lib/libext2fs.a","/root/workspace/fuzzdrivergpt/install/lib/libss.a","/root/workspace/fuzzdrivergpt/install/lib/libsupport.a","/root/workspace/fuzzdrivergpt/install/lib/libuuid.a","/root/workspace/fuzzdrivergpt/install/lib/blkid/libblkid.a","/root/workspace/fuzzdrivergpt/install/lib/et/libcom_err.a","/root/workspace/fuzzdrivergpt/install/lib/ss/libss.a","/root/workspace/fuzzdrivergpt/install/lib/uuid/libuuid.a","/root/workspace/fuzzdrivergpt/install/lib/e2p/libe2p.a","/root/workspace/fuzzdrivergpt/install/lib/ext2fs/libext2fs.a","/root/workspace/fuzzdrivergpt/install/lib/support/libsupport.a"
    ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fsanitize=fuzzer","-I","/root/workspace/fuzzdrivergpt/install/lib" ]
    build: "COMPBASE OUTFILE  -L/root/workspace/fuzzdrivergpt/install/lib/ext2fs -lext2fs -L/root/workspace/fuzzdrivergpt/install/lib/et -lcom_err  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz/ext2fs_check_directory_fuzzer.cc", "/src/fuzz/ext2fs_image_read_write_fuzzer.cc", "/src/fuzz/ext2fs_read_bitmap_fuzzer.cc", ]
  
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer -I /src/e2fsprogs/lib /src/fuzz/ext2fs_read_bitmap_fuzzer.cc -L./lib/ext2fs -lext2fs -L./lib/et -lcom_err -o /out/ext2fs_read_bitmap_fuzzer
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer -I /root/workspace/fuzzdrivergpt/install/lib  -L/root/workspace/fuzzdrivergpt/install/lib/ext2fs -lext2fs -L/root/workspace/fuzzdrivergpt/install/lib/et -lcom_err

  fribidi:
    language: "c"
    image: "fuzzdrivergpt/fribidi:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libfribidi.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include","-fcolor-diagnostics","-D_FILE_OFFSET_BITS=64","-Wall","-Winvalid-pch","-O0","-g","-fvisibility=hidden","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DHAVE_CONFIG_H","'-DFRIBIDI_ENTRY=__attribute__((visibility(\"default\")))'" ]
    build: "COMPBASE OUTFILE -Wl,--as-needed -Wl,--no-undefined -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wl,--start-group /root/workspace/fuzzdrivergpt/install/lib/libfribidi.a -Wl,--end-group -fsanitize=fuzzer -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fribidi/bin/fribidi-fuzzer.c" ]
  
  
  #clang -Ibin/fribidi-fuzzer.p -Ibin -I../../src/fribidi/bin -I. -I../../src/fribidi -Ilib -I../../src/fribidi/lib -Igen.tab -I../../src/fribidi/gen.tab -fcolor-diagnostics -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O0 -g -fvisibility=hidden -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DHAVE_CONFIG_H '-DFRIBIDI_ENTRY=__attribute__ ((visibility ("default")))' -MD -MQ bin/fribidi-fuzzer.p/fribidi-fuzzer.c.o -MF bin/fribidi-fuzzer.p/fribidi-fuzzer.c.o.d -o bin/fribidi-fuzzer.p/fribidi-fuzzer.c.o -c ../../src/fribidi/bin/fribidi-fuzzer.c
  #
  #
  #clang  -o bin/fribidi-fuzzer bin/fribidi-fuzzer.p/fribidi-fuzzer.c.o -Wl,--as-needed -Wl,--no-undefined -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wl,--start-group lib/libfribidi.a -Wl,--end-group -fsanitize=fuzzer

  gdbm:
    language: "c"
    image: "fuzzdrivergpt/gdbm:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libgdbm.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libgdbm.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/gdbm/fuzz/gdbm_fuzzer.c" ]
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -c -I.. -I../src -I../tools -ogdbm_fuzzer.o gdbm_fuzzer.c
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -ogdbm_fuzzer gdbm_fuzzer.o ../tools/libgdbmapp.a ../src/.libs/libgdbm.a

  gdk-pixbuf:
    language: "c"
    image: "fuzzdrivergpt/gdk-pixbuf:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libgdk_pixbuf-2.0.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-pthread","-I/work/prefix/include","-I/work/prefix/include/gdk-pixbuf-2.0","-I/work/prefix/include","-I/work/prefix/include/glib-2.0","-I/work/prefix/lib/glib-2.0/include" ]
    build: "COMPBASE OUTFILE -Wl,-Bdynamic -ldl -lm -lc -pthread -lrt -lpthread -Wl,-static -L/work/prefix/lib -Wl,--export-dynamic -lgdk_pixbuf-2.0 -lm -lpng16 -ljpeg -lgio-2.0 -pthread -lresolv -lgobject-2.0 -pthread -lffi -lgmodule-2.0 -pthread -lglib-2.0 -pthread -lz -fsanitize=fuzzer -Wl,-Bdynamic -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz/animation_fuzzer.c", "/src/fuzz/pixbuf_cons_fuzzer.c", "/src/fuzz/pixbuf_file_fuzzer.c", "/src/fuzz/pixbuf_scale_fuzzer.c", "/src/fuzz/stream_fuzzer.c", ]
  
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -pthread -I/work/prefix/include -I/work/prefix/include/gdk-pixbuf-2.0 -I/work/prefix/include -I/work/prefix/include/glib-2.0 -I/work/prefix/lib/glib-2.0/include -c /src/fuzz/pixbuf_cons_fuzzer.c -o /work/pixbuf_cons_fuzzer.o
  
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ /work/stream_fuzzer.o -o /out/stream_fuzzer -Wl,-Bdynamic-ldl -lm -lc -pthread -lrt -lpthread -Wl,-static -L/work/prefix/lib -Wl,--export-dynamic -lgdk_pixbuf-2.0 -lm -lpng16 -ljpeg -lgio-2.0 -pthread -lresolv -lgobject-2.0 -pthread -lffi -lgmodule-2.0 -pthread -lglib-2.0 -pthread -lz -fsanitize=fuzzer -Wl,-Bdynamic

  gpac:
    language: "c"
    image: "fuzzdrivergpt/gpac:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libgpac_static.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DGPAC_HAVE_CONFIG_H", "-I/src/gpac" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libgpac_static.a -lm -lz -lpthread -lssl -lcrypto -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/testsuite/oss-fuzzers/fuzz_parse.c" ]
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer fuzz_parse.c -o /out/fuzz_parse -I./include -I./ ./bin/gcc/libgpac_static.a -lm -lz -lpthread -lssl -lcrypto -DGPAC_HAVE_CONFIG_H

  h3:
    language: "c"
    image: "fuzzdrivergpt/h3:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libh3.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DH3_PREFIX=","-DH3_USE_LIBFUZZER=1","-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE -rdynamic /root/workspace/fuzzdrivergpt/install/lib/libh3.a  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/h3/src/apps/fuzzers/fuzzerCellArea.c", "/src/h3/src/apps/fuzzers/fuzzerCellProperties.c", "/src/h3/src/apps/fuzzers/fuzzerCellToChildPos.c", "/src/h3/src/apps/fuzzers/fuzzerCellToLatLng.c", "/src/h3/src/apps/fuzzers/fuzzerCellsToLinkedMultiPolygon.c", "/src/h3/src/apps/fuzzers/fuzzerCompact.c", "/src/h3/src/apps/fuzzers/fuzzerDirectedEdge.c", "/src/h3/src/apps/fuzzers/fuzzerDistances.c", "/src/h3/src/apps/fuzzers/fuzzerEdgeLength.c", "/src/h3/src/apps/fuzzers/fuzzerGridDisk.c", "/src/h3/src/apps/fuzzers/fuzzerHierarchy.c", "/src/h3/src/apps/fuzzers/fuzzerIndexIO.c", "/src/h3/src/apps/fuzzers/fuzzerInternalAlgos.c", "/src/h3/src/apps/fuzzers/fuzzerInternalCoordIjk.c", "/src/h3/src/apps/fuzzers/fuzzerLatLngToCell.c", "/src/h3/src/apps/fuzzers/fuzzerLocalIj.c", "/src/h3/src/apps/fuzzers/fuzzerPolygonToCells.c", "/src/h3/src/apps/fuzzers/fuzzerPolygonToCellsNoHoles.c", "/src/h3/src/apps/fuzzers/fuzzerResolutions.c", "/src/h3/src/apps/fuzzers/fuzzerVertexes.c", ]
  
  #
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DH3_PREFIX= -DH3_USE_LIBFUZZER=1 -I/src/h3//src/apps/applib/include -I/src/h3//src/h3lib/include -I/src/h3//build/src/h3lib/include -o fuzzerResolutions.o -c /src/h3//src/apps/fuzzers/fuzzerResolutions.c
  
  #
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer -rdynamic fuzzerLatLngToCell.o -o /out/fuzzerLatLngToCell lib/libh3.a

  hiredis:
    language: "c"
    image: "fuzzdrivergpt/hiredis:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libhiredis.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-std=c99","-pedantic","-fPIC", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libhiredis.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/hiredis/format_command_fuzzer.c" ]
  
  # + clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -std=c99 -pedantic -c -O3 -fPIC format_command_fuzzer.c -o format_command_fuzzer.o
  #
  #  + clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -O3 -fPIC -fsanitize=fuzzer format_command_fuzzer.o -o /out/format_command_fuzzer libhiredis.a
  #
  #
  
  
  
  #  /src/hiredis/format_command_fuzzer.c

  hoextdown:
    language: "c"
    image: "fuzzdrivergpt/hoextdown:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libhoedown.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-c","-std=c99" ]
    build: "COMPBASE OUTFILE /src/hoextdown/libhoedown.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/hoextdown/test/hoedown_fuzzer.c" ]
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -c -std=c99 -Isrc /src/hoextdown/test/hoedown_fuzzer.c -o /work/hoedown_fuzzer.o
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -Isrc /work/hoedown_fuzzer.o -o /out/hoedown_fuzzer -fsanitize=fuzzer /src/hoextdown/libhoedown.a

  htslib:
    language: "c"
    image: "fuzzdrivergpt/htslib:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libhts.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-Wall","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fvisibility=hidden","-I/src","-I/src/htslib","-I/src/htslib/htscodecs/htscodecs"]
    build: "COMPBASE OUTFILE  -lbz2 /src/htslib/libhts.a -lz -llzma -lcurl -lcrypto -lpthread -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/htslib/test/fuzz/hts_open_fuzzer.c" ]
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o /out/hts_open_fuzzer test/fuzz/hts_open_fuzzer.o -fsanitize=fuzzer libhts.a -lz -lbz2 -llzma -lcurl -lcrypto -lpthread
  #
  #
  #clang -Wall -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fvisibility=hidden  -I.  -c -o test/fuzz/hts_open_fuzzer.o test/fuzz/hts_open_fuzzer.c

  igraph:
    language: "c"
    image: "fuzzdrivergpt/igraph:env"
    apiblocklist: [ "^$" ]
    precode: '#include "igraph/igraph.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libigraph.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ,"-I/root/workspace/fuzzdrivergpt/install/include","-I/src/deps/include/libxml2","-DLIBXML_STATIC"]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libigraph.a -L/src/deps/lib -lxml2 -lm -ldl -o OUTEXE"
    compile_cpp: [ "clang++", "-fsanitize=address", "-fsanitize=fuzzer", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-I/root/workspace/fuzzdrivergpt/install/include", "-I/src/deps/include/libxml2", "-DLIBXML_STATIC", "-Wno-unused-variable", "-Wno-newline-eof", "-Wno-unused-but-set-variable", "-Wno-implicit-function-declaration", "-stdlib=libc++", "-Wno-deprecated" ]
    build_cpp: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libigraph.a -L/src/deps/lib -lxml2 -lm -ldl -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ["/src/igraph/fuzzing/bliss_fuzzer.cpp","/src/igraph/fuzzing/read_graphml_fuzzer.cpp","/src/igraph/fuzzing/edge_connectivity_fuzzer.cpp","/src/igraph/fuzzing/read_lgl_fuzzer.cpp","/src/igraph/fuzzing/read_dl_fuzzer.cpp","/src/igraph/fuzzing/read_ncol_fuzzer.cpp","/src/igraph/fuzzing/read_edgelist_fuzzer.cpp","/src/igraph/fuzzing/read_pajek_fuzzer.cpp","/src/igraph/fuzzing/read_gml_fuzzer.cpp","/src/igraph/fuzzing/vertex_connectivity_fuzzer.cpp","/src/igraph/fuzzing/read_graphdb_fuzzer.cpp","/src/igraph/fuzzing/vertex_separators_fuzzer.cpp" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -I/src/igraph/build/include -I/src/igraph/include -o read_edgelist_fuzzer.o -c ./fuzzing/read_edgelist_fuzzer.cpp
  #
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer read_edgelist_fuzzer.o -o /out/read_edgelist_fuzzer ./build/src/libigraph.a -I/src/deps/include/libxml2 -DLIBXML_STATIC -L/src/deps/lib -lxml2 -lm -ldl

  inchi:
    language: "c"
    image: "fuzzdrivergpt/inchi:env"
    apiblocklist: [ "^$" ]
    precode: '#include "ichi.h"\n#include "inchi_api.h"\n#include "inchi_gui.h"\n#include "inchicmp.h"\n#include "ichi_bns.h"\n#include "ichi_io.h"\n#include "ichicano.h"\n#include "ichicant.h"\n#include "ichicomn.h"\n#include "ichicomp.h"\n#include "ichidrp.h"\n#include "ichierr.h"\n#include "ichimain.h"\n#include "ichimake.h"\n#include "ichinorm.h"\n#include "ichiring.h"\n#include "ichirvrs.h"\n#include "ichisize.h"\n#include "ichister.h"\n#include "ichitaut.h"\n#include "ichitime.h"\n#include "ikey_base26.h"\n#include "extr_ct.h"\n#include "incomdef.h"\n#include "inpdef.h"\n#include "ixa.h"\n#include "mode.h"\n#include "mol_fmt.h"\n#include "readinch.h"\n#include "sha2.h"\n#include "strutil.h"\n#include "util.h"\n#include "ixa_mol.h"\n#include "ixa_status.h"\n#include "inchi_dll.h"\n#include "inchi_dll_a.h"\n#include "inchi_dll_b.h"\n#include "inchi_dll_main.h"\n'
    headers: {
      "/src/INCHI-1-SRC/INCHI_BASE/src" : "*.h",
      "/src/INCHI-1-SRC/INCHI_API/libinchi/src/ixa" : "*.h",
      "/src/INCHI-1-SRC/INCHI_API/libinchi/src" : "*.h"
    }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libinchi.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-fsanitize-address-use-after-scope", "-I/src/INCHI-1-SRC/INCHI_BASE/src/","-I/src/INCHI-1-SRC/INCHI_API/libinchi/src/","-I/src/INCHI-1-SRC/INCHI_API/libinchi/src/ixa/", "-Wno-everything", "-DTARGET_API_LIB", "-DCOMPILE_ANSI_ONLY", "-ansi" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libinchi.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/inchi_input_fuzzer.c"]
  
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I INCHI_BASE/src/ -I INCHI_API/libinchi/src/ -I INCHI_API/libinchi/src/ixa/ /src/inchi_input_fuzzer.c -c -o inchi_input_fuzzer.o
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ inchi_input_fuzzer.o -o /out/inchi_input_fuzzer -fsanitize=fuzzer /work/libinchi.a


  janet:
    language: "c"
    image: "fuzzdrivergpt/janet:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libjanet.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-D_XOPEN_SOURCE=600","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fPIC","-DJANET_BOOTSTRAP","-I/src/janet/src/include","-I/src/janet/src/conf","-std=c99","-fPIC"  ]
    build: "COMPBASE OUTFILE /src/janet/build/libjanet.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/janet/test/fuzzers/fuzz_dostring.c" ]
  
  #
  #+ clang -D_XOPEN_SOURCE=600 -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIC -DJANET_BOOTSTRAP -Isrc/include -Isrc/conf -std=c99 -fPIC -o fuzz_dostring.o -c ./test/fuzzers/fuzz_dostring.c
  #
  #  clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer fuzz_dostring.o /src/janet/build/libjanet.a -o /out/fuzz_dostring

  jansson:
    language: "c"
    image: "fuzzdrivergpt/jansson:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libjansson.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DHAVE_CONFIG_H","-fsanitize=fuzzer","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/jansson/src/.libs/libjansson.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/jansson/test/ossfuzz/json_load_dump_fuzzer.cc" ]
  
  
  #clang++ -DHAVE_CONFIG_H    -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -MT json_load_dump_fuzzer-json_load_dump_fuzzer.o -MD -MP -MF .deps/json_load_dump_fuzzer-json_load_dump_fuzzer.Tpo -c -o json_load_dump_fuzzer-json_load_dump_fuzzer.o `test -f 'json_load_dump_fuzzer.cc' || echo './'`json_load_dump_fuzzer.cc          -I. -I../..  -I../../src -I../../src
  #clang++ -DHAVE_CONFIG_H -I. -I../..  -I../../src -I../../src   -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -MT libstandaloneengine_a-standaloneengine.o -MD -MP -MF .deps/libstandaloneengine_a-standaloneengine.Tpo -c -o libstandaloneengine_a-standaloneengine.o `test -f 'standaloneengine.cc' || echo './'`standaloneengine.cc
  #mv -f .deps/libstandaloneengine_a-standaloneengine.Tpo .deps/libstandaloneengine_a-standaloneengine.Po
  #rm -f libstandaloneengine.a
  #ar cru libstandaloneengine.a libstandaloneengine_a-standaloneengine.o
  #/bin/bash ../../libtool  --tag=CXX   --mode=link clang++  -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++  -static  -o json_load_dump_fuzzer json_load_dump_fuzzer-json_load_dump_fuzzer.o ../../src/libjansson.la
  #
  #libtool: link: clang++ -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o json_load_dump_fuzzer json_load_dump_fuzzer-json_load_dump_fuzzer.o  ../../src/.libs/libjansson.a

  janus-gateway:
    language: "c"
    image: "fuzzdrivergpt/janus-gateway:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/src/ins/lib/janus/events/libjanus_gelfevh.a","/src/ins/lib/janus/plugins/libjanus_echotest.a","/src/ins/lib/janus/plugins/libjanus_nosip.a","/src/ins/lib/janus/plugins/libjanus_recordplay.a","/src/ins/lib/janus/plugins/libjanus_streaming.a","/src/ins/lib/janus/plugins/libjanus_textroom.a","/src/ins/lib/janus/plugins/libjanus_videocall.a","/src/ins/lib/janus/plugins/libjanus_videoroom.a","/src/ins/lib/janus/transports/libjanus_pfunix.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-c","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/usr/include/glib-2.0","-I/usr/lib/x86_64-linux-gnu/glib-2.0/include","-I/src/janus-gateway/src","-Wl,-Bdynamic","-Wl,-Bstatic" ]
    build: "COMPBASE OUTFILE /work/janus-lib.a -lglib-2.0 -ljansson -pthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/janus-gateway/fuzzers/rtp_fuzzer.c","" ]
  
  #++ clang -c -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  -I/src/janus-gateway/src /src/janus-gateway/fuzzers/rtp_fuzzer.c -o /work/rtp_fuzzer.o
  #  ++ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ /work/rtp_fuzzer.o -o /out/rtp_fuzzer -fsanitize=fuzzer /work/janus-lib.a  -lglib-2.0 -ljansson -pthread -Wl,-Bdynamic -Wl,-Bstatic

  kamailio:
    language: "c"
    image: "fuzzdrivergpt/kamailio:env"
    apiblocklist: [ "^$" ]
    precode: '#include "hf.h"\n#include "keys.h"\n#include "msg_parser.h"\n#include "parse_addr_spec.h"\n#include "parse_allow.h"\n#include "parse_body.h"\n#include "parse_content.h"\n#include "parse_cseq.h"\n#include "parse_date.h"\n#include "parse_def.h"\n#include "parse_disposition.h"\n#include "parse_diversion.h"\n#include "parse_event.h"\n#include "parse_expires.h"\n#include "parse_fline.h"\n#include "parse_from.h"\n#include "parse_hname2.h"\n#include "parse_identity.h"\n#include "parse_identityinfo.h"\n#include "parse_methods.h"\n#include "parse_nameaddr.h"\n#include "parse_option_tags.h"\n#include "parse_param.h"\n#include "parse_ppi_pai.h"\n#include "parse_privacy.h"\n#include "parse_refer_to.h"\n#include "parse_require.h"\n#include "parse_retry_after.h"\n#include "parse_rpid.h"\n#include "parse_rr.h"\n#include "parse_sipifmatch.h"\n#include "parse_subscription_state.h"\n#include "parse_supported.h"\n#include "parse_to.h"\n#include "parse_uri.h"\n#include "parse_via.h"\n#include "parser_f.h"\n'
    headers: { "/src/kamailio/src/core/parser" : "*.h" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libkamilio.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link", "-DFAST_LOCK","-D__CPU_i386","-I/src/kamailio/src/core/parser"]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libkamilio.a -ldl -lresolv -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [
      "/src/kamailio/misc/fuzz/fuzz_parse_msg.c",
      "/src/kamailio/misc/fuzz/fuzz_uri.c"
    ]
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer ./misc/fuzz/fuzz_uri.c -o /out/fuzz_uri -DFAST_LOCK -D__CPU_i386 ./src/libkamilio.a -I./src/ -I./src/core/parser -ldl -lresolv -lm
  #
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer ./misc/fuzz/fuzz_parse_msg.c -o /out/fuzz_parse_msg -DFAST_LOCK -D__CPU_i386 ./src/libkamilio.a -I./src/ -I./src/core/parser -ldl -lresolv -lm

  krb5:
    language: "c"
    image: "fuzzdrivergpt/krb5:env"
    apiblocklist: [ "^$" ]
    precode: '#include "./com_err.h"\n#include "./kdb.h"\n#include "./krad.h"\n#include "./krb5.h"\n#include "./profile.h"\n#include "./verto-module.h"\n#include "./verto.h"\n#include "./gssapi.h"\n#include "./gssapi/gssapi.h"\n#include "./gssapi/gssapi_alloc.h"\n#include "./gssapi/gssapi_ext.h"\n#include "./gssapi/gssapi_generic.h"\n#include "./gssapi/gssapi_krb5.h"\n#include "./gssapi/mechglue.h"\n#include "./gssrpc/types.h"\n#include "./gssrpc/auth.h"\n#include "./gssrpc/auth_gss.h"\n#include "./gssrpc/auth_gssapi.h"\n#include "./gssrpc/auth_unix.h"\n#include "./gssrpc/clnt.h"\n#include "./gssrpc/netdb.h"\n#include "./gssrpc/pmap_clnt.h"\n#include "./gssrpc/pmap_prot.h"\n#include "./gssrpc/pmap_rmt.h"\n#include "./gssrpc/rename.h"\n#include "./gssrpc/rpc.h"\n#include "./gssrpc/rpc_msg.h"\n#include "./gssrpc/svc.h"\n#include "./gssrpc/svc_auth.h"\n#include "./gssrpc/xdr.h"\n#include "./kadm5/admin.h"\n#include "./kadm5/chpass_util_strings.h"\n#include "./kadm5/kadm_err.h"\n#include "./krb5/krb5.h"\n#include "./krb5/ccselect_plugin.h"\n#include "./krb5/certauth_plugin.h"\n#include "./krb5/clpreauth_plugin.h"\n#include "./krb5/hostrealm_plugin.h"\n#include "./krb5/kadm5_auth_plugin.h"\n#include "./krb5/kadm5_hook_plugin.h"\n#include "./krb5/kdcpolicy_plugin.h"\n#include "./krb5/kdcpreauth_plugin.h"\n#include "./krb5/localauth_plugin.h"\n#include "./krb5/locate_plugin.h"\n#include "./krb5/plugin.h"\n#include "./krb5/preauth_plugin.h"\n#include "./krb5/pwqual_plugin.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: ["/root/workspace/fuzzdrivergpt/install/lib/libkrb5_test.a","/root/workspace/fuzzdrivergpt/install/lib/libgssrpc.a","/root/workspace/fuzzdrivergpt/install/lib/libkadm5srv_mit.a","/root/workspace/fuzzdrivergpt/install/lib/libkadm5clnt.a","/root/workspace/fuzzdrivergpt/install/lib/libkrb5_k5tls.a","/root/workspace/fuzzdrivergpt/install/lib/libkdb5.a","/root/workspace/fuzzdrivergpt/install/lib/libgssapi_krb5.a","/root/workspace/fuzzdrivergpt/install/lib/libkadm5clnt_mit.a","/root/workspace/fuzzdrivergpt/install/lib/libverto.a","/root/workspace/fuzzdrivergpt/install/lib/libkrb5_db2.a","/root/workspace/fuzzdrivergpt/install/lib/libkrb5support.a","/root/workspace/fuzzdrivergpt/install/lib/libk5crypto.a","/root/workspace/fuzzdrivergpt/install/lib/libkadm5srv.a","/root/workspace/fuzzdrivergpt/install/lib/libkrb5_spake.a","/root/workspace/fuzzdrivergpt/install/lib/libkrad.a","/root/workspace/fuzzdrivergpt/install/lib/libkrb5.a","/root/workspace/fuzzdrivergpt/install/lib/libcom_err.a","/root/workspace/fuzzdrivergpt/install/lib/libkrb5_otp.a","/root/workspace/fuzzdrivergpt/install/lib/libkrb5_pkinit.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DHAVE_CONFIG_H","-DKRB5_DEPRECATED=1","-DKRB5_PRIVATE","-DHAS_STDARG","-fcommon","-Wall","-Werror", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE -o OUTEXE /root/workspace/fuzzdrivergpt/install/lib/libkrb5.a /root/workspace/fuzzdrivergpt/install/lib/libk5crypto.a /root/workspace/fuzzdrivergpt/install/lib/libcom_err.a /root/workspace/fuzzdrivergpt/install/lib/libkrb5support.a /root/workspace/fuzzdrivergpt/install/lib/libgssrpc.a /root/workspace/fuzzdrivergpt/install/lib/libkadm5clnt.a /root/workspace/fuzzdrivergpt/install/lib/libkadm5clnt_mit.a /root/workspace/fuzzdrivergpt/install/lib/libkadm5srv.a /root/workspace/fuzzdrivergpt/install/lib/libkadm5srv_mit.a /root/workspace/fuzzdrivergpt/install/lib/libkdb5.a /root/workspace/fuzzdrivergpt/install/lib/libkrad.a /root/workspace/fuzzdrivergpt/install/lib/libkrb5_db2.a /root/workspace/fuzzdrivergpt/install/lib/libkrb5_k5tls.a /root/workspace/fuzzdrivergpt/install/lib/libkrb5_otp.a /root/workspace/fuzzdrivergpt/install/lib/libkrb5_pkinit.a /root/workspace/fuzzdrivergpt/install/lib/libkrb5_spake.a /root/workspace/fuzzdrivergpt/install/lib/libkrb5_test.a /root/workspace/fuzzdrivergpt/install/lib/libgssapi_krb5.a /root/workspace/fuzzdrivergpt/install/lib/libverto.a -lresolv"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ["/src/krb5/fuzzing/Fuzz_chpw.c","/src/krb5/fuzzing/Fuzz_krb5.c","/src/krb5/fuzzing/Fuzz_ndr.c","/src/krb5/fuzzing/Fuzz_profile.c","/src/krb5/fuzzing/Fuzz_json.c","/src/krb5/fuzzing/Fuzz_marshal.c","/src/krb5/fuzzing/Fuzz_pac.c" ]
  
  #
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DHAVE_CONFIG_H -DKRB5_DEPRECATED=1 -DKRB5_PRIVATE -DHAS_STDARG -fcommon -Wall -Werror  -I./../src/include/ -I./../src/kdc/ -I./../src/lib/krb5/ccache/ -I./../src/util/profile/ -c Fuzz_json.c
  #
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -L./../src/lib/ -fcommon -o Fuzz_chpw Fuzz_chpw.o -fsanitize=fuzzer -lkrb5 -lk5crypto -lcom_err -lkrb5support -lresolv

  lcms:
    language: "c"
    image: "fuzzdrivergpt/lcms:env"
    apiblocklist: [ "^$" ]
    precode: '#include "lcms2.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/lcms.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/lcms/src/.libs/liblcms2.a -lm -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/cmsIT8_load_fuzzer.c","/src/cms_overwrite_transform_fuzzer.c","/src/cms_profile_fuzzer.c","/src/cms_transform_all_fuzzer.c","/src/cms_transform_extended_fuzzer.c","/src/cms_transform_fuzzer.c","/src/cms_universal_transform_fuzzer.c" ]
  
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ /src/cms_universal_transform_fuzzer.o -o /out/cms_universal_transform_fuzzer -fsanitize=fuzzer src/.libs/liblcms2.a

  libarchive:
    language: "c"
    image: "fuzzdrivergpt/libarchive:env"
    apiblocklist: [ "^$" ]
    precode: '#include <assert.h>\n#include "archive.h"\n#include "archive_entry.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libarchive.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ,"-Wl,-Bstatic -llzo2","-Wl,-Bdynamic","-DLIBARCHIVE_STATIC"]
    build: "COMPBASE OUTFILE -lz -lbz2 -llzma -llz4 -lcrypto -lxml2 -lacl -lssl -L/usr/local/lib -lm /root/workspace/fuzzdrivergpt/install/lib/libarchive.a -llzo2 /deps/libxml2.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libarchive_fuzzer.cc" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -I../libarchive /src/libarchive_fuzzer.cc -o /out/libarchive_fuzzer -fsanitize=fuzzer ./libarchive/libarchive.a -Wl,-Bstatic -llzo2 -lcrypto -lacl -llzma -llz4 -lbz2 -lz /deps/libxml2.a


  libass:
    language: "c"
    image: "fuzzdrivergpt/libass:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libass.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION" ]
    build: "COMPBASE OUTFILE /usr/lib/libFuzzingEngine.a /usr/lib/x86_64-linux-gnu/libfreetype.a /src/libass/libass/.libs/libass.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libass/fuzz/fuzz.c" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -stdlib=libc++ -std=c++11 -o fuzz
  #/fuzz_ossfuzz fuzz/fuzz-fuzz.o /usr/lib/libFuzzingEngine.a libass/.libs/libass.a -Wl,-Bstatic -Wl,-Bdynamic -fsanitize=address

  libavif:
    language: "c"
    image: "fuzzdrivergpt/libavif:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libavif.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libavif/build/libavif.a /src/libavif/ext/dav1d/build/src/libdav1d.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libavif/tests/oss-fuzz/avif_decode_fuzzer.cc" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I../include ../tests/oss-fuzz/avif_decode_fuzzer.cc -o /out/avif_decode_fuzzer -fsanitize=fuzzer libavif.a ../ext/dav1d/build/src/libdav1d.a


  libbpf:
    language: "c"
    image: "fuzzdrivergpt/libbpf:env"
    apiblocklist: [ "^$" ]
    precode: '#include <errno.h>\n#include <linux/types.h>\n#include <stdbool.h>\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libbpf.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include", "-D_LARGEFILE64_SOURCE", "-D_FILE_OFFSET_BITS=64", "-I/src/libbpf/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libbpf.a /src/libbpf/elfutils/libelf/libelf.a -l:libz.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libbpf/fuzz/bpf-object-fuzzer.c" ]

  libcbor:
    language: "c"
    image: "fuzzdrivergpt/libcbor:env"
    apiblocklist: [ "^$" ]
    precode: '#include "cbor.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libcbor.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libcbor/build/src/libcbor.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libcbor/oss-fuzz/cbor_load_fuzzer.cc" ]
  
  #
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/work/include ../oss-fuzz/cbor_load_fuzzer.cc -o /out/cbor_load_fuzzer -fsanitize=fuzzer src/libcbor.a

  libcoap:
    language: "c"
    image: "fuzzdrivergpt/libcoap:env"
    apiblocklist: [ "^$" ]
    precode: '#include "coap3/coap_forward_decls.h"\n#include "coap3/libcoap.h"\n#include "coap3/coap.h"\n#include "coap3/pdu.h"\n#include "coap3/coap_net.h"\n#include "coap3/block.h"\n#include "coap3/coap_cache.h"\n#include "coap3/coap_event.h"\n#include "coap3/coap_net.h"\n#include "coap3/coap_session.h"\n#include "coap3/coap_uri.h"\n#include "coap3/coap.h"\n#include "coap3/coap_debug.h"\n#include "coap3/coap_forward_decls.h"\n#include "coap3/coap_option.h"\n#include "coap3/coap_str.h"\n#include "coap3/coap_address.h"\n#include "coap3/coap_dtls.h"\n#include "coap3/coap_io.h"\n#include "coap3/coap_oscore.h"\n#include "coap3/coap_subscribe.h"\n#include "coap3/coap_async.h"\n#include "coap3/coap_encode.h"\n#include "coap3/coap_mem.h"\n#include "coap3/coap_prng.h"\n#include "coap3/coap_time.h"\n#include "coap3/resource.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libcoap-3.a","/root/workspace/fuzzdrivergpt/install/lib/libcoap-3-notls.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-pedantic","-Wall","-Wcast-qual","-Wextra","-Wformat-security","-Winline","-Wmissing-declarations","-Wmissing-prototypes","-Wnested-externs","-Wpointer-arith","-Wshadow","-Wstrict-prototypes","-Wswitch-default","-Wswitch-enum","-Wunused","-Wwrite-strings","-Wunused-result","-gdwarf-4","-std=c99","-Wno-missing-prototypes","-Wno-missing-declarations","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libcoap/.libs/libcoap-3-notls.a -lFuzzingEngine -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libcoap/tests/oss-fuzz/pdu_parse_target.c","/src/libcoap/tests/oss-fuzz/split_uri_target.c" ]
  
  
  #clang -I../../include -I../../include -pedantic -Wall -Wcast-qual -Wextra -Wformat-security -Winline -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wpointer-arith -Wshadow -Wstrict-prototypes -Wswitch-default -Wswitch-enum -Wunused -Wwrite-strings  -Wunused-result -gdwarf-4  -std=c99 -Wno-missing-prototypes -Wno-missing-declarations -c pdu_parse_target.c -o /out/pdu_parse_target.o
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -I../../include -I../../include   -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ /out/pdu_parse_target.o ../../.libs/libcoap-3-notls.a  -lFuzzingEngine  -o /out/pdu_parse_fuzzer


  libdwarf:
    language: "c"
    image: "fuzzdrivergpt/libdwarf:env"
    apiblocklist: [ "^$" ]
    precode: '#include <fcntl.h>\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib64/libdwarf.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-g", "-Werror", "-I/root/workspace/fuzzdrivergpt/install/include", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib64/libdwarf.a -lz -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz_init_binary.c", "/src/fuzz_init_path.c", ]


  libevent:
    language: "c"
    image: "fuzzdrivergpt/libevent:env"
    apiblocklist: [ "^$" ]
    precode: '#include "event.h"\n#include "evdns.h"\n#include "event2/dns.h"\n#include "evhttp.h"\n#include "evrpc.h"\n#include "evutil.h"\n#include "event2/buffer.h"\n#include "event2/dns_compat.h"\n#include "event2/http.h"\n#include "event2/rpc_compat.h"\n#include "event2/visibility.h"\n#include "event2/buffer_compat.h"\n#include "event2/dns_struct.h"\n#include "event2/http_compat.h"\n#include "event2/rpc_struct.h"\n#include "event2/watch.h"\n#include "event2/bufferevent.h"\n#include "event2/event-config.h"\n#include "event2/http_struct.h"\n#include "event2/tag.h"\n#include "event2/ws.h"\n#include "event2/bufferevent_compat.h"\n#include "event2/event.h"\n#include "event2/keyvalq_struct.h"\n#include "event2/tag_compat.h"\n#include "event2/bufferevent_struct.h"\n#include "event2/event_compat.h"\n#include "event2/listener.h"\n#include "event2/thread.h"\n#include "event2/event_struct.h"\n#include "event2/rpc.h"\n#include "event2/util.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [
      "/root/workspace/fuzzdrivergpt/install/lib/libevent.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libevent_core.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libevent_pthreads.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libevent_extra.a"
    ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libevent/build/lib/libevent.a /src/libevent/build/lib/libevent_core.a /src/libevent/build/lib/libevent_pthreads.a /src/libevent/build/lib/libevent_extra.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/parse_query_fuzzer.cc","/src/utils_fuzzer.cc","/src/fuzz_request_cb.c"]
  
  # /src/libevent/build
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I../ -Iinclude /src/parse_query_fuzzer.cc -fsanitize=fuzzer /src/libevent/build/lib/libevent.a /src/libevent/build/lib/libevent_core.a /src/libevent/build/lib/libevent_pthreads.a /src/libevent/build/lib/libevent_extra.a -o /out/parse_query_fuzzer

  libexif:
    language: "c"
    image: "fuzzdrivergpt/libexif:env"
    apiblocklist: [ "^$" ]
    precode: '#include <assert.h>\n#include "libexif/exif-data-type.h"\n#include "libexif/exif-format.h"\n#include "libexif/exif-log.h"\n#include "libexif/exif-tag.h"\n#include "libexif/exif-byte-order.h"\n#include "libexif/exif-data.h"\n#include "libexif/exif-ifd.h"\n#include "libexif/exif-mem.h"\n#include "libexif/exif-utils.h"\n#include "libexif/exif-content.h"\n#include "libexif/exif-entry.h"\n#include "libexif/exif-loader.h"\n#include "libexif/exif-mnote-data.h"\n'
    headers: { "/work/include" : "**/*" }
    binaries: [ "/work/lib/libexif.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/work/include" ]
    build: "COMPBASE OUTFILE /work/lib/libexif.a -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/exif_from_data_fuzzer.cc","/src/exif_loader_fuzzer.cc" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/work/include /src/exif_from_data_fuzzer.cc -o /out/exif_from_data_fuzzer -fsanitize=fuzzer /work/lib/libexif.a

  libfido2:
    language: "c"
    image: "fuzzdrivergpt/libfido2:env"
    apiblocklist: [ "^$" ]
    precode: '#include "cbor.h"\n#include "zconf.h"\n#include "zlib.h"\n#include "fido.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libfido2.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DFIDO_FUZZ","-DHAVE_ASPRINTF","-DHAVE_CLOCK_GETTIME","-DHAVE_DEV_URANDOM","-DHAVE_ENDIAN_H","-DHAVE_ERR_H","-DHAVE_GETLINE","-DHAVE_GETOPT","-DHAVE_GETPAGESIZE","-DHAVE_GETRANDOM","-DHAVE_OPENSSLV_H","-DHAVE_SIGNAL_H","-DHAVE_STRSEP","-DHAVE_SYSCONF","-DHAVE_SYS_RANDOM_H","-DHAVE_UNISTD_H","-DTLS=__thread","-DUSE_NFC","-DUSE_PCSC","-D_FIDO_MAJOR=1","-D_FIDO_MINOR=13","-D_FIDO_PATCH=0","-I/src/libfido2/src","-I/work/include","-I/usr/include/PCSC","-D_POSIX_C_SOURCE=200809L","-D_BSD_SOURCE","-D_GNU_SOURCE","-D_DEFAULT_SOURCE","-std=c99","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-g","-g2","-fno-omit-frame-pointer","-fPIE","-Wall","-Wextra","-Werror","-Wshadow","-Wcast-qual","-Wwrite-strings","-Wmissing-prototypes","-Wbad-function-cast","-Wimplicit-fallthrough","-pedantic","-pedantic-errors","-Wshorten-64-to-32","-fstack-protector-all","-Wl,-z,noexecstack","-Wl,-z,relro,-z,now","-rdynamic","-Wl,-rpath,/work/lib:/src/libfido2/build/src"]
    build: "COMPBASE OUTFILE -L/work/lib  -L/usr/lib/gcc/x86_64-linux-gnu/9  -L/usr/local/lib /src/libfido2/build/src/libfido2.so.1.13.0 -lcbor -lcrypto -ludev -lz -lpcsclite -lpthread -lrt -lm -ldl -lgcc -lgcc_s -lc -lgcc -lgcc_s -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ['/src/libfido2/fuzz/fuzz_mgmt.c', '/src/libfido2/fuzz/fuzz_cred.c', '/src/libfido2/fuzz/fuzz_assert.c', '/src/libfido2/fuzz/fuzz_pcsc.c', '/src/libfido2/fuzz/fuzz_credman.c', '/src/libfido2/fuzz/fuzz_hid.c', '/src/libfido2/fuzz/fuzz_bio.c', '/src/libfido2/fuzz/fuzz_largeblob.c', '/src/libfido2/fuzz/fuzz_netlink.c']
  
  #
  #/usr/local/bin/clang -DFIDO_FUZZ -DHAVE_ASPRINTF -DHAVE_CLOCK_GETTIME -DHAVE_DEV_URAN DOM -DHAVE_ENDIAN_H -DHAVE_ERR_H -DHAVE_GETLINE -DHAVE_GETOPT -DHAVE_GETPAGESIZE -DHAVE_GETRANDOM -DHAVE_OPENSSLV_H -DHAVE_SIGNAL_H -DHAVE_STRSEP -DHAVE_SYSCONF -DHAVE_SYS_RANDOM_H -DHAVE_UNISTD_H -DTLS=__thread -DUSE_NFC -DUSE_PCSC -D_FIDO_MAJOR=1 -D_FIDO_MINOR=13 -D_FIDO_PATCH=0 -I/src/libfido2/src -I/work/include -I/usr/include/PCSC -D_POSIX_C_SOURCE=200809L -D_BSD_SOURCE -D_GNU_SOURCE -D_DEFAULT_SOURCE -std=c99 -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -g -g2 -fno-omit-frame-pointer -fPIE -Wall -Wextra -Werror -Wshadow -Wcast-qual -Wwrite-strings -Wmissing-prototypes -Wbad-function-cast -Wimplicit-fallthrough -pedantic -pedantic-errors -Wshorten-64-to-32 -fstack-protector-all -MD -MT fuzz/CMakeFiles/fuzz_mgmt.dir/fuzz_mgmt.c.o -MF CMakeFiles/fuzz_mgmt.dir/fuzz_mgmt.c.o.d -o CMakeFiles/fuzz_mgmt.dir/fuzz_mgmt.c.o -c /src/libfido2/fuzz/fuzz_mgmt.c
  #/usr/local/bin/clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -g  -Wl,-z,noexecstack -Wl,-z,relro,-z,now -rdynamic -fsanitize=fuzzer CMakeFiles/fuzz_mgmt.dir/fuzz_mgmt.c.o CMakeFiles/fuzz_mgmt.dir/libfuzzer.c.o CMakeFiles/fuzz_mgmt.dir/mutator_aux.c.o "CMakeFiles/fuzz_mgmt.dir/__/openbsd-compat/strlcpy.c.o" "CMakeFiles/fuzz_mgmt.dir/__/openbsd-compat/strlcat.c.o" -o fuzz_mgmt   -L/work/lib  -L/usr/lib/gcc/x86_64-linux-gnu/9  -L/usr/local/lib  -Wl,-rpath,/work/lib:/src/libfido2/build/src ../src/libfido2.so.1.13.0 -lcbor -lcrypto -ludev -lz -lpcsclite -lpthread -lrt -lm -ldl -lgcc -lgcc_s -lc -lgcc -lgcc_s

  libgd:
    language: "c"
    image: "fuzzdrivergpt/libgd:env"
    apiblocklist: [ "^$" ]
    precode: '#include "gd.h"\n#include "gd_color_map.h"\n#include "gd_errors.h"\n#include "gd_io.h"\n#include "gdcache.h"\n#include "gdfontg.h"\n#include "gdfontl.h"\n#include "gdfontmb.h"\n#include "gdfonts.h"\n#include "gdfontt.h"\n#include "gdfx.h"\n#include "gdpp.h"\n'
    headers: { "/work/include" : "**/*" }
    binaries: [ "/work/lib/libgd.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/work/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-L/work/lib","-Wl,-Bstatic","-Wl,-Bdynamic"]
    build: "COMPBASE OUTFILE -lgd -lz -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/gd_image_string_fuzzer.cc" ]
  
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/work/include -L/work/lib /src/gd_image_string_fuzzer.cc -o /out/gd_image_string_fuzzer -fsanitize=fuzzer -lgd -Wl,-Bstatic -lz -Wl,-Bdynamic

  libical:
    language: "c"
    image: "fuzzdrivergpt/libical:env"
    apiblocklist: [ "^$" ]
    precode: '#include "libical/ical.h"\n#include "libical/icalarray.h"\n#include "libical/icalattach.h"\n#include "libical/icalcalendar.h"\n#include "libical/icalclassify.h"\n#include "libical/icalcluster.h"\n#include "libical/icalcomponent.h"\n#include "libical/icalderivedparameter.h"\n#include "libical/icalderivedproperty.h"\n#include "libical/icalderivedvalue.h"\n#include "libical/icaldirset.h"\n#include "libical/icaldirsetimpl.h"\n#include "libical/icalduration.h"\n#include "libical/icalenums.h"\n#include "libical/icalerror.h"\n#include "libical/icalfileset.h"\n#include "libical/icalfilesetimpl.h"\n#include "libical/icalgauge.h"\n#include "libical/icalgaugeimpl.h"\n#include "libical/icallangbind.h"\n#include "libical/icalmemory.h"\n#include "libical/icalmessage.h"\n#include "libical/icalmime.h"\n#include "libical/icalparameter.h"\n#include "libical/icalparser.h"\n#include "libical/icalperiod.h"\n#include "libical/icalproperty.h"\n#include "libical/icalrecur.h"\n#include "libical/icalrestriction.h"\n#include "libical/icalset.h"\n#include "libical/icalspanlist.h"\n#include "libical/icalss.h"\n#include "libical/icalssyacc.h"\n#include "libical/icaltime.h"\n#include "libical/icaltimezone.h"\n#include "libical/icaltypes.h"\n#include "libical/icaltz-util.h"\n#include "libical/icalvcal.h"\n#include "libical/libical_ical_export.h"\n#include "libical/libical_icalss_export.h"\n#include "libical/libical_vcal_export.h"\n#include "libical/pvl.h"\n#include "libical/sspm.h"\n#include "libical/vcaltmp.h"\n#include "libical/vcc.h"\n#include "libical/vobject.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libical.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /usr/local/lib/libical.a -licalss -licalvcal -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libical_fuzzer.cc","/src/libical_extended_fuzzer.cc" ]
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 /src/libical_fuzzer.cc -fsanitize=fuzzer /usr/local/lib/libical.a -o /out/libical_fuzzer

  libiec61850:
    language: "c"
    image: "fuzzdrivergpt/libiec61850:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libiec61850.a", "/root/workspace/fuzzdrivergpt/install/lib/libhal.a", "/root/workspace/fuzzdrivergpt/install/lib/libhal-shared.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libiec61850.a /root/workspace/fuzzdrivergpt/install/lib/libhal.a /root/workspace/fuzzdrivergpt/install/lib/libhal-shared.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libiec61850/fuzz/fuzz_mms_decode.c" ]


  libjpeg-turbo:
    language: "c"
    image: "fuzzdrivergpt/libjpeg-turbo:env"
    apiblocklist: [ "^$" ]
    precode: '#include <stdbool.h>\n#include "jpeglib.h"\n#include "turbojpeg.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libjpeg.a", "/root/workspace/fuzzdrivergpt/install/lib/libturbojpeg.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-g", "-DNDEBUG", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include", "-fuse-ld=lld" ]
    # not sure whether these two lib files are conflict
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libjpeg.a /root/workspace/fuzzdrivergpt/install/lib/libturbojpeg.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libjpeg-turbo.dev/fuzz/cjpeg.cc", "/src/libjpeg-turbo.dev/fuzz/cjpeg12.cc", "/src/libjpeg-turbo.dev/fuzz/cjpeg16.cc", "/src/libjpeg-turbo.dev/fuzz/compress.cc", "/src/libjpeg-turbo.dev/fuzz/compress_lossless.cc", "/src/libjpeg-turbo.dev/fuzz/compress_yuv.cc", "/src/libjpeg-turbo.dev/fuzz/decompress.cc", "/src/libjpeg-turbo.dev/fuzz/decompress_yuv.cc", "/src/libjpeg-turbo.dev/fuzz/transform.cc" ]

  liblouis:
    language: "c"
    image: "fuzzdrivergpt/liblouis:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/liblouis.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/liblouis.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/liblouis/tests/fuzzing/table_fuzzer.cc" ]


  libmodbus:
    language: "c"
    image: "fuzzdrivergpt/libmodbus:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libmodbus.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-Wall", "-Wextra", "-gline-tables-only", "-fno-omit-frame-pointer", "-fsanitize=address", "-fsanitize=fuzzer-no-link", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libmodbus.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libmodbus/fuzz/FuzzClient.c", "/src/libmodbus/fuzz/FuzzServer.c" ]

  libpcap:
    language: "c"
    image: "fuzzdrivergpt/libpcap:env"
    apiblocklist: [ "^$" ]
    precode: '#include "pcap-bpf.h"\n#include "pcap-namedb.h"\n#include "pcap.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libpcap.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE -L/usr/lib/x86_64-linux-gnu -lssl -L/usr/lib/x86_64-linux-gnu -lcrypto /src/libpcap/build/libpcap.a  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ['/src/libpcap/testprogs/fuzz/fuzz_both.c', '/src/libpcap/testprogs/fuzz/fuzz_filter.c', '/src/libpcap/testprogs/fuzz/fuzz_pcap.c', '/src/libpcap/testprogs/fuzz/fuzz_rclient.c', '/src/libpcap/testprogs/fuzz/fuzz_rserver.c', '/src/libpcap/testprogs/fuzz/onefile.c']
  
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I.. -c ../testprogs/fuzz/fuzz_filter.c -o fuzz_filter.o
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ fuzz_filter.o -o /out/fuzz_filter libpcap.a -fsanitize=fuzzer


  libpg_query:
    language: "c"
    image: "fuzzdrivergpt/libpg_query:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libpg_query.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libpg_query.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libpg_query/test/fuzz/fuzz_parser.c" ]


  libplist:
    language: "c"
    image: "fuzzdrivergpt/libplist:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libplist-2.0.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libplist/src/.libs/libplist-2.0.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ['/src/libplist/fuzz/bplist_fuzzer.cc', '/src/libplist/fuzz/oplist_fuzzer.cc/src/libplist/fuzz/xplist_fuzzer.cc', '/src/libplist/fuzz/jplist_fuzzer.cc']
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -Iinclude/ fuzz/bplist_fuzzer.cc -o /out/bplist_fuzzer -fsanitize=fuzzer src/.libs/libplist-2.0.a

  libpng:
    language: "c"
    image: "fuzzdrivergpt/libpng:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libpng16.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE -lFuzzingEngine /src/libpng/.libs/libpng16.a -lz -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libpng/contrib/oss-fuzz/libpng_read_fuzzer.cc" ]
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I. /src/libpng/contrib/oss-fuzz/libpng_read_fuzzer.cc -o /out/libpng_read_fuzzer -lFuzzingEngine .libs/libpng16.a -lz


  librdkafka:
    language: "c"
    image: "fuzzdrivergpt/librdkafka:env"
    apiblocklist: [ "^$" ]
    precode: '#include "librdkafka/rdkafka.h"\n#include "librdkafka/rdkafka_mock.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/librdkafka.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-g","-fPIC","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ,"-rdynamic"]
    build: "COMPBASE OUTFILE /src/librdkafka/src/librdkafka.a -lm /src/librdkafka/mklove/deps/dest/usr/lib/libzstd.a -lm -lcurl -lsasl2 -lssl -lcrypto -lcrypto -lz -ldl -lpthread -lrt -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ["/src/librdkafka/tests/fuzzers/fuzz_regex.c" ]
  
  #  clang -g -fPIC -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link  -o fuzz_regex.o
  #  + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer -rdynamic fuzz_regex.o -o fuzzer ../src/librdkafka.a -lm /src/librdkafka/mklove/deps/dest/usr/lib/libzstd.a -lsasl2 -lssl -lcrypto -lcrypto -lz -ldl -lpthread -lrt  -I../src -c ./fuzzers/fuzz_regex.c
  #


  libredwg:
    language: "c"
    image: "fuzzdrivergpt/libredwg:env"
    apiblocklist: [ "^$" ]
    precode: '#include "dwg.h"\n#include "dwg_api.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libredwg.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libredwg.a -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libredwg/examples/llvmfuzz.c" ]
  
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAF
  #E_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize
  #=fuzzer-no-link -fsanitize=fuzzer examples/llvmfuzz.c -o /out/llvmfuzz src/.libs/
  #libredwg.a -I./include -I./src

  libressl:
    language: "c"
    image: "fuzzdrivergpt/libressl:env"
    apiblocklist: [ "^$" ]
    precode: '#include "tls.h"\n#include "openssl/aes.h"\n#include "openssl/conf.h"\n#include "openssl/engine.h"\n#include "openssl/objects.h"\n#include "openssl/rc4.h"\n#include "openssl/tls1.h"\n#include "openssl/asn1.h"\n#include "openssl/conf_api.h"\n#include "openssl/err.h"\n#include "openssl/ocsp.h"\n#include "openssl/ripemd.h"\n#include "openssl/ts.h"\n#include "openssl/asn1t.h"\n#include "openssl/crypto.h"\n#include "openssl/evp.h"\n#include "openssl/opensslconf.h"\n#include "openssl/rsa.h"\n#include "openssl/txt_db.h"\n#include "openssl/bio.h"\n#include "openssl/ct.h"\n#include "openssl/gost.h"\n#include "openssl/opensslfeatures.h"\n#include "openssl/safestack.h"\n#include "openssl/ui.h"\n#include "openssl/blowfish.h"\n#include "openssl/curve25519.h"\n#include "openssl/hkdf.h"\n#include "openssl/opensslv.h"\n#include "openssl/sha.h"\n#include "openssl/ui_compat.h"\n#include "openssl/bn.h"\n#include "openssl/des.h"\n#include "openssl/hmac.h"\n#include "openssl/ossl_typ.h"\n#include "openssl/sm3.h"\n#include "openssl/whrlpool.h"\n#include "openssl/buffer.h"\n#include "openssl/dh.h"\n#include "openssl/idea.h"\n#include "openssl/pem.h"\n#include "openssl/sm4.h"\n#include "openssl/x509.h"\n#include "openssl/camellia.h"\n#include "openssl/dsa.h"\n#include "openssl/kdf.h"\n#include "openssl/pem2.h"\n#include "openssl/srtp.h"\n#include "openssl/x509_verify.h"\n#include "openssl/cast.h"\n#include "openssl/dso.h"\n#include "openssl/lhash.h"\n#include "openssl/pkcs12.h"\n#include "openssl/ssl.h"\n#include "openssl/x509_vfy.h"\n#include "openssl/chacha.h"\n#include "openssl/dtls1.h"\n#include "openssl/md4.h"\n#include "openssl/pkcs7.h"\n#include "openssl/ssl2.h"\n#include "openssl/x509v3.h"\n#include "openssl/cmac.h"\n#include "openssl/ec.h"\n#include "openssl/md5.h"\n#include "openssl/poly1305.h"\n#include "openssl/ssl23.h"\n#include "openssl/cms.h"\n#include "openssl/ecdh.h"\n#include "openssl/modes.h"\n#include "openssl/rand.h"\n#include "openssl/ssl3.h"\n#include "openssl/comp.h"\n#include "openssl/ecdsa.h"\n#include "openssl/obj_mac.h"\n#include "openssl/rc2.h"\n#include "openssl/stack.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libssl.a","/root/workspace/fuzzdrivergpt/install/lib/libtls.a","/root/workspace/fuzzdrivergpt/install/lib/libcrypto.a" ]
    compile: [ "/usr/local/bin/clang-14", "-isystem", "/usr/local/lib/clang/14.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-c","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fsanitize-recover=address","-I/src/libressl/include","-I /src/libressl" ]
    build: "COMPBASE OUTFILE /work/driver.o /work/libressl/ssl/libssl.a /work/libressl/crypto/libcrypto.a /work/libressl/tls/libtls.a  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ REPLACEME ]
  
  #15690-+ clang -c -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -o /work/bignum.o /src/libressl.fuzzers/bignum.c -I/src/libressl/include -I /src/libressl
  #15691-+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o /out/bignum -fsanitize-recover=address /work/driver.o /work/bignum.o ./ssl/libssl.a ./crypto/libcrypto.a ./tls/libtls.a -fsanitize=fuzzer


  libsndfile:
    language: "c"
    image: "fuzzdrivergpt/libsndfile:env"
    apiblocklist: [ "^$" ]
    precode: '#include "sndfile.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libsndfile.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-DHAVE_CONFIG_H", "-fsanitize=fuzzer", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-Wall", "-Wextra", "-Wpointer-arith", "-Wcast-align", "-Wcast-qual", "-Wshadow", "-Wwrite-strings", "-Wundef", "-Wuninitialized", "-Winit-self", "-Wctor-dtor-privacy", "-Wnon-virtual-dtor", "-Woverloaded-virtual", "-Wreorder", "-Wsign-promo", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libsndfile.a -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libsndfile/ossfuzz/sndfile_alt_fuzzer.cc", "/src/libsndfile/ossfuzz/sndfile_fuzzer.cc" ]
  
  #clang++ -DHAVE_CONFIG_H -I. -I./src  -I./src -I./include -I./include    -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -Wall -Wextra -Wpointer-arith -Wcast-align -Wcast-qual -Wshadow -Wwrite-strings -Wundef -Wuninitialized -Winit-self -Wctor-dtor-privacy -Wnon-virtual-dtor -Woverloaded-virtual -Wreorder -Wsign-promo -MT ossfuzz/sndfile_fuzzer-sndfile_fuzzer.o -MD -MP -MF ossfuzz/.deps/sndfile_fuzzer-sndfile_fuzzer.Tpo -c -o ossfuzz/sndfile_fuzzer-sndfile_fuzzer.o `test -f 'ossfuzz/sndfile_fuzzer.cc' || echo './'`ossfuzz/sndfile_fuzzer.cc
  #
  #/bin/bash ./libtool  --tag=CXX   --mode=link clang++  -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -Wall -Wextra -Wpointer-arith -Wcast-align -Wcast-qual -Wshadow -Wwrite-strings -Wundef -Wuninitialized -Winit-self -Wctor-dtor-privacy -Wnon-virtual-dtor -Woverloaded-virtual -Wreorder -Wsign-promo  -static  -o ossfuzz/sndfile_fuzzer ossfuzz/sndfile_fuzzer-sndfile_fuzzer.o src/libsndfile.la
  #
  #libtool: link: clang++ -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -Wall -Wextra -Wpointer-arith -Wcast-align -Wcast-qual -Wshadow -Wwrite-strings -Wundef -Wuninitialized -Winit-self -Wctor-dtor-privacy -Wnon-virtual-dtor -Woverloaded-virtual -W$eorder -Wsign-promo -o ossfuzz/sndfile_fuzzer ossfuzz/sndfile_fuzzer-sndfile_fuzzer.o  src/.libs/libsndfile.a -lm

  libsodium:
    language: "c"
    image: "fuzzdrivergpt/libsodium:env"
    apiblocklist: [ "^$" ]
    precode: '#include <assert.h>\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libsodium.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/libsodium/src/libsodium/include" ]
    build: "COMPBASE OUTFILE /src/libsodium/src/libsodium/.libs/libsodium.a -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/secret_key_auth_fuzzer.cc","/src/secretbox_easy_fuzzer.cc" ]
  
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/src/libsodium/src/libsodium/include /src/secret_key_auth_fuzzer.cc -o /out/secret_key_auth_fuzzer /src/libsodium/src/libsodium/.libs/libsodium.a -fsanitize=fuzzer

  libspng:
    language: "c"
    image: "fuzzdrivergpt/libspng:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libspng_static.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DSPNGT_HAVE_FMEMOPEN=1" ]
    build: "COMPBASE OUTFILE /src/libspng/build/libspng_static.a /src/zlib/build/libz.a -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libspng/tests/spng_read_fuzzer.c", "/src/libspng/tests/spng_write_fuzzer.c"]
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 /src/libspng/tests/spng_read_fuzzer.c -DSPNGT_HAVE_FMEMOPEN=1 -o /out/spng_read_fuzzer -fsanitize=fuzzer /src/libspng/build/libspng_static.a /src/zlib/build/libz.a
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-a
  #ddress-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 /src/libspng/tests/spng_write_fuzzer.c -DSPNGT_HAVE_FMEM
  #OPEN=1 -o /out/spng_write_fuzzer -fsanitize=fuzzer /src/libspng/build/libspng_static.a /src/zlib/build/libz.a


  libsrtp:
    language: "c"
    image: "fuzzdrivergpt/libsrtp:env"
    apiblocklist: [ "^$" ]
    precode: '#include "srtp2/crypto_types.h"\n#include "srtp2/auth.h"\n#include "srtp2/cipher.h"\n#include "srtp2/srtp.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libsrtp2.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DHAVE_CONFIG_H","-I/src/libsrtp/crypto/include","-g","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fPIC","-Wno-language-extension-token" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libsrtp2.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libsrtp/fuzzer/fuzzer.c" ]
  
  
  
  #clang -DHAVE_CONFIG_H -Iinclude -I./include -I../include -I../crypto/include/ -g -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIC -Wno-language-extension-token -g fuzzer.c -c -o fuzzer.o
  #clang++ -DHAVE_CONFIG_H -Iinclude -I./include -I../include -I../crypto/include/ -g -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -g -c -std=c++11 mt19937.cpp -o mt19937.o
  #clang -DHAVE_CONFIG_H -Iinclude -I./include -I../include -I../crypto/include/ -g -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIC -Wno-language-extension-token -g -O0 testmem.c -c -o testmem.o
  #clang++ -DHAVE_CONFIG_H -Iinclude -I./include -I../include -I../crypto/include/ -g -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -g -L. -L.. fuzzer.o mt19937.o testmem.o -fsanitize=fuzzer -lsrtp2  -o srtp-fuzzer


  libssh:
    language: "c"
    image: "fuzzdrivergpt/libssh:env"
    apiblocklist: [ "^$" ]
    precode: '#include "libssh/ssh2.h"\n#include "libssh/libssh.h"\n#include "libssh/server.h"\n#include "libssh/sftp.h"\n#include "libssh/callbacks.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libssh.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-g", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include/"]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libssh.a -Wl,-Bstatic -lcrypto -lz -Wl,-Bdynamic -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libssh/tests/fuzz/ssh_bind_config_fuzzer.c", "/src/libssh/tests/fuzz/ssh_client_config_fuzzer.c", "/src/libssh/tests/fuzz/ssh_client_fuzzer.c", "/src/libssh/tests/fuzz/ssh_known_hosts_fuzzer.c", "/src/libssh/tests/fuzz/ssh_server_fuzzer.c" ]
  
  #    $CC $CFLAGS -I$SRC/libssh/include/ -I$SRC/libssh/src/ -I$BUILD/ -I$BUILD/include/ \
  #        "$f" -o "$OUT/$fuzzerName" -O0 -g \
  #        $LIB_FUZZING_ENGINE ./src/libssh.a -Wl,-Bstatic -lcrypto -lz -Wl,-Bdynamic

  libssh2:
    language: "c"
    image: "fuzzdrivergpt/libssh2:env"
    apiblocklist: [ "^$" ]
    precode: '#include "libssh2.h"\n#include "libssh2_publickey.h"\n#include "libssh2_sftp.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libssh2.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DHAVE_CONFIG_H","-DLIBSSH2DEBUG","-fsanitize=fuzzer","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libssh2/src/.libs/libssh2.a -lssl -lcrypto -lz -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libssh2/tests/ossfuzz/ssh2_client_fuzzer.cc" ]
  
  
  #clang++ -DHAVE_CONFIG_H  -DLIBSSH2DEBUG  -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -MT ssh2_client_fuzzer-ssh2_client_fuzzer.o -MD -MP -MF .deps/ssh2_client_fuzzer-ssh2_client_fuzzer.Tpo -c -o ssh2_client_fuzzer-ssh2_client_fuzzer.o `test -f 'ssh2_client_fuzzer.cc' || echo './'`ssh2_client_fuzzer.cc
  #mv -f .deps/ssh2_client_fuzzer-ssh2_client_fuzzer.Tpo .deps/ssh2_client_fuzzer-ssh2_client_fuzzer.Po
  #/bin/bash ../../libtool  --tag=CXX   --mode=link clang++  -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++  -static  -o ssh2_client_fuzzer ssh2_client_fuzzer-ssh2_client_fuzzer.o ../../src/libssh2.la
  #libtool: link: clang++ -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o ssh2_client_fuzzer ssh2_client_fuzzer-ssh2_client_fuzzer.o  ../../src/.libs/libssh2.a -lssl -lcrypto -lz
  #'tests/ossfuzz/ssh2_client_fuzzer' -> '/out/ssh2_client_fuzzer'

  libtpms:
    language: "c"
    image: "fuzzdrivergpt/libtpms:env"
    apiblocklist: [ "^$" ]
    precode: '#include "libtpms/tpm_error.h"\n#include "libtpms/tpm_library.h"\n#include "libtpms/tpm_memory.h"\n#include "libtpms/tpm_nvfilename.h"\n#include "libtpms/tpm_tis.h"\n#include "libtpms/tpm_types.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libtpms.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DHAVE_CONFIG_H","-I/src/libtpms/tests","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link"]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libtpms.a  -lcrypto -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libtpms/tests/fuzz.cc" ]
  
  #clang++ -DHAVE_CONFIG_H -I. -I/src/libtpms/tests -I..     -I/src/libtpms/include  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -MT fuzz-fuzz.o -MD -MP -MF .deps/fuzz-fuzz.Tpo -c -o fuzz-fuzz.o `test -f 'fuzz.cc' || echo '/src/libtpms/tests/'`fuzz.cc
  #mv -f .deps/fuzz-fuzz.Tpo .deps/fuzz-fuzz.Po
  #/bin/bash ../libtool  --tag=CXX   --mode=link clang++  -I/src/libtpms/include  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++  -fsanitize=fuzzer -no-undefined   -o fuzz fuzz-fuzz.o  ../src/libtpms.la -lcrypto
  #libtool: link: clang++ -I/src/libtpms/include -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer -o fuzz fuzz-fuzz.o  ../src/.libs/libtpms.a -lcrypto


  libucl:
    language: "c"
    image: "fuzzdrivergpt/libucl:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libucl.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DHAVE_CONFIG_H", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libucl.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libucl/tests/fuzzers/ucl_add_string_fuzzer.c" ]
  
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer tests/fuzzers/ucl_add_string_fuzzer.c -DHAVE_CONFIG_H -I./src -I./include src/.libs/libucl.a -I./ -o /out/ucl_add_string_fuzzer

  libusb:
    language: "c"
    image: "fuzzdrivergpt/libusb:env"
    apiblocklist: [ "^$" ]
    precode: '#include "assert.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libusb-1.0.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libusb/libusb/.libs/libusb-1.0.a -lpthread -ludev -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libusb_fuzzer.cc" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I. /src/libusb_fuzzer.cc -fsanitize=fuzzer ./libusb/.libs/libusb-1.0.a -lpthread -ludev -o /out/libusb_fuzzer

  libvips:
    language: "c"
    image: "fuzzdrivergpt/libvips:env"
    apiblocklist: [ "^$" ]
    precode: '#include "vips/vips.h"\n'
    headers: { "/work/include" : "vips/*" }
    binaries: [ "/work/lib/libvips.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/work/include","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/usr/include/glib-2.0","-I/usr/lib/x86_64-linux-gnu/glib-2.0/include","-L/work/lib","-fsanitize=fuzzer"]
    build: "COMPBASE OUTFILE -lvips -lexif -llcms2 -ljpeg -lpng -lspng -lz -ltiff -lwebpmux -lwebpdemux -lwebp -lsharpyuv -lheif -laom -limagequant -lcgif /work/lib/libpdfium.so -Wl,-Bstatic -lfftw3 -lexpat -lgio-2.0 -lgmodule-2.0 -lgobject-2.0 -lffi -lglib-2.0 -lresolv -lmount -lblkid -lselinux -lsepol -lpcre -Wl,-Bdynamic -pthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ['/src/libvips/fuzz/gifsave_buffer_fuzzer.cc', '/src/libvips/fuzz/mosaic_fuzzer.cc', '/src/libvips/fuzz/smartcrop_fuzzer.cc', '/src/libvips/fuzz/jpegsave_buffer_fuzzer.cc', '/src/libvips/fuzz/pngsave_buffer_fuzzer.cc', '/src/libvips/fuzz/thumbnail_fuzzer.cc', '/src/libvips/fuzz/jpegsave_file_fuzzer.cc', '/src/libvips/fuzz/sharpen_fuzzer.cc', '/src/libvips/fuzz/webpsave_buffer_fuzzer.cc']
  
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 fuzz/gifsave_buffer_fuzzer.cc -o /out/gifsave_buffer_fuzzer -I/work/include -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -L/work/lib -lvips -lexif -llcms2 -ljpeg -lpng -lspng -lz -ltiff -lwebpmux -lwebpdemux -lwebp -lsharpyuv -lheif -laom -limagequant -lcgif -lpdfium -fsanitize=fuzzer -Wl,-Bstatic -lfftw3 -lexpat -lgio-2.0 -lgmodule-2.0 -lgobject-2.0 -lffi -lglib-2.0 -lresolv -lmount -lblkid -lselinux -lsepol -lpcre -Wl,-Bdynamic -pthread '-Wl,-rpath,$ORIGIN/lib'

  libvnc:
    language: "c"
    image: "fuzzdrivergpt/libvnc:env"
    apiblocklist: [ "^$" ]
    precode: '#include "base64.h"\n#include "crypto.h"\n#include "d3des.h"\n#include "lzoconf.h"\n#include "lzodefs.h"\n#include "minilzo.h"\n#include "sha-private.h"\n#include "sha.h"\n#include "sockets.h"\n#include "turbojpeg.h"\n'
    headers: { "/src/libvncserver/include" : "**/*",
    "/src/libvncserver/build/include" : "**/*" ,
    "/src/libvncserver/src/libvncclient" : "**/*" ,
    "/src/libvncserver/src/common" : "**/*" }
  
    binaries: [ "/src/libvncserver/build/libvncserver.a","/src/libvncserver/build/libvncclient.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DLIBVNCSERVER_HAVE_LIBZ","-DLIBVNCSERVER_WITH_WEBSOCKETS","-I/src/libvncserver/include","-I/src/libvncserver/build/include","-I/src/libvncserver/src/libvncserver","-I/src/libvncserver/src/libvncclient","-I/src/libvncserver/src/common","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/libvncserver/build/libvncserver.a /src/libvncserver/build/libvncclient.a /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libvncserver/test/fuzz_server.c" ]
  
  #/usr/local/bin/clang -DLIBVNCSERVER_HAVE_LIBZ -DLIBVNCSERVER_WITH_WEBSOCKETS -I/src/libvncserver/include -I/src/libvncserver/build/include -I/src/libvncserver/src/libvncserver -I/src/libvncserver/src/libvncclient -I/src/libvncserver/src/common -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsantize=fuzzer-no-link -MD -MT CMakeFiles/fuzz_server.dir/test/fuzz_server.c.o -MF CMakeFiles/fuzz_server.dir/test/fuzz_server.c.o.d -o CMakeFiles/fuzz_server.dir/test/fuzz_server.c.o -c /src/libvncserver/test/fuzz_server.c
  
  
  #
  #  /usr/local/bin/clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link CMakeFiles/fuzz_server.dir/test/fuzz_server.c.o -o fuzz_server  libvncserver.a -fsanitize=fuzzer /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so /usr/lib/x86_64-linux-gnu/libssl.so /usr/lib/x86_64-linux-gnu/libcrypto.so

  libwebsockets:
    language: "c"
    image: "fuzzdrivergpt/libwebsockets:env"
    apiblocklist: [ "^$" ]
    precode: '#include "lws_config.h"\n#include "libwebsockets.h"\n'
    autoinclude: false
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/libwebsockets.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libwebsockets.a -L/usr/lib/x86_64-linux-gnu/ -l:libssl.so -l:libcrypto.so -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libwebsockets/lws_upng_inflate_fuzzer.cpp" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer -I/src/libwebsockets//build/include -o /out/lws_upng_inflate_fuzzer lws_upng_inflate_fuzzer.cpp -L/src/libwebsockets//build/lib -l:libwebsockets.a -L/usr/lib/x86_64-linux-gnu/ -l:libssl.so -l:libcrypto.so

  libxls:
    language: "c"
    image: "fuzzdrivergpt/libxls:env"
    apiblocklist: [ "^$" ]
    precode: '#include <locale.h>\n#include "xls.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libxlsreader.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DHAVE_CONFIG_H","-Wall","-pedantic-errors","-std=c99","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-Wnewline-eof" ]
    build: "COMPBASE OUTFILE /src/libxls/.libs/libxlsreader.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libxls/fuzz/fuzz_xls.c" ]
  
  #clang -DHAVE_CONFIG_H   -Wall -pedantic-errors -std=c99 -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT fuzz/xls-fuzz_xls.o -MD -MP -MF fuzz/.deps/xls-fuzz_xls.Tpo -c -o fuzz/xls-fuzz_xls.o `test -f 'fuzz/fuzz_xls.c' || echo './'`fuzz/fuzz_xls.c
  #mv -f fuzz/.deps/xls-fuzz_xls.Tpo fuzz/.deps/xls-fuzz_xls.Po
  #/bin/bash ./libtool  --tag=CXX   --mode=link clang++ -std=gnu++11  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -static  -o fuzz_xls fuzz/xls-fuzz_xls.o libxlsreader.la -fsanitize=fuzzer
  #libtool: link: clang++ -std=gnu++11 -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o fuzz_xls fuzz/xls-fuzz_xls.o -fsanitize=fuzzer  ./.libs/libxlsreader.a

  libyaml:
    language: "c"
    image: "fuzzdrivergpt/libyaml:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/src/libyaml/include" : "**/*" }
    binaries: [ "/src/libyaml/src/.libs/libyaml.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ,"-I/src","-I/src/libyaml/include"]
    build: "COMPBASE OUTFILE /src/libyaml/src/.libs/libyaml.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ['/src/libyaml/libyaml_deconstructor_alt_fuzzer.c', '/src/libyaml/libyaml_emitter_fuzzer.c', '/src/libyaml/libyaml_reformatter_alt_fuzzer.c', '/src/libyaml/libyaml_deconstructor_fuzzer.c', '/src/libyaml/libyaml_loader_fuzzer.c', '/src/libyaml/libyaml_reformatter_fuzzer.c', '/src/libyaml/libyaml_dumper_fuzzer.c', '/src/libyaml/libyaml_parser_fuzzer.c', '/src/libyaml/libyaml_scanner_fuzzer.c']
  
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I /src -Iinclude -c /src/libyaml_scanner_fuzzer.c -o libyaml_scanner_fuzzer.o
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 libyaml_scanner_fuzzer.o -o /out/libyaml_scanner_fuzzer -fsanitize=fuzzer src/.libs/libyaml.a

  libyang:
    language: "c"
    image: "fuzzdrivergpt/libyang:env"
    apiblocklist: [ "^$" ]
    precode: '#include "libyang/config.h"\n#include "libyang/context.h"\n#include "libyang/dict.h"\n#include "libyang/in.h"\n#include "libyang/libyang.h"\n#include "libyang/log.h"\n#include "libyang/metadata.h"\n#include "libyang/out.h"\n#include "libyang/parser_data.h"\n#include "libyang/parser_schema.h"\n#include "libyang/plugins.h"\n#include "libyang/plugins_exts.h"\n#include "libyang/plugins_types.h"\n#include "libyang/printer_data.h"\n#include "libyang/printer_schema.h"\n#include "libyang/set.h"\n#include "libyang/tree.h"\n#include "libyang/tree_data.h"\n#include "libyang/tree_edit.h"\n#include "libyang/tree_schema.h"\n#include "libyang/version.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libyang.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fsanitize=fuzzer", "-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libyang.a /src/pcre2/.libs/libpcre2-8.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libyang/tests/fuzz/lyd_parse_mem_json.c", "/src/libyang/tests/fuzz/lyd_parse_mem_xml.c", "/src/libyang/tests/fuzz/lys_parse_mem.c" ]
  
  
  #for fuzzer in lyd_parse_mem_json lyd_parse_mem_xml lys_parse_mem; do
  #    $CC $CFLAGS $LIB_FUZZING_ENGINE ../tests/fuzz/${fuzzer}.c -o $OUT/${fuzzer} \
  #        ./libyang.a -I../src -I../src/plugins_exts -I./src -I./compat ${static_pcre}
  #done


  libzip:
    language: "c"
    image: "fuzzdrivergpt/libzip:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libzip.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION" ]
    build: "COMPBASE OUTFILE /usr/lib/libFuzzingEngine.a /src/libzip/build/lib/libzip.a -lz -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/libzip/regress/zip_read_fuzzer.cc" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -stdlib=libc++ -std=c++11 -I. -I../lib /src/libzip/regress/zip_read_fuzzer.cc -o /out/zip_read_fuzzer /usr/lib/libFuzzingEngine.a /src/libzip/build/lib/libzip.a -lz


  lldpd:
    language: "c"
    image: "fuzzdrivergpt/lldpd:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { 
      "/root/workspace/fuzzdrivergpt/install/include" : "**/*",
    }
    binaries: [
      "/root/workspace/fuzzdrivergpt/install/lib/liblldpctl.a",
      "/src/lldpd/src/daemon/.libs/liblldpd.a"
    ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fPIE","-Wall","-Werror","-pipe","-DHAVE_CONFIG_H" ]
    build: "COMPBASE OUTFILE /src/lldpd/src/daemon/.libs/liblldpd.a /root/workspace/fuzzdrivergpt/install/lib/liblldpctl.a /src/lldpd/libevent/.libs/libevent.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/lldpd/FuzzDecode.c" ]
  
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIE -Wall -Werror -pipe -DHAVE_CONFIG_H -I. -I include/ -c FuzzDecode.c                                                                    + clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIE -pie -o FuzzDecode FuzzDecode.o -fsanitize=fuzzer src/daemon/.libs/liblldpd.a libevent/.libs/libevent.a

  llhttp:
    language: "c"
    image: "fuzzdrivergpt/llhttp:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libllhttp.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libllhttp.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ["/src/llhttp/test/fuzzers/fuzz_parser.c" ]
  
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer ./test/fuzzers/fuzz_parser.c -I./build/ ./build/libllhttp.a -o /out/fuzz_parser

  lua:
    language: "c"
    image: "fuzzdrivergpt/lua:env"
    apiblocklist: [ "^$" ]
    precode: '#include "lapi.h"\n#include "lauxlib.h"\n#include "lcode.h"\n#include "lctype.h"\n#include "ldebug.h"\n#include "ldo.h"\n#include "lfunc.h"\n#include "lgc.h"\n#include "llex.h"\n#include "llimits.h"\n#include "lmem.h"\n#include "lobject.h"\n#include "lopcodes.h"\n#include "lopnames.h"\n#include "lparser.h"\n#include "lprefix.h"\n#include "lstate.h"\n#include "lstring.h"\n#include "ltable.h"\n#include "ltests.h"\n#include "ltm.h"\n#include "lua.h"\n#include "luaconf.h"\n#include "lualib.h"\n#include "lundump.h"\n#include "lvm.h"\n#include "lzio.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/liblua.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-fuse-ld=lld" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/liblua.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz_lua.c" ]
  
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -c fuzz_lua.c -o fuzz_lua.o
  #
  #  + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer fuzz_lua.o -o /out/fuzz_lua ./liblua.a

  lwan:
    language: "c"
    image: "fuzzdrivergpt/lwan:env"
    apiblocklist: [ "^$" ]
    precode: '#include "lwan/lwan.h"\n#include "lwan/hash.h"\n#include "lwan/lwan-config.h"\n#include "lwan/lwan-mod-response.h"\n#include "lwan/lwan-strbuf.h"\n#include "lwan/timeout.h"\n#include "lwan/list.h"\n#include "lwan/lwan-coro.h"\n#include "lwan/lwan-mod-rewrite.h"\n#include "lwan/lwan-template.h"\n#include "lwan/lwan-array.h"\n#include "lwan/lwan-mod-lua.h"\n#include "lwan/lwan-mod-serve-files.h"\n#include "lwan/lwan-trie.h"\n#include "lwan/lwan-build-config.h"\n#include "lwan/lwan-mod-redirect.h"\n#include "lwan/lwan-status.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/liblwan.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-Wl,-whole-archive","-Wl,-no-whole-archive"]
    build: "COMPBASE OUTFILE /work/lwan/src/lib/liblwan.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/lwan/src/bin/fuzz/request_fuzzer.cc","/src/lwan/src/bin/fuzz/template_fuzzer.cc" ]
  
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wl,-whole-archive -Wl,-no-whole-archive /work/lwan/src/lib/liblwan.a  -I/src/lwan/src/lib /src/lwan/src/bin/fuzz/request_fuzzer.cc -fsanitize=fuzzer -lpthread -lz -o /out/request_fuzzer
  #+ for fuzzer in $SRC/lwan/src/bin/fuzz/*_fuzzer.cc
  #++ basename /src/lwan/src/bin/fuzz/template_fuzzer.cc .cc
  #+ executable=template_fuzzer
  #++ basename /src/lwan/src/bin/fuzz/template_fuzzer.cc _fuzzer.cc
  #+ corpus_base=template
  #+ zip -jr /out/template_fuzzer_seed_corpus.zip /src/lwan/fuzz/corpus/corpus-template-1
  #  adding: corpus-template-1 (deflated 63%)
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -Wl,-whole-archive /work/lwan/src/lib/liblwan.a -Wl,-no-whole-archive -I/src/lwan/src/lib /src/lwan/src/bin/fuzz/template_fuzzer.cc -fsanitize=fuzzer -lpthread -lz -o /out/template_fuzzer


  lz4:
    language: "c"
    image: "fuzzdrivergpt/lz4:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/liblz4.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-g","-DLZ4_DEBUG=1","-DXXH_NAMESPACE=LZ4_","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION" ]
    build: "COMPBASE OUTFILE /src/lz4/lib/liblz4.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/lz4/ossfuzz/compress_frame_fuzzer.c","/src/lz4/ossfuzz/compress_fuzzer.c","/src/lz4/ossfuzz/compress_hc_fuzzer.c","/src/lz4/ossfuzz/decompress_frame_fuzzer.c","/src/lz4/ossfuzz/decompress_fuzzer.c","/src/lz4/ossfuzz/round_trip_frame_fuzzer.c","/src/lz4/ossfuzz/round_trip_frame_uncompressed_fuzzer.c","/src/lz4/ossfuzz/round_trip_fuzzer.c","/src/lz4/ossfuzz/round_trip_hc_fuzzer.c","/src/lz4/ossfuzz/round_trip_stream_fuzzer.c" ]
  
  
  #clang -c -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -g -DLZ4_DEBUG=1    -DXXH_NAMESPACE=LZ4_ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION round_trip_frame_uncompressed_fuzzer.c -o round_trip_frame_uncompressed_fuzzer.o -I../lib
  #
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -g -DLZ4_DEBUG=1   -I../lib -DXXH_NAMESPACE=LZ4_ -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION  -fsanitize=fuzzer round_trip_frame_uncompressed_fuzzer.o lz4_helpers.o fuzz_data_producer.o ../lib/liblz4.a -o round_trip_frame_uncompressed_fuzzer


  mbedtls:
    language: "c"
    image: "fuzzdrivergpt/mbedtls:env"
    apiblocklist: [ "^$" ]
    precode: '#include "mbedtls/aes.h"\n#include "mbedtls/compat-2.x.h"\n#include "mbedtls/hkdf.h"\n#include "mbedtls/pkcs5.h"\n#include "mbedtls/ssl_cache.h"\n#include "mbedtls/aria.h"\n#include "mbedtls/config_psa.h"\n#include "mbedtls/hmac_drbg.h"\n#include "mbedtls/pkcs7.h"\n#include "mbedtls/ssl_ciphersuites.h"\n#include "mbedtls/asn1.h"\n#include "mbedtls/constant_time.h"\n#include "mbedtls/legacy_or_psa.h"\n#include "mbedtls/platform.h"\n#include "mbedtls/ssl_cookie.h"\n#include "mbedtls/asn1write.h"\n#include "mbedtls/ctr_drbg.h"\n#include "mbedtls/lms.h"\n#include "mbedtls/platform_time.h"\n#include "mbedtls/ssl_ticket.h"\n#include "mbedtls/base64.h"\n#include "mbedtls/debug.h"\n#include "mbedtls/mbedtls_config.h"\n#include "mbedtls/platform_util.h"\n#include "mbedtls/threading.h"\n#include "mbedtls/bignum.h"\n#include "mbedtls/des.h"\n#include "mbedtls/md.h"\n#include "mbedtls/poly1305.h"\n#include "mbedtls/timing.h"\n#include "mbedtls/build_info.h"\n#include "mbedtls/dhm.h"\n#include "mbedtls/md5.h"\n#include "mbedtls/private_access.h"\n#include "mbedtls/version.h"\n#include "mbedtls/camellia.h"\n#include "mbedtls/ecdh.h"\n#include "mbedtls/memory_buffer_alloc.h"\n#include "mbedtls/psa_util.h"\n#include "mbedtls/x509.h"\n#include "mbedtls/ccm.h"\n#include "mbedtls/ecdsa.h"\n#include "mbedtls/net_sockets.h"\n#include "mbedtls/ripemd160.h"\n#include "mbedtls/x509_crl.h"\n#include "mbedtls/chacha20.h"\n#include "mbedtls/ecjpake.h"\n#include "mbedtls/nist_kw.h"\n#include "mbedtls/rsa.h"\n#include "mbedtls/x509_crt.h"\n#include "mbedtls/chachapoly.h"\n#include "mbedtls/ecp.h"\n#include "mbedtls/oid.h"\n#include "mbedtls/sha1.h"\n#include "mbedtls/x509_csr.h"\n#include "mbedtls/check_config.h"\n#include "mbedtls/entropy.h"\n#include "mbedtls/pem.h"\n#include "mbedtls/sha256.h"\n#include "mbedtls/cipher.h"\n#include "mbedtls/error.h"\n#include "mbedtls/pk.h"\n#include "mbedtls/sha512.h"\n#include "mbedtls/cmac.h"\n#include "mbedtls/gcm.h"\n#include "mbedtls/pkcs12.h"\n#include "mbedtls/ssl.h"\n'
    
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/src/mbedtls/fuzzdrivergpt-install/lib/libmbedcrypto.a","/src/mbedtls/fuzzdrivergpt-install/lib/libmbedx509.a","/src/mbedtls/fuzzdrivergpt-install/lib/libmbedtls.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION" ]
    build: "COMPBASE OUTFILE /src/mbedtls/fuzzdrivergpt-install/lib/libmbedtls.a /src/mbedtls/fuzzdrivergpt-install/lib/libmbedx509.a /src/mbedtls/fuzzdrivergpt-install/lib/libmbedcrypto.a    -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/mbedtls/programs/fuzz/fuzz_client.c","/src/mbedtls/programs/fuzz/fuzz_dtlsclient.c","/src/mbedtls/programs/fuzz/fuzz_dtlsserver.c","/src/mbedtls/programs/fuzz/fuzz_pkcs7.c","/src/mbedtls/programs/fuzz/fuzz_privkey.c","/src/mbedtls/programs/fuzz/fuzz_pubkey.c","/src/mbedtls/programs/fuzz/fuzz_server.c","/src/mbedtls/programs/fuzz/fuzz_x509crl.c","/src/mbedtls/programs/fuzz/fuzz_x509crt.c","/src/mbedtls/programs/fuzz/fuzz_x509csr.c" ]
  


  md4c:
    language: "c"
    image: "fuzzdrivergpt/md4c:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [
      "/root/workspace/fuzzdrivergpt/install/lib/libmd4c.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libmd4c-html.a",
    ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libmd4c-html.a /root/workspace/fuzzdrivergpt/install/lib/libmd4c.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/md4c/test/fuzzers/fuzz-mdhtml.c" ]
  
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer ../test/fuzzers/fuzz-mdhtml.c -o /out/fuzz-mdhtml -I../src ./src/libmd4c-html.a ./src/libmd4c.a

  mdbtools:
    language: "c"
    image: "fuzzdrivergpt/mdbtools:env"
    apiblocklist: [ "^$" ]
    precode: '#include "mdbfakeglib.h"\n#include "mdbtools.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libmdb.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DPACKAGE_NAME='mdbtools'","-DPACKAGE_TARNAME='mdbtools'","-DPACKAGE_VERSION='1.0.0'","-DPACKAGE_STRING='mdbtools\\1.0.0'","-DPACKAGE_BUGREPORT='https://github.com/mdbtools/mdbtools/issues'","-DPACKAGE_URL='https://github.com/mdbtools/mdbtools'","-DPACKAGE='mdbtools'","-DVERSION='1.0.0'","-DSTDC_HEADERS=1","-DHAVE_SYS_TYPES_H=1","-DHAVE_SYS_STAT_H=1","-DHAVE_STDLIB_H=1","-DHAVE_STRING_H=1","-DHAVE_MEMORY_H=1","-DHAVE_STRINGS_H=1","-DHAVE_INTTYPES_H=1","-DHAVE_STDINT_H=1","-DHAVE_UNISTD_H=1","-D__EXTENSIONS__=1","-D_ALL_SOURCE=1","-D_GNU_SOURCE=1","-D_POSIX_PTHREAD_SEMANTICS=1","-D_TANDEM_SOURCE=1","-DTLS=_Thread_local","-DHAVE_DLFCN_H=1","-DHAVE_FCNTL_H=1","-DHAVE_LIMITS_H=1","-DHAVE_UNISTD_H=1","-DHAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME=1","-DHAVE_STRPTIME=1","-DHAVE_FMEMOPEN=1","-DHAVE_GMTIME_R=1","-DHAVE_VASPRINTF=1","-DHAVE_ATTRIBUTE_ALIAS=1","-DHAVE_ICONV=1","-DICONV_CONST=","-g","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-Wall","-Werror" ]
    build: "COMPBASE OUTFILE -Wl,--as-needed  /root/workspace/fuzzdrivergpt/install/lib/libmdb.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/mdbtools/src/fuzz/fuzz_mdb.c" ]
  
  
  #clang -DPACKAGE_NAME=\'mdbtools\' -DPACKAGE_TARNAME=\'mdbtools\' -DPACKAGE_VERSION=\'1.0.0\' -DPACKAGE_STRING=\'mdbtools\ 1.0.0\' -DPACKAGE_BUGREPORT=\'https://github.com/mdbtools/mdbtools/issues\' -DPACKAGE_URL=\'https://github.com/mdbtools/mdbtools\' -DPACKAGE=\'mdbtools\' -DVERSION=\'1.0.0\' -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DTLS=_Thread_local -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\'.libs/\' -DHAVE_FCNTL_H=1 -DHAVE_LIMITS_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME=1 -DHAVE_STRPTIME=1 -DHAVE_FMEMOPEN=1 -DHAVE_GMTIME_R=1 -DHAVE_VASPRINTF=1 -DHAVE_ATTRIBUTE_ALIAS=1 -DHAVE_ICONV=1 -DICONV_CONST= -I.    -I../../include  -g -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wall -Werror -MT fuzz_mdb.o -MD -MP -MF .deps/fuzz_mdb.Tpo -c -o fuzz_mdb.o fuzz_mdb.c
  #
  #
  #
  #clang++  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -static -Wl,--as-needed -o fuzz_mdb fuzz_mdb.o ../libmdb/libmdb.la -fsanitize=fuzzer
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -Wl,--as-needed -o fuzz_mdb fuzz_mdb.o -fsanitize=fuzzer  ../libmdb/.libs/libmdb.a

  miniz:
    language: "c"
    image: "fuzzdrivergpt/miniz:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libminiz.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-Wshadow","-Wformat=2","-Wall","-Wno-overlength-strings","-pedantic","-O3","-DNDEBUG","-std=gnu90","-MD" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libminiz.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/miniz/tests/checksum_fuzzer.c","/src/miniz/tests/flush_fuzzer.c","/src/miniz/tests/small_fuzzer.c","/src/miniz/tests/uncompress_fuzzer.c","/src/miniz/tests/compress_fuzzer.c","/src/miniz/tests/large_fuzzer.c","/src/miniz/tests/uncompress2_fuzzer.c","/src/miniz/tests/zip_fuzzer.c" ]
  
  #/usr/local/bin/clang  -I/src/miniz/build/amalgamation -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wshadow -Wformat=2 -Wall -Wno-overlength-strings -pedantic -O3 -DNDEBUG -std=gnu90 -MD -MT CMakeFiles/zip_fuzzer.dir/tests/zip_fuzzer.c.o -MF CMakeFiles/zip_fuzzer.dir/tests/zip_fuzzer.c.o.d -o CMakeFiles/zip_fuzzer.dir/tests/zip_fuzzer.c.o -c /src/miniz/tests/zip_fuzzer.c
  #
  #
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Wshadow -Wformat=2 -Wall -Wno-overlength-strings -pedantic -O3 -DNDEBUG -rdynamic CMakeFiles/zip_fuzzer.dir/tests/fuzz_main.c.o CMakeFiles/zip_fuzzer.dir/tests/zip_fuzzer.c.o -o /src/miniz/bin/zip_fuzzer  libminiz.a

  minizip:
    language: "c"
    image: "fuzzdrivergpt/minizip:env"
    apiblocklist: [ "^$" ]
    precode: '#include "mz.h"\n#include "mz_crypt.h"\n#include "mz_strm.h"\n#include "mz_strm_mem.h"\n#include "mz_strm_pkcrypt.h"\n#include "mz_strm_wzaes.h"\n#include "mz_zip.h"\n#include "mz_zip_rw.h"\n#include "zip.h"\n#include "mz_compat.h"\n#include "mz_os.h"\n#include "mz_strm_buf.h"\n#include "mz_strm_os.h"\n#include "mz_strm_split.h"\n#include "unzip.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libminizip.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DHAVE_INTTYPES_H","-DHAVE_STDINT_H","-D_POSIX_C_SOURCE=200112L","-I/src/minizip-ng","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION" ]
    build: "COMPBASE OUTFILE /src/minizip-ng/libminizip.a /usr/lib/libFuzzingEngine.a -lssl -lcrypto -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/minizip-ng/test/fuzz/unzip_fuzzer.c","/src/minizip-ng/test/fuzz/zip_fuzzer.c" ]
  
  #/usr/local/bin/clang -DHAVE_INTTYPES_H -DHAVE_STDINT_H -D_POSIX_C_SOURCE=200112L -I/src/minizip-ng -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -MD -MT CMakeFiles/zip_fuzzer.dir/test/fuzz/zip_fuzzer.c.o -MF CMakeFiles/zip_fuzzer.dir/test/fuzz/zip_fuzzer.c.o.d -o CMakeFiles/zip_fuzzer.dir/test/fuzz/zip_fuzzer.c.o -c /src/minizip-ng/test/fuzz/zip_fuzzer.c
  #/usr/local/bin/clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -stdlib=libc++ CMakeFiles/zip_fuzzer.dir/test/fuzz/zip_fuzzer.c.o -o zip_fuzzer  libminizip.a /usr/lib/libFuzzingEngine.a -lssl -lcrypto

  ndpi:
    language: "c"
    image: "fuzzdrivergpt/ndpi:env"
    apiblocklist: [ "^$" ]
    precode: '#include "ndpi/ndpi_main.h"\n#include "ndpi/ndpi_patricia_typedefs.h"\n#include "ndpi/ndpi_unix.h"\n#include "ndpi/ndpi_utils.h"\n#include "ndpi/ndpi_config.h"\n#include "ndpi/ndpi_classify.h"\n#include "ndpi/ndpi_encryption.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libndpi.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DHAVE_CONFIG_H","-Wno-attributes","-W","-Wall","-Wno-unused-parameter","-Wno-unused-function","-Wno-address-of-packed-member","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-Wno-attributes","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fsanitize=fuzzer","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE -lpcap /src/ndpi/src/lib/libndpi.a -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ['/src/ndpi/fuzz/fuzz_alg_bins.cpp', '/src/ndpi/fuzz/fuzz_community_id.cpp', '/src/ndpi/fuzz/fuzz_ds_ptree.cpp', '/src/ndpi/fuzz/fuzz_alg_hll.cpp', '/src/ndpi/fuzz/fuzz_config.cpp', '/src/ndpi/fuzz/fuzz_ds_tree.cpp', '/src/ndpi/fuzz/fuzz_alg_hw_rsi_outliers_da.cpp', '/src/ndpi/fuzz/fuzz_ds_ahocorasick.cpp', '/src/ndpi/fuzz/fuzz_serialization.cpp', '/src/ndpi/fuzz/fuzz_alg_jitter.cpp', '/src/ndpi/fuzz/fuzz_ds_libcache.cpp', '/src/ndpi/fuzz/fuzz_alg_ses_des.cpp', '/src/ndpi/fuzz/fuzz_ds_patricia.cpp']
  
  
  
  #clang++ -DHAVE_CONFIG_H    -Wno-attributes -W -Wall -Wno-unused-parameter -Wno-unused-function -Wno-address-of-packed-member  -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wno-attributes -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -MT fuzz_serialization-fuzz_serialization.o -MD -MP -MF .deps/fuzz_serialization-fuzz_serialization.Tpo -c -o fuzz_serialization-fuzz_serialization.o `test -f 'fuzz_serialization.cpp' || echo './'`fuzz_serialization.cpp
  #
  #libtool: link: clang++ -Wno-attributes -W -Wall -Wno-unused-parameter -Wno-unused-function -Wno-address-of-packed-member -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wno-attributes -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer -o fuzz_serialization fuzz_serialization-fuzz_serialization.o fuzz_serialization-fuzz_common_code.o  -lpcap ../src/lib/libndpi.a -lm

  netcdf:
    language: "c"
    image: "fuzzdrivergpt/netcdf:env"
    apiblocklist: [ "^$" ]
    precode: '#include "netcdf.h"\n#include "netcdf_aux.h"\n#include "netcdf_dispatch.h"\n#include "netcdf_filter.h"\n#include "netcdf_mem.h"\n#include "netcdf_meta.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libnetcdf.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fsanitize=fuzzer","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fPIC","-D_LARGEFILE64_SOURCE","-D_FILE_OFFSET_BITS=64" ]
    build: "COMPBASE OUTFILE /src/netcdf-c/build/liblib/libnetcdf.a -ldl -lm /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libbz2.so /usr/lib/x86_64-linux-gnu/libcurl.so -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "-O1","-fsanitize=fuzzer","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fPIC","-D_LARGEFILE64_SOURCE","-D_FILE_OFFSET_BITS=64" ]
  
  
  #/usr/local/bin/cmake -E cmake_link_script CMakeFiles/fuzz_open.dir/link.txt --verbose=1
  #/usr/local/bin/clang -O1 -fsanitize=fuzzer -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIC -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -g CMakeFiles/fuzz_open.dir/fuzz_open.c.o -o fuzz_open  /src/netcdf-c/build/liblib/libnetcdf.a  -ldl -lm /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libbz2.so /usr/lib/x86_64-linux-gnu/libcurl.so

  njs:
    language: "c"
    image: "fuzzdrivergpt/njs:env"
    apiblocklist: [ "^$" ]
    precode: '#include "njs.h"\n#include "njs_types.h"\n#include "njs_value.h"\n#include "njs_arr.h"\n#include "njs_rbtree.h"\n#include "njs_lvlhsh.h"\n#include "njs_queue.h"\n#include "njs_lexer.h"\n#include "njs_trace.h"\n#include "njs_regex.h"\n#include "njs_random.h"\n#include "njs_vm.h"\n#include "njs_variable.h"\n#include "njs_vmcode.h"\n#include "njs_parser.h"\n#include "njs_string.h"\n#include "njs_mp.h"\n#include "njs_utils.h"\n#include "njs_promise.h"\n#include "njs_object.h"\n#include "njs_buffer.h"\n#include "njs_regexp_pattern.h"\n#include "njs_iterator.h"\n#include "njs_generator.h"\n#include "njs_chb.h"\n#include "njs_unicode.h"\n#include "njs_symbol.h"\n#include "njs_str.h"\n#include "njs_sha2.h"\n#include "njs_sha1.h"\n#include "njs_md5.h"\n#include "njs_function.h"\n#include "njs_event.h"\n#include "njs_async.h"\n#include "njs_array.h"\n'
    headers: { "/src/njs/src" : "**/*","/src/njs/build":"*" }
    binaries: [ "/src/njs/build/libnjs.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ,"-I/usr/local/include","-L/usr/local/lib","-I/src/njs/src","-I/src/njs/build","-Wl,-Bstatic","-Wl,-Bdynamic"]
    build: "COMPBASE OUTFILE /src/njs/build/libnjs.a  -lm  -lpcre2-8 -lcrypto -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/njs/build/njs_process_script_fuzzer" ]
  
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o build/njs_process_script_fuzzer  -I/usr/local/include -Isrc -Ibuild -Injs   -fsanitize=fuzzer  build/njs_process_script_fuzzer.o   build/libnjs.a  -lm   -L/usr/local/lib -Wl,-Bstatic -lpcre2-8 -Wl,-Bdynamic -lcrypto


  oniguruma:
    language: "c"
    image: "fuzzdrivergpt/oniguruma:env"
    apiblocklist: [ "^$" ]
    precode: '#include "oniguruma.h"\n#include "oniggnu.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libonig.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DSYNTAX_TEST" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libonig.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/oniguruma/harnesses/base.c" ]
  
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -o harnesses/fuzzer_syntax.o -I src -c -DSYNTAX_TEST harnesses/base.c                                                                                               + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o /out/fuzzer harnesses/fuzzer_syntax.o -fsanitize=fuzzer src/.libs/libonig.a

  openexr:
    language: "c"
    image: "fuzzdrivergpt/openexr:env"
    apiblocklist: [ "^$" ]
    precode: '#include "OpenEXR/openexr.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/src/openexr/fuzzdrivergpt-install/lib/libIex.a","/src/openexr/fuzzdrivergpt-install/lib/libIlmThread.a","/src/openexr/fuzzdrivergpt-install/lib/libImath-3_2.a","/src/openexr/fuzzdrivergpt-install/lib/libOpenEXR.a","/src/openexr/fuzzdrivergpt-install/lib/libOpenEXRCore.a","/src/openexr/fuzzdrivergpt-install/lib/libOpenEXRUtil.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src","-I/src/openexr/src/lib/OpenEXRCore","-I/src/openexr/src/lib/OpenEXR","-I/src/openexr/src/lib/OpenEXRUtil","-I/work/cmake","-fsanitize=fuzzer" ]
    build: "COMPBASE OUTFILE /work/src/lib/OpenEXRUtil/libOpenEXRUtil.a /work/src/lib/OpenEXR/libOpenEXR.a /work/src/lib/OpenEXRCore/libOpenEXRCore.a /work/src/lib/IlmThread/libIlmThread.a /work/src/lib/Iex/libIex.a /work/_deps/imath-build/src/Imath/libImath-3_2.a -lz -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/openexr/src/test/OpenEXRFuzzTest/oss-fuzz/openexr_exrcorecheck_fuzzer.cc","/src/openexr/src/test/OpenEXRFuzzTest/oss-fuzz/openexr_exrcheck_fuzzer.cc" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link  -pthread -I/src -I /src/openexr/src/lib/OpenEXRCore -I/src/openexr/src/lib/OpenEXR -I/src/openexr/src/lib/OpenEXRUtil -I/work/cmake -fsanitize=fuzzer /work/src/lib/OpenEXRUtil/libOpenEXRUtil.a /work/src/lib/OpenEXR/libOpenEXR.a /work/src/lib/OpenEXRCore/libOpenEXRCore.a /work/src/lib/IlmThread/libIlmThread.a /work/src/lib/Iex/libIex.a /work/_deps/imath-build/src/Imath/libImath-3_2.a -lz -o /out/openexr_exrcorecheck_fuzzer /src/openexr/src/test/OpenEXRFuzzTest/oss-fuzz/openexr_exrcorecheck_fuzzer.cc

  openjpeg:
    language: "c"
    image: "fuzzdrivergpt/openjpeg:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libopenjpeg2.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link"  ]
    build: "COMPBASE OUTFILE /src/openjpeg/build/bin/libopenjp2.a -lm -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/openjpeg/tests/fuzzers/opj_decompress_fuzzer_J2K.cpp",  "/src/openjpeg/tests/fuzzers/opj_decompress_fuzzer_JP2.cpp" ]
  #
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I./tests/fuzzers/../../src/lib/openjp2 -I./tests/fuzzers/../../build/src/lib/openjp2 ./tests/fuzzers/opj_decompress_fuzzer_J2K.cpp -o /out/opj_decompress_fuzzer_J2K -fsanitize=fuzzer /src/openjpeg/build/bin/libopenjp2.a -lm -lpthread

  opusfile:
    language: "c"
    image: "fuzzdrivergpt/opusfile:env"
    apiblocklist: [ "^$" ]
    precode: '#include <fcntl.h>\n#include "config.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [
      "/root/workspace/fuzzdrivergpt/install/lib/libopusfile.a" ,
      "/root/workspace/fuzzdrivergpt/install/lib/libopusurl.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/root/workspace/fuzzdrivergpt/install/include", "-I/usr/include/ogg", "-I/usr/include/opus", "-I/src/opusfile" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libopusurl.a /root/workspace/fuzzdrivergpt/install/lib/libopusfile.a -l:libogg.a -l:libopus.a -lssl -lcrypto -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/opusfile_fuzzer.c" ]
  
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -c -I /src -I /usr/include/opus -I/usr/include/ogg /src/opusfile_fuzzer.c -o opusfile_fuzzer.o                                                                     + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ opusfile_fuzzer.o -o /out/opusfile_fuzzer -fsanitize=fuzzer /src/opusfile/.libs/libopusfile.a -l:libopus.a -l:libogg.a

  ostree:
    language: "c"
    image: "fuzzdrivergpt/ostree:env"
    apiblocklist: [ "^$" ]
    precode: '#include <fcntl.h>\n#include <stdbool.h>\n#include "ostree.h"\n'
    autoinclude: false
    headers: { "/root/workspace/fuzzdrivergpt/install/include/ostree-1" : "*.h" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libostree-1.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DHAVE_CONFIG_H","-DDATADIR='/usr/local/share'","-DLIBEXECDIR='/usr/local/libexec'","-DLOCALEDIR='/usr/local/share/locale'","-DSYSCONFDIR='/usr/local/etc'","-DTARGET_PREFIX='/usr/local'","-DOSTREE_COMPILATION","-DG_LOG_DOMAIN='\"OSTree\"'","-DOSTREE_GITREV='v2022.2-41-gf21944da1cf24cc2bbf1d4dfbd3aaa698d4f0a70'","-DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_66","-DSOUP_VERSION_MIN_REQUIRED=SOUP_VERSION_2_40","-I/src/ostree/src/libotutil","-I/src/ostree/libglnx","-I/usr/include/gio-unix-2.0","-I/usr/include/glib-2.0","-I/usr/lib/x86_64-linux-gnu/glib-2.0/include","-DPKGLIBEXECDIR='/usr/local/libexec/libostree'", "-I/root/workspace/fuzzdrivergpt/install/include/ostree-1"  ]
    build: "COMPBASE OUTFILE -o OUTEXE /src/ostree/.libs/libbsdiff.a /src/ostree/.libs/libglnx.a /src/ostree/.libs/libotutil.a -L/usr/lib/x86_64-linux-gnu /src/ostree/.libs/libostree-1.a /src/ostree/.libs/libostreetest.a  -l:libgpgme.a -l:libassuan.a /usr/lib/x86_64-linux-gnu/libgpg-error.so -l:liblzma.a -l:libgio-2.0.a -lresolv -l:libgobject-2.0.a -l:libffi.a -l:libgmodule-2.0.a -l:libglib-2.0.a -lm -l:libz.a -l:libselinux.a -pthread -l:libpcre2-8.a"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz-bsdiff.c","/src/fuzz-repo.c" ]
  
  
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no
  #-link -DHAVE_CONFIG_H -I. -DDATADIR='/usr/local/share' -DLIBEXECDIR='/usr/local/libexec' -DLOCALEDIR='/usr/local/share/locale' -DSYSCONFDIR='/usr/local/etc' -DTARG
  #ET_PREFIX='/usr/local' -DOSTREE_COMPILATION -DG_LOG_DOMAIN='OSTree' -DOSTREE_GITREV='v2022.2-41-gf21944da1cf24cc2bbf1d4dfbd3aaa698d4f0a70' -DGLIB_VERSION_MIN_REQUIRED=
  #GLIB_VERSION_2_66 -DSOUP_VERSION_MIN_REQUIRED=SOUP_VERSION_2_40 -I./src/libotutil -I./src/libostree -I./src/libostree -I./src/ostree -I./libglnx -I/usr/include/gio-unix-2.0
  # -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -DPKGLIBEXECDIR='/usr/local/libexec/libostree' -o tests/fuzz-bsdiff.o -c tests/fuzz-bsdiff.c
  #
  #
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no
  #-link -fsanitize=fuzzer -I./src/libotutil -I./src/libostree -I./src/libostree -I./src/ostree -I./libglnx -I/usr/include/gio-unix-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_
  #64-linux-gnu/glib-2.0/include -DPKGLIBEXECDIR='/usr/local/libexec/libostree' -o /out/fuzz-bsdiff tests/fuzz-bsdiff.o ./.libs/libbsdiff.a ./.libs/libglnx.a ./.libs/libotut
  #il.a -L/usr/lib/x86_64-linux-gnu ./.libs/libostree-1.a ./.libs/libostreetest.a ./.libs/libostree-1.a -l:libgpgme.a -l:libassuan.a /usr/lib/x86_64-linux-gnu/libgpg-error.so
  #-l:liblzma.a -l:libgio-2.0.a -lresolv -l:libgobject-2.0.a -l:libffi.a -l:libgmodule-2.0.a -l:libglib-2.0.a -lm -l:libz.a -l:libselinux.a -pthread -l:libpcre2-8.a

  picotls:
    language: "c"
    image: "fuzzdrivergpt/picotls:env"
    apiblocklist: [ "^$" ]
    precode: '#include "picotls.h"\n#include "picotls/asn1.h"\n#include "picotls/ffx.h"\n#include "picotls/minicrypto.h"\n#include "picotls/pembase64.h"\n#include "picotls/certificate_compression.h"\n#include "picotls/fusion.h"\n#include "picotls/openssl.h"\n#include "picotls/ptlsbcrypt.h"\n'
  
    headers: { "/src/picotls/include" : "**/*" }
    binaries: [ "/src/picotls/libpicotls-minicrypto.a", "/src/picotls/libpicotls-core.a", "/src/picotls/libpicotls-openssl.a","/src/picotls/libpicotls-core.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DPTLS_FUZZ_HANDSHAKE=1","-I/src/picotls/deps/cifra/src/ext","-I/src/picotls/deps/cifra/src","-I/src/picotls/deps/micro-ecc","-I/src/picotls/deps/picotest","-I/src/picotls/include","-I/src/picotls","-I/src/picotls/t","-D_GNU_SOURCE","-pthread","-std=c99","-Wall","-O2","-g","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-D_GNU_SOURCE" ]
    build: "COMPBASE OUTFILE  /src/picotls/libpicotls-minicrypto.a /src/picotls/libpicotls-core.a /src/picotls/libpicotls-openssl.a -lcrypto -lFuzzingEngine /src/picotls/libpicotls-core.a -ldl -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/picotls/fuzz/fuzz-asn1.c","/src/picotls/fuzz/fuzz-client-hello.c","/src/picotls/fuzz/fuzz-server-hello.c" ]
  
  
  #/usr/local/bin/clang -DPTLS_FUZZ_HANDSHAKE=1 -I/src/picotls/deps/cifra/src/ext -I/src/picotls/deps/cifra/src -I/src/picotls/deps/micro-ecc -I/src/picotls/deps/picotest -I/src/picotls/include -I/src/picotls -I/src/picotls/t -D_GNU_SOURCE -pthread -std=c99 -Wall -O2 -g  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -D_GNU_SOURCE -MD -MT CMakeFiles/fuzz-asn1.dir/fuzz/fuzz-asn1.c.o -MF CMakeFiles/fuzz-asn1.dir/fuzz/fuzz-asn1.c.o.d -o CMakeFiles/fuzz-asn1.dir/fuzz/fuzz-asn1.c.o -c /src/picotls/fuzz/fuzz-asn1.c[ 96%] Linking CXX executable fuzz-asn1
  #/usr/local/bin/cmake -E cmake_link_script CMakeFiles/fuzz-asn1.dir/link.txt --verbose=1
  #/usr/local/bin/clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -stdlib=libc++ -rdynamic "CMakeFiles/fuzz-asn1.dir/fuzz/fuzz-asn1.c.o" -o fuzz-asn1  libpicotls-minicrypto.a libpicotls-core.a libpicotls-openssl.a -lcrypto -lFuzzingEngine libpicotls-core.a -ldl

  pidgin:
    language: "c"
    image: "fuzzdrivergpt/pidgin:env"
    apiblocklist: [ "^$" ]
    precode: '#include "purple.h"\n'
    autoinclude: false
    headers: { "/root/workspace/fuzzdrivergpt/install/include/libpurple" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/purple-2/autoaccept.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/buddynote.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/idle.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/joinpart.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/libgg.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/libirc.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/libjabber.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/libnovell.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/libsimple.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/libxmpp.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/libzephyr.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/log_reader.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/newline.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/offlinemsg.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/psychic.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/ssl.a", "/root/workspace/fuzzdrivergpt/install/lib/purple-2/statenotify.a", "/root/workspace/fuzzdrivergpt/install/lib/libpurple.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include/libpurple", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DHAVE_CONFIG_H","-I/src/glib","-I/src/glib/glib","-I/src/glib/gmodule","-I/work/meson","-I/work/meson/glib","-I/usr/lib/x86_64-linux-gnu/glib-2.0/include","-I/usr/local/include/libxml2","-I/src/pidgin/libpurple/protocols/jabber"]
    build: "COMPBASE OUTFILE -o OUTEXE /root/workspace/fuzzdrivergpt/install/lib/purple-2/autoaccept.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/buddynote.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/idle.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/joinpart.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/libgg.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/libirc.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/libjabber.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/libnovell.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/libsimple.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/libxmpp.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/libzephyr.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/log_reader.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/newline.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/offlinemsg.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/psychic.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/ssl.a /root/workspace/fuzzdrivergpt/install/lib/purple-2/statenotify.a /root/workspace/fuzzdrivergpt/install/lib/libpurple.a -L/usr/local/lib/x86_64-linux-gnu -lgobject-2.0 -lffi -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lpcre2-8 -L/usr/local/lib -lxml2 -lz -llzma -lm -lnsl -lresolv"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [
      "/src/pidgin_utils_fuzzer.c",
      "/src/pidgin_xml_fuzzer.c"
    ]
  
  
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DHAVE_CONFIG_H -I. -I.. -I/src/glib -I/src/glib/glib -I/src/glib/gmodule -I/work/meson -I/work/meson/glib -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/local/include/libxml2 -I/src/pidgin/libpurple/protocols/jabber -c pidgin_xml_fuzzer.c -o pidgin_xml_fuzzer.o
  #  + clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer pidgin_xml_fuzzer.o -o /out/pidgin_xml_fuzzer /src/pidgin/libpurple/protocols/jabber/.libs/libjabber.a ./.libs/libpurple.a /deps/libgobject-2.0.a /deps/libgmodule-2.0.a /deps/libglib-2.0.a /deps/libxml2.a /deps/libffi.a -lresolv -lz -llzma -l:libpcre2-8.a

  pjsip:
    language: "c"
    image: "fuzzdrivergpt/pjsip:env"
    apiblocklist: [ "^$" ]
    precode: '#include "pjlib-util.h"\n#include "pjlib.h"\n#include "pjmedia-codec.h"\n#include "pjmedia.h"\n#include "pjmedia_audiodev.h"\n#include "pjmedia_videodev.h"\n#include "pjnath.h"\n#include "pjsip.h"\n#include "pjsip_simple.h"\n#include "pjsip_ua.h"\n#include "pjsua.h"\n'
    autoinclude: false
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libpj-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjnath-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjlib-util-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjsip-simple-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjmedia-audiodev-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjsip-ua-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjmedia-codec-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjsip-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjmedia-videodev-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjsua-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjmedia-x86_64-unknown-linux-gnu.a","/root/workspace/fuzzdrivergpt/install/lib/libpjsua2-x86_64-unknown-linux-gnu.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DPJ_AUTOCONF=1","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DPJ_IS_BIG_ENDIAN=0","-DPJ_IS_LITTLE_ENDIAN=1","-DPJMEDIA_HAS_SRTP=0","-Wall","-Werror" ]
    build: "COMPBASE OUTFILE  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link /root/workspace/fuzzdrivergpt/install/lib/libpjsua-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjsip-ua-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjsip-simple-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjsip-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjmedia-codec-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjmedia-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjmedia-videodev-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjmedia-audiodev-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjmedia-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjnath-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpjlib-util-x86_64-unknown-linux-gnu.a /root/workspace/fuzzdrivergpt/install/lib/libpj-x86_64-unknown-linux-gnu.a  -lm -lrt -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/pjsip/tests/fuzz/fuzz-json.c","/src/pjsip/tests/fuzz/fuzz-sdp.c","/src/pjsip/tests/fuzz/fuzz-sip.c","/src/pjsip/tests/fuzz/fuzz-stun.c","/src/pjsip/tests/fuzz/fuzz-xml.c" ]
  
  
  #clang -DPJ_AUTOCONF=1 -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DPJ_IS_BIG_ENDIAN=0 -DPJ_IS_LITTLE_ENDIAN=1 -DPJMEDIA_HAS_SRTP=0         -I/src/pjsip/pjlib/include -I/src/pjsip/pjlib-util/include -I/src/pjsip/pjnath/include -I/src/pjsip/pjmedia/include -I/src/pjsip/pjsip/include -Wall -Werror -c fuzz-json.c
  #
  #
  #clang++ -DPJ_AUTOCONF=1 -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DPJ_IS_BIG_ENDIAN=0 -DPJ_IS_LITTLE_ENDIAN=1 -DPJMEDIA_HAS_SRTP=0         -I/src/pjsip/pjlib/include -I/src/pjsip/pjlib-util/include -I/src/pjsip/pjnath/include -I/src/pjsip/pjmedia/include -I/src/pjsip/pjsip/include -o fuzz-json fuzz-json.o -L/src/pjsip/pjlib/lib -L/src/pjsip/pjlib-util/lib -L/src/pjsip/pjnath/lib -L/src/pjsip/pjmedia/lib -L/src/pjsip/pjsip/lib -L/src/pjsip/third_party/lib       -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -lpjsua-x86_64-unknown-linux-gnu -lpjsip-ua-x86_64-unknown-linux-gnu -lpjsip-simple-x86_64-unknown-linux-gnu -lpjsip-x86_64-unknown-linux-gnu -lpjmedia-codec-x86_64-unknown-linux-gnu -lpjmedia-x86_64-unknown-linux-gnu -lpjmedia-videodev-x86_64-unknown-linux-gnu -lpjmedia-audiodev-x86_64-unknown-linux-gnu -lpjmedia-x86_64-unknown-linux-gnu -lpjnath-x86_64-unknown-linux-gnu -lpjlib-util-x86_64-unknown-linux-gnu   -lpj-x86_64-unknown-linux-gnu -lm -lrt -lpthread  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer

  postfix:
    language: "c"
    image: "fuzzdrivergpt/postfix:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: {
      "/src/postfix/postfix/src/global" : "*.h",
      "/src/postfix/postfix/include" : "*.h"
    }
    binaries: [
      "/root/workspace/fuzzdrivergpt/install/lib/libglobal.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libutil.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libdns.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libmaster.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libmilter.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libtls.a",
      "/root/workspace/fuzzdrivergpt/install/lib/libxsasl.a"
      ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DHAS_DEV_URANDOM","-DSNAPSHOT","-UUSE_DYNAMIC_LIBS","-DDEF_SHLIB_DIR='no'","-UUSE_DYNAMIC_MAPS","-I/src/postfix/postfix/src/global","-I/src/postfix/postfix/include" ]
    build: "COMPBASE OUTFILE -o OUTEXE /root/workspace/fuzzdrivergpt/install/lib/libglobal.a /root/workspace/fuzzdrivergpt/install/lib/libutil.a /root/workspace/fuzzdrivergpt/install/lib/libdns.a  /root/workspace/fuzzdrivergpt/install/lib/libmaster.a /root/workspace/fuzzdrivergpt/install/lib/libmilter.a /root/workspace/fuzzdrivergpt/install/lib/libtls.a /root/workspace/fuzzdrivergpt/install/lib/libxsasl.a -ldb -lnsl"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz_mime.c","/src/fuzz_tok822.c"]
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DHAS_DEV_URANDOM -DSNAPSHOT -UUSE_DYNAMIC_LIBS -DDEF_SHLIB_DIR='no' -UUSE_DYNAMIC_MAPS -I. -I../../include -DNO_EAI -DDEF_SMTPUTF8_ENABLE='no' -g -O -DLINUX4 -Wformat -Wno-comment -fno-common -c /src/fuzz_tok822.c
  #
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer ./src/global/fuzz_mime.o -o /out/fuzz_mime ./lib/libglobal.a ./lib/libutil.a -ldb -lnsl

  proftpd:
    language: "c"
    image: "fuzzdrivergpt/proftpd:env"
    apiblocklist: [ "^$" ]
    precode: '#include "bindings.h"\n#include "class.h"\n#include "conf.h"\n#include "configdb.h"\n#include "ctrls.h"\n#include "dirtree.h"\n#include "error.h"\n#include "expr.h"\n#include "fsio.h"\n#include "inet.h"\n#include "jot.h"\n#include "json.h"\n#include "memcache.h"\n#include "mod_ctrls.h"\n#include "netaddr.h"\n#include "openbsd-blowfish.h"\n#include "os.h"\n#include "pr-syslog.h"\n#include "proftpd.h"\n#include "redis.h"\n#include "sets.h"\n#include "signals.h"\n#include "table.h"\n#include "version.h"\n'
    autoinclude: false
    headers: { "/root/workspace/fuzzdrivergpt/install/include/proftpd" : "*.h" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/prbase.a", "/root/workspace/fuzzdrivergpt/install/lib/fuzz_lib.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include/proftpd", "-DHAVE_CONFIG_H","-DLINUX","-g2","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-Wall","-fno-omit-frame-pointer","-fno-strict-aliasing" ]
    build: "COMPBASE OUTFILE /src/proftpd/src/scoreboard.o /root/workspace/fuzzdrivergpt/install/lib/prbase.a /root/workspace/fuzzdrivergpt/install/lib/fuzz_lib.a -L/src/proftpd/lib -lcrypt -pthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzzer.c" ]
  


  protobuf-c:
    language: "c"
    image: "fuzzdrivergpt/protobuf-c:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libprotobuf-c.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/protobuf-c" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libprotobuf-c.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/protobuf-c-fuzzers/test-full.pb-c.c" ,"/src/protobuf-c-fuzzers/fuzzer.cpp"]
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link test-full.pb-c.c -I/src/protobuf-install -I/src/protobuf-c -c -o test-full.pb-c.o                                                                                 + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -DASAN fuzzer.cpp -I /src/protobuf-install -I /src/protobuf-c test-full.pb-c.o /src/protobuf-c/protobuf-c/.libs/libprotobuf-c.a -fsanitize=fuzzer -o /out/fuzzer

  pupnp:
    language: "c"
    image: "fuzzdrivergpt/pupnp:env"
    apiblocklist: [ "^$" ]
    precode: '#include "list.h"\n#include "upnp.h"\n#include "upnpconfig.h"\n#include "upnptools.h"\n#include "ixml.h"\n#include "ixmldebug.h"\n'
    autoinclude: false
    headers: { "/root/workspace/fuzzdrivergpt/install/include/upnp" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libupnp.a","/root/workspace/fuzzdrivergpt/install/lib/libixml.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include/upnp", "-DDEBUG","-DUPNP_STATIC_LIB", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libupnp.a /root/workspace/fuzzdrivergpt/install/lib/libixml.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/pupnp/fuzzer/FuzzIxml.c" ]
  
  
  #/usr/local/bin/clang -DDEBUG -DUPNP_STATIC_LIB -I/src/pupnp/ixml/inc -I/src/pupnp/ixml/src/inc -I/src/pupnp/upnp/inc -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -g -MD -MT fuzzer/CMakeFiles/FuzzIxml.dir/FuzzIxml.c.o -MF CMakeFiles/FuzzIxml.dir/FuzzIxml.c.o.d -o CMakeFiles/FuzzIxml.dir/FuzzIxml.c.o -c /src/pupnp/fuzzer/FuzzIxml.c
  #
  #/usr/local/bin/clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -g CMakeFiles/FuzzIxml.dir/FuzzIxml.c.o -o FuzzIxml  ../ixml/libixml.a /usr/lib/libFuzzingEngine.a

  pycryptodome:
    language: "c"
    image: "fuzzdrivergpt/pycryptodome:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/src/pycryptodome/src" : "*.h" }
    binaries: [ "/work/libpycryptodome.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/pycryptodome/src","-I/src/pycryptodome/src/libtom","-D","HAVE_STDINT_H","-D","HAVE_MEMALIGN","-D","HAVE_INTRIN_H","-D","SYS_BITS=64","-maes","-msse2","-mpclmul" ]
    build: "COMPBASE OUTFILE /work/libpycryptodome.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ["/src/pcd_aes_fuzzer.cc","/src/pcd_hash_fuzzer.cc"]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -I/src/pycryptodome/src -I/src/pycryptodome/src/libtom -D HAVE_STDINT_H -D HAVE_MEMALIGN -D HAVE_INTRIN_H -D SYS_BITS=64 -maes -msse2 -mpclmul /src/pcd_hash_fuzzer.cc -D HASHTYPE=SHA256 -D FNAME=SHA256.c -D DIGEST_THIRD_PARAM -o /out/sha256_fuzzer -fsanitize=fuzzer /work/libpycryptodome.a

  quickjs:
    language: "c"
    image: "fuzzdrivergpt/quickjs:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/src/quickjs" : "*.h" }
    binaries: [ "/src/quickjs/libquickjs.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/src/quickjs", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link", ]
    build: "COMPBASE OUTFILE /src/quickjs/libquickjs.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/fuzz_compile.c","/src/fuzz_eval.c","/src/fuzz_regexp.c" ]
  
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Iquickjs -c fuzz_regexp.c -o fuzz_regexp.o
  #  + clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ fuzz_regexp.o -o /out/fuzz_regexp quickjs/libquickjs.a -fsanitize=fuzzer
  #

  readstat:
    language: "c"
    image: "fuzzdrivergpt/readstat:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libreadstat.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/readstat/.libs/libreadstat.a -lm -lz -ldl -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/readstat/src/fuzz/fuzz_compression_sas_rle.c","/src/readstat/src/fuzz/fuzz_compression_sav.c","/src/readstat/src/fuzz/fuzz_format.c","/src/readstat/src/fuzz/fuzz_format_dta.c","/src/readstat/src/fuzz/fuzz_format_por.c","/src/readstat/src/fuzz/fuzz_format_sas7bcat.c","/src/readstat/src/fuzz/fuzz_format_sas7bdat.c","/src/readstat/src/fuzz/fuzz_format_sas_commands.c","/src/readstat/src/fuzz/fuzz_format_sav.c","/src/readstat/src/fuzz/fuzz_format_spss_commands.c","/src/readstat/src/fuzz/fuzz_format_stata_dictionary.c","/src/readstat/src/fuzz/fuzz_format_xport.c","/src/readstat/src/fuzz/fuzz_grammar_dta_timestamp.c","/src/readstat/src/fuzz/fuzz_grammar_por_double.c","/src/readstat/src/fuzz/fuzz_grammar_sav_date.c","/src/readstat/src/fuzz/fuzz_grammar_sav_time.c","/src/readstat/src/fuzz/fuzz_grammar_spss_format.c","/src/readstat/src/fuzz/fuzz_grammar_xport_format.c" ]
  
  
  #/bin/bash ./libtool  --tag=CXX   --mode=link clang++  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link   -static  -o fuzz_format_xport src/fuzz/fuzz_format_xport-fuzz_format.o src/fuzz/fuzz_format_xport-fuzz_format_xport.o src/test/fuzz_format_xport-test_buffer_io.o libreadstat.la -fsanitize=fuzzer
  
  #libtool: link: clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o fuzz_format_xport src/fuzz/fuzz_format_xport-fuzz_format.o src/fuzz/fuzz_format_xport-fuzz_format_xport.o src/test/fuzz_format_xport-test_buffer_io.o -fsanitize=fuzzer  /src/readstat/.libs/libreadstat.a -lm -lz

  samba:
    language: "c"
    image: "fuzzdrivergpt/samba:env"
    apiblocklist: [ "^$" ]
    precode: '#include <stdbool.h>\n'
    headers: { "/usr/local/samba/include" : "**/*.h" }
    binaries: [ "/usr/local/samba/lib/libdcerpc-binding.so","/usr/local/samba/lib/libdcerpc-samr.so","/usr/local/samba/lib/libdcerpc-server-core.so","/usr/local/samba/lib/libdcerpc-server.so","/usr/local/samba/lib/libdcerpc.so","/usr/local/samba/lib/libndr-krb5pac.so","/usr/local/samba/lib/libndr-nbt.so","/usr/local/samba/lib/libndr-standard.so","/usr/local/samba/lib/libndr.so","/usr/local/samba/lib/libnetapi.so","/usr/local/samba/lib/libsamba-credentials.so","/usr/local/samba/lib/libsamba-errors.so","/usr/local/samba/lib/libsamba-hostconfig.so","/usr/local/samba/lib/libsamba-passdb.so","/usr/local/samba/lib/libsamba-policy.cpython-38-x86-64-linux-gnu.so","/usr/local/samba/lib/libsamba-util.so","/usr/local/samba/lib/libsamdb.so","/usr/local/samba/lib/libsmbclient.so","/usr/local/samba/lib/libsmbconf.so","/usr/local/samba/lib/libsmbldap.so","/usr/local/samba/lib/libtevent-util.so","/usr/local/samba/lib/libwbclient.so" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-D_SAMBA_BUILD_=4", "-DHAVE_CONFIG_H=1", "-MMD", "-D_GNU_SOURCE=1", "-D_XOPEN_SOURCE_EXTENDED=1", "-DHAVE_CONFIG_H=1", "-fPIE", "-DDEVELOPER", "-DDEBUG_PASSWORD", "-fPIC", "-D__STDC_WANT_LIB_EXT1__=1", "-D_REENTRANT", "-DDEVELOPER", "-DDEBUG_PASSWORD", "-fstack-protector-strong", "-fstack-clash-protection", "-g", "-g", "-Wall", "-Wshadow", "-Wmissing-prototypes", "-Wmissing-field-initializers", "-Wformat-zero-length", "-Wcast-align", "-Wcast-qual", "-fno-common", "-Werror=address", "-Werror=strict-prototypes", "-Wstrict-prototypes", "-Werror=write-strings", "-Wwrite-strings", "-Werror-implicit-function-declaration", "-Werror=implicit-int", "-Werror=pointer-arith", "-Wpointer-arith", "-Werror=declaration-after-statement", "-Wdeclaration-after-statement", "-Werror=return-type", "-Wreturn-type", "-Werror=uninitialized", "-Wuninitialized", "-Wimplicit-fallthrough", "-Werror=strict-overflow", "-Wstrict-overflow=2", "-Werror=old-style-definition", "-Wold-style-definition", "-Wformat=2", "-Wno-format-y2k", "-Wno-format-zero-length", "-Werror=format-security", "-Wformat-security", "-Werror=format", "-g", "-O1", "-fno-omit-frame-pointer", "-fsanitize=address", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-I/usr/local/samba/include", "-I/src/samba/lib/addns", "-I/src/samba/lib/afs", "-I/src/samba/lib/async_req", "-I/src/samba/lib/audit_logging", "-I/src/samba/lib/cmdline", "-I/src/samba/lib/compression", "-I/src/samba/lib/crypto", "-I/src/samba/lib/dbwrap", "-I/src/samba/lib/fuzzing", "-I/src/samba/lib/krb5_wrap", "-I/src/samba/lib/ldb", "-I/src/samba/lib/ldb-samba", "-I/src/samba/lib/messaging", "-I/src/samba/lib/mscat", "-I/src/samba/lib/param", "-I/src/samba/lib/printer_driver", "-I/src/samba/lib/pthreadpool", "-I/src/samba/lib/replace", "-I/src/samba/lib/smbconf", "-I/src/samba/lib/socket", "-I/src/samba/lib/talloc", "-I/src/samba/lib/tdb", "-I/src/samba/lib/tdb_wrap", "-I/src/samba/lib/tdr", "-I/src/samba/lib/tevent", "-I/src/samba/lib/texpect", "-I/src/samba/lib/torture", "-I/src/samba/lib/tsocket", "-I/src/samba/lib/util" ]
    build: "COMPBASE OUTFILE -Wl,-rpath,/src/samba/bin/shared -Wl,-rpath,/src/samba/bin/shared/private -Wl,-Bstatic -Wl,-Bdynamic -ldcerpc-binding -ldcerpc-samr -ldcerpc-server-core -ldcerpc-server -ldcerpc -lndr-krb5pac -lndr-nbt -lndr-standard -lndr -lnetapi -lsamba-credentials -lsamba-errors -lsamba-hostconfig -lsamba-passdb -lsamba-policy.cpython-38-x86-64-linux-gnu -lsamba-util -lsamdb -lsmbclient -lsmbconf -lsmbldap -ltevent-util -lwbclient -lbsd -ldl -lsystemd -Wl,--disable-new-dtags -pie -Wl,-z,relro,-z,now -Wl,--export-dynamic -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/samba/lib/fuzzing/afl-fuzz-main.c","/src/samba/lib/fuzzing/fuzz_cli_credentials_parse_string.c","/src/samba/lib/fuzzing/fuzz_dcerpc_parse_binding.c","/src/samba/lib/fuzzing/fuzz_ldap_decode.c","/src/samba/lib/fuzzing/fuzz_ldb_dn_explode.c","/src/samba/lib/fuzzing/fuzz_ldb_ldif_read.c","/src/samba/lib/fuzzing/fuzz_ldb_parse_binary_decode.c","/src/samba/lib/fuzzing/fuzz_ldb_parse_control.c","/src/samba/lib/fuzzing/fuzz_ldb_parse_tree.c","/src/samba/lib/fuzzing/fuzz_lzxpress.c","/src/samba/lib/fuzzing/fuzz_lzxpress_compress.c","/src/samba/lib/fuzzing/fuzz_lzxpress_huffman_compress.c","/src/samba/lib/fuzzing/fuzz_lzxpress_huffman_decompress.c","/src/samba/lib/fuzzing/fuzz_lzxpress_huffman_round_trip.c","/src/samba/lib/fuzzing/fuzz_lzxpress_round_trip.c","/src/samba/lib/fuzzing/fuzz_ndr_X.c","/src/samba/lib/fuzzing/fuzz_nmblib_parse_packet.c","/src/samba/lib/fuzzing/fuzz_oLschema2ldif.c","/src/samba/lib/fuzzing/fuzz_parse_lpq_entry.c","/src/samba/lib/fuzzing/fuzz_reg_parse.c","/src/samba/lib/fuzzing/fuzz_regfio.c","/src/samba/lib/fuzzing/fuzz_stable_sort.c","/src/samba/lib/fuzzing/fuzz_stable_sort_r.c","/src/samba/lib/fuzzing/fuzz_tiniparser.c","/src/samba/lib/fuzzing/fuzzing.c" ]
  
  
  #"clang", "-D_SAMBA_BUILD_=4", "-DHAVE_CONFIG_H=1", "-MMD", "-D_GNU_SOURCE=1", "-D_XOPEN_SOURCE_EXTENDED=1", "-DHAVE_CONFIG_H=1", "-fPIE", "-DDEVELOPER", "-DDEBUG_PASSWORD", "-fPIC", "-D__STDC_WANT_LIB_EXT1__=1", "-D_REENTRANT", "-DDEVELOPER", "-DDEBUG_PASSWORD", "-fstack-protector-strong", "-fstack-clash-protection", "-g", "-g", "-Wall", "-Wshadow", "-Wmissing-prototypes", "-Wmissing-field-initializers", "-Wformat-zero-length", "-Wcast-align", "-Wcast-qual", "-fno-common", "-Werror=address", "-Werror=strict-prototypes", "-Wstrict-prototypes", "-Werror=write-strings", "-Wwrite-strings", "-Werror-implicit-function-declaration", "-Werror=implicit-int", "-Werror=pointer-arith", "-Wpointer-arith", "-Werror=declaration-after-statement", "-Wdeclaration-after-statement", "-Werror=return-type", "-Wreturn-type", "-Werror=uninitialized", "-Wuninitialized", "-Wimplicit-fallthrough", "-Werror=strict-overflow", "-Wstrict-overflow=2", "-Werror=old-style-definition", "-Wold-style-definition", "-Wformat=2", "-Wno-format-y2k", "-Wno-format-zero-length", "-Werror=format-security", "-Wformat-security", "-Werror=format", "-g", "-O1", "-fno-omit-frame-pointer", "-fsanitize=address", "-O1", "-fno-omit-frame-pointer", "-gline-tables-only", "-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION", "-fsanitize=address", "-fsanitize-address-use-after-scope", "-fsanitize=fuzzer-no-link", "-DSTATIC_fuzz_lzxpress_round_trip_MODULES=NULL", "-DSTATIC_fuzz_lzxpress_round_trip_MODULES_PROTO=extern void __fuzz_lzxpress_round_trip_dummy_module_proto(void)", "-Ilib/fuzzing", "-I../../lib/fuzzing", "-Iinclude/public", "-I../../include/public", "-Isource4", "-I../../source4", "-Ilib", "-I../../lib", "-Isource4/lib", "-I../../source4/lib", "-Isource4/include", "-I../../source4/include", "-Iinclude", "-I../../include", "-Ilib/replace", "-I../../lib/replace", "-I.", "-I../..", "-Ilib/talloc", "-I../../lib/talloc", "-Ilib/util/lib/util/debug-classes", "-I../../lib/util/lib/util/debug-classes", "-Ilib/util/src/samba/third_party/gpfs", "-I../../lib/util/src/samba/third_party/gpfs", "-Ilib/compression", "-I../../lib/compression", "../../lib/fuzzing/fuzz_lzxpress_round_trip.c", "-c", "-o/src/samba/bin/default/lib/fuzzing/fuzz_lzxpress_round_trip.c.18.o"]
  #
  #01:23:51 runner ["clang", "lib/util/blocking.c.17.o", "lib/talloc/talloc.c.2.o", "lib/compression/lzxpress.c.1.o", "lib/compression/lzxpress_huffman.c.1.o", "lib/fuzzing/fuzzing.c.1.o", "lib/util/gpfswrap.c.13.o", "lib/util/stable_sort.c.39.o", "lib/util/time_basic.c.1.o", "lib/replace/replace.c.3.o", "lib/util/debug.c.14.o", "lib/fuzzing/fuzz_lzxpress_round_trip.c.18.o", "lib/util/close_low_fd.c.9.o", "-o/src/samba/bin/default/lib/fuzzing/fuzz_lzxpress_round_trip", "-Wl,-rpath,/src/samba/bin/shared", "-Wl,-rpath,/src/samba/bin/shared/private", "-Wl,-Bstatic", "-Wl,-Bdynamic", "-lbsd", "-ldl", "-lsystemd", "-Wl,--disable-new-dtags", "-fsanitize=fuzzer", "-pie", "-Wl,-z,relro,-z,now", "-Wl,--export-dynamic", "-fsanitize=address"

  selinux:
    language: "c"
    image: "fuzzdrivergpt/selinux:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/src/selinux/fuzzdrivergpt-install/usr/include" : "**/*.h" }
    binaries: [ "/src/selinux/fuzzdrivergpt-install/usr/lib" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/selinux/fuzzdrivergpt-install/usr/include","-D_GNU_SOURCE","-D_FILE_OFFSET_BITS=64" ]
    build: "COMPBASE OUTFILE /src/selinux/libsepol/src/libsepol.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/selinux/libsepol/fuzz/secilc-fuzzer.c","/src/selinux/libsepol/fuzz/binpolicy-fuzzer.c", ]
  #
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I/src/selinuxx/fuzzdrivergpt-install/usr/include -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -c -o binpolicy-fuzzer.o libsepol/fuzz/binpolicy-fuzzer.c
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer binpolicy-fuzzer.o /src/selinuxx/fuzzdrivergpt-install/usr/lib/libsepol.a -o /out/binpolicy-fuzzer


  sleuthkit:
    language: "c"
    image: "fuzzdrivergpt/sleuthkit:env"
    apiblocklist: [ "^$" ]
    precode: '#include"tsk/libtsk.h"\n#include"tsk/tsk_incs.h"\n#include"tsk/pool/tsk_apfs.h"\n#include"tsk/util/detect_encryption.h"\n#include"tsk/util/file_system_utils.h"\n#include"tsk/vs/tsk_dos.h"\n#include"tsk/vs/tsk_mac.h"\n#include"tsk/vs/tsk_gpt.h"\n#include"tsk/vs/tsk_bsd.h"\n#include"tsk/vs/tsk_sun.h"\n#include"tsk/img/logical_img.h"\n#include"tsk/base/tsk_os.h"\n#include"tsk/fs/tsk_exfatfs.h"\n#include"tsk/fs/tsk_yaffs.h"\n#include"tsk/fs/tsk_fatxxfs.h"\n#include"tsk/fs/tsk_logical_fs.h"\n#include"tsk/fs/tsk_apfs.h"\n#include"tsk/fs/tsk_ffs.h"\n#include"tsk/fs/tsk_fs.h"\n#include"tsk/fs/tsk_ntfs.h"\n#include"tsk/fs/apfs_fs.h"\n#include"tsk/fs/tsk_fatfs.h"\n#include"tsk/fs/decmpfs.h"\n#include"tsk/fs/tsk_ext2fs.h"\n#include"tsk/fs/tsk_hfs.h"\n#include"tsk/fs/tsk_iso9660.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libtsk.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-Wno-error=non-c-typedef-for-linkage","-I/src/sleuthkit","-I/src/sleuthkit/tsk/fs"  ]
    build: "COMPBASE OUTFILE /src/sleuthkit/tsk/.libs/libtsk.a -lz -ldl  -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/sleuthkit_fls_apfs_fuzzer.cc",  "/src/sleuthkit_fls_fuzzer.cc",  "/src/sleuthkit_mmls_fuzzer.cc"   ]
  #
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link  -Wno-error=non-c-typedef-for-linkage   -I.. -I. -Itsk /src/sleuthkit_fls_apfs_fuzzer.cc -o /out/sleuthkit_fls_apfs_fuzzer -fsanitize=fuzzer

  sound-open-firmware:
    language: "c"
    image: "fuzzdrivergpt/sound-open-firmware:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/install/include" : "**/*.h" }
    binaries: [ "/src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/install/lib/libsof.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include","-I/src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/install/include","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-g","-O3","-Wall","-Werror","-Wmissing-prototypes","-Wimplicit-fallthrough","-DCONFIG_LIBRARY","-i/src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/build/library_autoconfig.h" ]
    build: "COMPBASE OUTFILE -Wl,-rpath,::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -ldl -lm /src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/install/lib/libsof.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/sof/tools/oss-fuzz/fuzz_ipc.c" ]
  
  #build.sh install files to /src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/install
  
  #clang  -DRELATIVE_FILE=\"fuzz_ipc.c\" -I/src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/install/include -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -g -O3 -Wall -Werror -Wmissing-prototypes -Wimplicit-fallthrough -DCONFIG_LIBRARY -imacros/src/sof/tools/oss-fuzz/build_oss_fuzz/sof_ep/build/library_autoconfig.h -MD -MT CMakeFiles/fuzz_ipc.dir/fuzz_ipc.c.o -MF CMakeFiles/fuzz_ipc.dir/fuzz_ipc.c.o.d -o CMakeFiles/fuzz_ipc.dir/fuzz_ipc.c.o -c /src/sof/tools/oss-fuzz/fuzz_ipc.c
  #
  #/usr/local/bin/clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer CMakeFiles/fuzz_ipc.dir/fuzz_ipc.c.o -o /out/fuzz_ipc  -Wl,-rpath,::::::::::::::::::::::::::::::::::::::::::::::::::::::::: -ldl -lm sof_ep/install/lib/libsof.a

  spdk:
    language: "c"
    image: "fuzzdrivergpt/spdk:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libspdk_nbd.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_nvme.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_vhost.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_vfio_user.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_malloc.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_nvme.a","/src/spdk/fuzzdrivergpt-install/lib/libspdk_ftl.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_ioat.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_scheduler_dpdk_governor.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_sock.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_accel_ioat.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_json.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_blob.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_zone_block.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_lvol.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_blobfs_bdev.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_nvmf.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_vhost_blk.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_delay.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_scheduler_dynamic.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_init.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_ftl.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_nbd.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_split.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_accel.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_vmd.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_sock_posix.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_null.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_gpt.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_dma.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_scsi.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_aio.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_iscsi.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_vhost_scsi.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_virtio.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_ut_mock.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_env_dpdk.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_notify.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_rpc.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_virtio.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_log.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_lvol.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_passthru.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_raid.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_util.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_blob_bdev.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_bdev.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_iscsi.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_nvmf.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_blobfs.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_vmd.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_conf.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_thread.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_trace.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_env_dpdk_rpc.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_bdev_error.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_jsonrpc.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_scheduler_gscheduler.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_scsi.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_accel.a","/root/workspace/fuzzdrivergpt/install/lib/libspdk_event_sock.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include" ,"-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fPIC", "-I/src/spdk/include"]
    build: "COMPBASE OUTFILE /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_iobuf.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_trace_parser.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_scheduler.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_nbd.a
  /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_nvme.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_vhost.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_vfio_user.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_malloc.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_nvme.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_ftl.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_ioat.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_scheduler_dpdk_governor.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_sock.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_accel_ioat.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_json.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_blob.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_zone_block.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_lvol.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_blobfs_bdev.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_nvmf.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_vhost_blk.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_delay.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_scheduler_dynamic.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_init.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_ftl.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_nbd.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_split.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_accel.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_vmd.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_sock_posix.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_null.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_gpt.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_dma.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_scsi.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_aio.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_iscsi.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_vhost_scsi.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_virtio.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_ut_mock.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_env_dpdk.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_notify.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_rpc.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_virtio.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_log.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_lvol.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_passthru.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_raid.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_util.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_blob_bdev.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_bdev.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_iscsi.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_nvmf.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_blobfs.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_vmd.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_conf.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_thread.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_trace.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_env_dpdk_rpc.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_bdev_error.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_jsonrpc.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_scheduler_gscheduler.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_scsi.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_accel.a /src/spdk/fuzzdrivergpt-install/lib/libspdk_event_sock.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/parse_json_fuzzer.cc" ]
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -I/src/spdk -I/src/spdk/include -fPIC -c /src/parse_json_fuzzer.cc -o parse_json_fuzzer.o
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer parse_json_fuzzer.o -o /out/parse_json_fuzzer /src/spdk/build/lib/libspdk_env_dpdk.a /src/spdk/build/lib/libspdk_json.a


  sudoers:
    language: "c"
    image: "fuzzdrivergpt/sudoers:env"
    apiblocklist: [ "^$" ]
    precode: '#include <stdbool.h>\n'
    headers: { 
      "/src/sudo/include" : "*.h",
      "/src/sudo/plugins" : "**/*.h"
    }
    binaries: [ "/src/sudo/lib/iolog/.libs/libsudo_iolog.a","/src/sudo/lib/logsrv/.libs/liblogsrv.a","/src/sudo/lib/fuzzstub/.libs/libsudo_fuzzstub.a","/src/sudo/lib/util/.libs/libsudo_util.a", "/src/sudo/lib/eventlog/.libs/libsudo_eventlog.a","/src/sudo/lib/protobuf-c/.libs/libprotobuf-c.a","/src/sudo/plugins/sample/.libs/sample_plugin.a","/src/sudo/plugins/audit_json/.libs/audit_json.a","/src/sudo/plugins/sudoers/.libs/sudoers.a","/src/sudo/plugins/sudoers/.libs/libparsesudoers.a","/src/sudo/plugins/sample_approval/.libs/sample_approval.a","/src/sudo/plugins/system_group/.libs/system_group.a","/src/sudo/plugins/group_file/.libs/group_file.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/root/workspace/fuzzdrivergpt/install/include", "-I/src/sudo/include","-I/src/sudo/plugins" ,"-D_PATH_SUDO_CONF='/etc/sudo.conf'","-DZLIB_CONST","-D_FORTIFY_SOURCE=2","-DDEFAULT_TEXT_DOMAIN='sudo'","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fvisibility=hidden","-Wall","-Wmissing-prototypes","-Wno-unknown-pragmas","-Wpointer-arith","-Wshadow","-Wsign-compare","-Wwrite-strings","-Wvla","-Walloca","-Wimplicit-fallthrough","-Werror","-fPIE","-fstack-protector-strong","-fcf-protection",]
    build: "COMPBASE OUTFILE /src/sudo/lib/iolog/.libs/libsudo_iolog.a /src/sudo/lib/logsrv/.libs/liblogsrv.a /src/sudo/lib/fuzzstub/.libs/libsudo_fuzzstub.a /src/sudo/lib/util/.libs/libsudo_util.a /src/sudo/lib/eventlog/.libs/libsudo_eventlog.a /src/sudo/lib/protobuf-c/.libs/libprotobuf-c.a /src/sudo/plugins/sample/.libs/sample_plugin.a /src/sudo/plugins/audit_json/.libs/audit_json.a /src/sudo/plugins/sudoers/.libs/sudoers.a /src/sudo/plugins/sudoers/.libs/libparsesudoers.a /src/sudo/plugins/sample_approval/.libs/sample_approval.a /src/sudo/plugins/system_group/.libs/system_group.a /src/sudo/plugins/group_file/.libs/group_file.a -Wl,--allow-multiple-definition -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIE -pie -fstack-protector-strong -fcf-protection -Wl,-z -Wl,relro -Wl,-z -Wl,now -Wl,-z -Wl,noexecstack -O1 -Wl,--enable-new-dtags -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/sudo/plugins/sudoers/regress/fuzz/fuzz_policy.c","/src/sudo/logsrvd/regress/fuzz/fuzz_logsrvd_conf.c","/src/sudo/lib/iolog/regress/fuzz/fuzz_iolog_json.c","/src/sudo/plugins/sudoers/regress/fuzz/fuzz_sudoers_ldif.c","/src/sudo/plugins/sudoers/regress/fuzz/fuzz_sudoers.c","/src/sudo/lib/iolog/regress/fuzz/fuzz_iolog_legacy.c","/src/sudo/lib/util/regress/fuzz/fuzz_sudo_conf.c","/src/sudo/lib/iolog/regress/fuzz/fuzz_iolog_timing.c" ]
  
  
  # clang -c -o fuzz_sudo_conf.lo -I../../include -I../.. -I. -I. -D_PATH_SUDO_CONF=\'/etc/sudo.conf\' -DZLIB_CONST -D_FORTIFY_SOURCE=2 -DDEFAULT_TEXT_DOMAIN=\'sudo\' -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fvisibility=hidden -Wall -Wmissing-prototypes -Wno-unknown-pragmas -Wpointer-arith -Wshadow -Wsign-compare -Wwrite-strings -Wvla -Walloca -Wimplicit-fallthrough -Werror -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIE -fstack-protector-strong -fcf-protection ./regress/fuzz/fuzz_sudo_conf.c
  #
  #
  #  clang -o fuzz_sudo_conf fuzz_sudo_conf.o -Wl,--allow-multiple-definition -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fPIE -pie -fstack-protector-strong -fcf-protection -Wl,-z -Wl,relro -Wl,-z -Wl,now -Wl,-z -Wl,noexecstack -O1 -Wl,--enable-new-dtags -fsanitize=fuzzer ./.libs/libparsesudoers.a  ./.libs/libsudo_util.a -lcrypto -lpthread

  tidy-html5:
    language: "c"
    image: "fuzzdrivergpt/tidy-html5:env"
    apiblocklist: [ "^$" ]
    precode: '#include "tidy.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libtidy.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /work/tidy-html5/libtidy.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: ['/src/tidy_config_fuzzer.c', '/src/tidy_general_fuzzer.c', '/src/tidy_parse_string_fuzzer.c', '/src/tidy_fuzzer.c', '/src/tidy_parse_file_fuzzer.c', '/src/tidy_xml_fuzzer.c']
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 tidy_general_fuzzer.o -o /out/tidy_general_fuzzer -fsanitize=fuzzer /work/tidy-html5/libtidy.a

  tmux:
    language: "c"
    image: "fuzzdrivergpt/tmux:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { 
      "/src/tmux" : "*.h",
      "/src/tmux/compat" : "*.h" 
    }
    binaries: [ "/src/tmux/libtmux.a" ]
    compile: ['/usr/local/bin/clang-15', '-isystem', '/usr/local/lib/clang/15.0.0/include', '-isystem', '/usr/local/include', '-isystem', '/usr/include/x86_64-linux-gnu', '-isystem', '/usr/include', '-fsanitize=address', '-fsanitize=fuzzer','-I/root/workspace/fuzzdrivergpt/install/include','-DPACKAGE_NAME="tmux"','-DPACKAGE_TARNAME="tmux"','-DPACKAGE_VERSION="next-3.4"','-DPACKAGE_STRING="tmux next-3.4"','-DPACKAGE_BUGREPORT=""','-DPACKAGE_URL=""','-DPACKAGE="tmux"','-DVERSION="next-3.4"','-DNEED_FUZZING=1','-DSTDC_HEADERS=1','-DHAVE_SYS_TYPES_H=1','-DHAVE_SYS_STAT_H=1','-DHAVE_STDLIB_H=1','-DHAVE_STRING_H=1','-DHAVE_MEMORY_H=1','-DHAVE_STRINGS_H=1','-DHAVE_INTTYPES_H=1','-DHAVE_STDINT_H=1','-DHAVE_UNISTD_H=1','-D__EXTENSIONS__=1','-D_ALL_SOURCE=1','-D_GNU_SOURCE=1','-D_POSIX_PTHREAD_SEMANTICS=1','-D_TANDEM_SOURCE=1','-DHAVE_DIRENT_H=1','-DHAVE_FCNTL_H=1','-DHAVE_INTTYPES_H=1','-DHAVE_PATHS_H=1','-DHAVE_PTY_H=1','-DHAVE_STDINT_H=1','-DHAVE_SYS_DIR_H=1','-DHAVE_LIBM=1','-DHAVE_DIRFD=1','-DHAVE_FLOCK=1','-DHAVE_PRCTL=1','-DHAVE_SYSCONF=1','-DHAVE_ASPRINTF=1','-DHAVE_CFMAKERAW=1','-DHAVE_CLOCK_GETTIME=1','-DHAVE_EXPLICIT_BZERO=1','-DHAVE_GETDTABLESIZE=1','-DHAVE_GETLINE=1','-DHAVE_MEMMEM=1','-DHAVE_SETENV=1','-DHAVE_STRCASESTR=1','-DHAVE_STRNDUP=1','-DHAVE_STRSEP=1','-DHAVE_EVENT2_EVENT_H=1','-DHAVE_NCURSES_H=1','-DHAVE_B64_NTOP=1','-DHAVE_MALLOC_TRIM=1','-DHAVE_DAEMON=1','-DHAVE_FORKPTY=1','-DHAVE___PROGNAME=1','-DHAVE_PROGRAM_INVOCATION_SHORT_NAME=1','-DHAVE_PR_SET_NAME=1','-DHAVE_SO_PEERCRED=1','-DHAVE_PROC_PID=1' ,'-D_DEFAULT_SOURCE','-D_XOPEN_SOURCE=600','-I/usr/local/include','-DTMUX_CONF="/etc/tmux.conf:~/.tmux.conf:$XDG_CONFIG_HOME/tmux/tmux.conf:~/.config/tmux/tmux.conf"','-DTMUX_TERM="tmux-256color"','-O1','-fno-omit-frame-pointer','-gline-tables-only','-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION','-fsanitize=address','-fsanitize-address-use-after-scope','-fsanitize=fuzzer-no-link','-I/src/tmux' ]
    build: "COMPBASE OUTFILE /src/tmux/libtmux.a -lutil  -l:libtinfo.a  -L/usr/local/lib -levent_core -lm  -lresolv -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/tmux/fuzz/input-fuzzer.c" ]
  
  #clang -DPACKAGE_NAME='tmux' -DPACKAGE_TARNAME='tmux' -DPACKAGE_VERSION='next-3.4' -DPACKAGE_STRING='tmux next-3.4' -DPACKAGE_BUGREPORT='' -DPACKAGE_URL='' -DPACKAGE='tmux' -DVERSION='next-3.4' -DNEED_FUZZING=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_DIRENT_H=1 -DHAVE_FCNTL_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_PATHS_H=1 -DHAVE_PTY_H=1 -DHAVE_STDINT_H=1 -DHAVE_SYS_DIR_H=1 -DHAVE_LIBM=1 -DHAVE_DIRFD=1 -DHAVE_FLOCK=1 -DHAVE_PRCTL=1 -DHAVE_SYSCONF=1 -DHAVE_ASPRINTF=1 -DHAVE_CFMAKERAW=1 -DHAVE_CLOCK_GETTIME=1 -DHAVE_EXPLICIT_BZERO=1 -DHAVE_GETDTABLESIZE=1 -DHAVE_GETLINE=1 -DHAVE_MEMMEM=1 -DHAVE_SETENV=1 -DHAVE_STRCASESTR=1 -DHAVE_STRNDUP=1 -DHAVE_STRSEP=1 -DHAVE_EVENT2_EVENT_H=1 -DHAVE_NCURSES_H=1 -DHAVE_B64_NTOP=1 -DHAVE_MALLOC_TRIM=1 -DHAVE_DAEMON=1 -DHAVE_FORKPTY=1 -DHAVE___PROGNAME=1 -DHAVE_PROGRAM_INVOCATION_SHORT_NAME=1 -DHAVE_PR_SET_NAME=1 -DHAVE_SO_PEERCRED=1 -DHAVE_PROC_PID=1
  #  -I.  -D_DEFAULT_SOURCE -D_XOPEN_SOURCE=600
  #  -I/usr/local/include -DTMUX_VERSION='"next-3.4"' -DTMUX_CONF='"/etc/tmux.conf:~/.tmux.conf:$XDG_CONFIG_HOME/tmux/tmux.conf:~/.config/tmux/tmux.conf"' -DTMUX_TERM='"tmux-256color"'      -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MT fuzz/input-fuzzer.o -MD -MP -MF $depbase.Tpo -c -o fuzz/input-fuzzer.o fuzz/input-fuzzer.c
  #
  #clang   -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer -lc++  -o fuzz/input-fuzzer fuzz/input-fuzzer.o
  #compat/closefrom.o compat/fgetln.o compat/freezero.o compat/getdtablecount.o compat/getpeereid.o compat/getprogname.o compat/setproctitle.o compat/strlcat.o compat/strlcpy.o compat/strtonum.o compat/reallocarray.o compat/recallocarray.o compat/getopt.o compat/imsg.o compat/imsg-buffer.o compat/vis.o compat/unvis.o compat/fdforkpty.o alerts.o arguments.o attributes.o cfg.o client.o cmd-attach-session.o cmd-bind-key.o cmd-break-pane.o cmd-capture-pane.o cmd-choose-tree.o cmd-command-prompt.o cmd-confirm-before.o cmd-copy-mode.o cmd-detach-client.o cmd-display-menu.o cmd-display-message.o cmd-display-panes.o cmd-find-window.o cmd-find.o cmd-if-shell.o cmd-join-pane.o cmd-kill-pane.o cmd-kill-server.o cmd-kill-session.o cmd-kill-window.o cmd-list-buffers.o cmd-list-clients.o cmd-list-keys.o cmd-list-panes.o cmd-list-sessions.o cmd-list-windows.o cmd-load-buffer.o cmd-lock-server.o cmd-move-window.o cmd-new-session.o cmd-new-window.o cmd-parse.o cmd-paste-buffer.o cmd-pipe-pane.o cmd-queue.o cmd-refresh-client.o cmd-rename-session.o cmd-rename-window.o cmd-resize-pane.o cmd-resize-window.o cmd-respawn-pane.o cmd-respawn-window.o cmd-rotate-window.o cmd-run-shell.o cmd-save-buffer.o cmd-select-layout.o cmd-select-pane.o cmd-select-window.o cmd-send-keys.o cmd-server-access.o cmd-set-buffer.o cmd-set-environment.o cmd-set-option.o cmd-show-environment.o cmd-show-messages.o cmd-show-options.o cmd-show-prompt-history.o cmd-source-file.o cmd-split-window.o cmd-swap-pane.o cmd-swap-window.o cmd-switch-client.o cmd-unbind-key.o cmd-wait-for.o cmd.o colour.o control-notify.o control.o environ.o file.o format.o format-draw.o grid-reader.o grid-view.o grid.o hyperlinks.o input-keys.o input.o job.o key-bindings.o key-string.o layout-custom.o layout-set.o layout.o log.o menu.o mode-tree.o names.o notify.o options-table.o options.o paste.o popup.o proc.o regsub.o resize.o screen-redraw.o screen-write.o screen.o server-acl.o server-client.o server-fn.o server.o session.o spawn.o status.o style.o tmux.o tty-acs.o tty-features.o tty-keys.o tty-term.o tty.o utf8.o window-buffer.o window-client.o window-clock.o window-copy.o window-customize.o window-tree.o window.o xmalloc.o osdep-linux.o
  #-lutil  -l:libtinfo.a  -L/usr/local/lib -levent_core -lm  -lresolv

  unbound:
    language: "c"
    image: "fuzzdrivergpt/unbound:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libunbound.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DVALGRIND=1","-I/src/unbound","-DSRCDIR=/src/unbound" ]
    build: "COMPBASE OUTFILE -lssl -lcrypto -pthread /root/workspace/fuzzdrivergpt/install/lib/libunbound.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/unbound/fuzz_1.c", "/src/unbound/fuzz_2.c","/src/unbound/fuzz_3.c","/src/unbound/fuzz_4.c","/src/unbound/parse_packet_fuzzer.c"]
  
  #-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DVALGRIND=1 -I/src/unbound -DSRCDIR=/src/unbound
  #
  #
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -fsanitize=fuzzer -lssl -lcrypto -pthread -o /out/fuzz_1_fuzzer fuzz_1.o dns.o infra.o rrset.o dname.o msgencode.o as112.o msgparse.o msgreply.o packed_rrset.o iterator.o iter_delegpt.o iter_donotq.o iter_fwd.o iter_hints.o iter_priv.o iter_resptype.o iter_scrub.o iter_utils.o localzone.o mesh.o modstack.o view.o outbound_list.o alloc.o config_file.o configlexer.o configparser.o fptr_wlist.o edns.o locks.o log.o mini_event.o module.o net_help.o random.o rbtree.o regional.o rtt.o dnstree.o lookup3.o lruhash.o slabhash.o tcp_conn_limit.o timehist.o tube.o winsock_event.o autotrust.o val_anchor.o validator.o val_kcache.o val_kentry.o val_neg.o val_nsec3.o val_nsec.o val_secalgo.o val_sigcrypt.o val_utils.o dns64.o authzone.o respip.o netevent.o listen_dnsport.o outside_network.o ub_event.o keyraw.o sbuffer.o wire2str.o parse.o parseutil.o rrdef.o str2wire.o libunbound.o libworker.o context.o rpz.o proxy_protocol.o strlcat.o strlcpy.o arc4random.o arc4random_uniform.o arc4_lock.o

  unicorn:
    language: "c"
    image: "fuzzdrivergpt/unicorn:env"
    apiblocklist: [ "^$" ]
    precode: '#include "unicorn/unicorn.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libunicorn.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libunicorn.a /src/unicorn/build/libx86_64-softmmu.a /src/unicorn/build/libaarch64-softmmu.a /src/unicorn/build/libarm-softmmu.a /src/unicorn/build/libm68k-softmmu.a /src/unicorn/build/libmips64el-softmmu.a /src/unicorn/build/libmips64-softmmu.a /src/unicorn/build/libmipsel-softmmu.a /src/unicorn/build/libmips-softmmu.a /src/unicorn/build/libppc64-softmmu.a /src/unicorn/build/libppc-softmmu.a /src/unicorn/build/libriscv32-softmmu.a /src/unicorn/build/libriscv64-softmmu.a /src/unicorn/build/libsparc64-softmmu.a /src/unicorn/build/libsparc-softmmu.a /src/unicorn/build/libs390x-softmmu.a /src/unicorn/build/libunicorn-common.a -lpthread -lrt -lm -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/unicorn/tests/fuzz/fuzz_emu_arm64_arm.c","/src/unicorn/tests/fuzz/fuzz_emu_arm64_armbe.c","/src/unicorn/tests/fuzz/fuzz_emu_arm_arm.c","/src/unicorn/tests/fuzz/fuzz_emu_arm_armbe.c","/src/unicorn/tests/fuzz/fuzz_emu_arm_thumb.c","/src/unicorn/tests/fuzz/fuzz_emu_m68k_be.c","/src/unicorn/tests/fuzz/fuzz_emu_mips_32be.c","/src/unicorn/tests/fuzz/fuzz_emu_mips_32le.c","/src/unicorn/tests/fuzz/fuzz_emu_s390x_be.c","/src/unicorn/tests/fuzz/fuzz_emu_sparc_32be.c","/src/unicorn/tests/fuzz/fuzz_emu_x86_16.c","/src/unicorn/tests/fuzz/fuzz_emu_x86_32.c","/src/unicorn/tests/fuzz/fuzz_emu_x86_64.c" ]
  
  
  # clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ CMakeFiles/fuzz_emu_arm64_armbe.dir/tests/fuzz/fuzz_emu_arm64_armbe.c.o libunicorn.a libx86_64-softmmu.a libaarch64-softmmu.a libarm-softmmu.a libm68k-softmmu.a libmips64el-softmmu.a libmips64-softmmu.a libmipsel-softmmu.a libmips-softmmu.a libppc64-softmmu.a libppc-softmmu.a libriscv32-softmmu.a libriscv64-softmmu.a libsparc64-softmmu.a libsparc-softmmu.a libs390x-softmmu.a libunicorn-common.a -lpthread -lrt -lm -o /out/fuzz_emu_arm64_armbe -fsanitize=fuzzer

  unit:
    language: "c"
    image: "fuzzdrivergpt/unit:env"
    apiblocklist: [ "^$" ]
    precode: '#include "nxt_main.h"\n#include "nxt_conf.h"\n'
    headers: { 
      "/src/unit/src" : "**/*.h",
      "/src/unit/build" : "*.h" 
    }
    binaries: [ "/src/unit/build/libnxt.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/unit/src","-I/src/unit/build" ]
    build: "COMPBASE OUTFILE -L/src/unit/build -lnxt -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/unit/fuzzer/Fuzz_http.c","/src/unit/fuzzer/Fuzz_json.c" ]
  
  #clang  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I ../src -I ../build -I../src/test/ -Wall -Werror -g -c Fuzz_http.c
  #  clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -L../build/ -o Fuzz_http Fuzz_http.o  -fsanitize=fuzzer -lnxt

  uriparser:
    language: "c"
    image: "fuzzdrivergpt/uriparser:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include": "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/liburiparser.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/uriparser/build/liburiparser.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/uri_dissect_query_malloc_fuzzer.cc","/src/uri_parse_fuzzer.cc","/src/uri_free_fuzzer.cc" ]
  
  #clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I. /src/uri_dissect_query_malloc_fuzzer.cc -fsanitize=fuzzer ./liburiparser.a -o /out/uri_dissect_query_malloc_fuzzer

  utf8proc:
    language: "c"
    image: "fuzzdrivergpt/utf8proc:env"
    apiblocklist: [ "^$" ]
    precode: '#include "utf8proc.h"\n'
    autoinclude: false
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*.h" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libutf8proc.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-DUTF8PROC_STATIC","-I/src/utf8proc","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libutf8proc.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/utf8proc/test/fuzzer.c" ]
  
  #/usr/local/bin/clang -DUTF8PROC_STATIC -I/src/utf8proc/. -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -MD -MT CMakeFiles/fuzzer.dir/test/fuzzer.c.o -MF CMakeFiles/fuzzer.dir/test/fuzzer.c.o.d -o CMakeFiles/fuzzer.dir/test/fuzzer.c.o -c /src/utf8proc/test/fuzzer.c
  #/usr/local/bin/clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -rdynamic CMakeFiles/fuzzer.dir/test/fuzzer.c.o -o fuzzer  -fsanitize=fuzzer libutf8proc.a

  varnish:
    language: "c"
    image: "fuzzdrivergpt/varnish:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include/varnish" : "**/*" }
    binaries: [ "/src/varnish-cache/lib/libvarnish/.libs/libvarnish.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-I/src/varnishi-cache/include","-I/src/varnishi-cache/lib/libvgz","-I/src/varnishi-cache/lib/libvsc","-I/src/varnishi-cache/libvcc","-I/src/varnishi-cache/bin/varnishd","-DNOT_IN_A_VMOD","-DENABLE_WORKSPACE_EMULATOR","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-DZ_PREFIX","-pthread","-Wall","-Werror","-Wno-error=unused-result" ]
    build: "COMPBASE OUTFILE -o OUTEXE /src/varnish-cache/lib/libvarnish/.libs/libvarnish.a -l:libpcre2-8.a -lnsl -lrt -lm /src/varnish-cache/lib/libvgz/.libs/libvgz.a "
    # seems the following are not necessary
    #-L/root/workspace/fuzzdrivergpt/install/lib/varnish/vmods -lvmod_blob -lvmod_cookie -lvmod_debug -lvmod_directors -lvmod_proxy -lvmod_purge -lvmod_std -lvmod_unix -lvmod_vtc"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/varnish-cache/bin/varnishd/fuzzers/esi_parse_fuzzer.c" ]
  
  
  
  
  #clang -DHAVE_CONFIG_H -I. -I../..  -I../../include -I../../lib/libvgz -I../../bin/varnishd -I../../include -I../../lib/libvsc  -DNOT_IN_A_VMOD -DENABLE_WORKSPACE_EMULATOR  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DZ_PREFIX -pthread -Wall -Werror -Wno-error=unused-result -MT fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o -MD -MP -MF fuzzers/.deps/esi_parse_fuzzer-esi_parse_fuzzer.Tpo -c -o fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o `test -f 'fuzzers/esi_parse_fuzzer.c' || echo './'`fuzzers/esi_parse_fuzzer.c
  #mv -f fuzzers/.deps/esi_parse_fuzzer-esi_parse_fuzzer.Tpo fuzzers/.deps/esi_parse_fuzzer-esi_parse_fuzzer.Po
  #mv -f cache/.deps/esi_parse_fuzzer-cache_esi_parse.Tpo cache/.deps/esi_parse_fuzzer-cache_esi_parse.Po
  #/bin/bash ../../libtool  --tag=CC   --mode=link clang -DNOT_IN_A_VMOD -DENABLE_WORKSPACE_EMULATOR  -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DZ_PREFIX -pthread -Wall -Werror -Wno-error=unused-result /usr/lib/libFuzzingEngine.a  -o esi_parse_fuzzer cache/esi_parse_fuzzer-cache_ws_emu.o cache/esi_parse_fuzzer-cache_ws_common.o cache/esi_parse_fuzzer-cache_esi_parse.o fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o ../../lib/libvarnish/libvarnish.la ../../lib/libvgz/libvgz.la
  #libtool: link: clang -DNOT_IN_A_VMOD -DENABLE_WORKSPACE_EMULATOR -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -DZ_PREFIX -pthread -Wall -Werror -Wno-error=unused-result -o esi_parse_fuzzer cache/esi_parse_fuzzer-cache_ws_emu.o cache/esi_parse_fuzzer-cache_ws_common.o cache/esi_parse_fuzzer-cache_esi_parse.o fuzzers/esi_parse_fuzzer-esi_parse_fuzzer.o  /usr/lib/libFuzzingEngine.a ../../lib/libvarnish/.libs/libvarnish.a -l:libpcre2-8.a -lm ../../lib/libvgz/.libs/libvgz.a -pthread
  


  vlc:
    language: "c"
    image: "fuzzdrivergpt/vlc:env"
    apiblocklist: [ "^$" ]
    precode: '#include "vlc.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/src/vlc/fuzzdrivergpt-install/lib/libvlc.a","/src/vlc/fuzzdrivergpt-install/lib/libvlccore.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-I/root/workspace/fuzzdrivergpt/install/include/vlc/plugins", "-DHAVE_CONFIG_H","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-Werror=invalid-command-line-argument","-Werror=unknown-warning-option","-pthread","-Wall","-Wextra","-Wsign-compare","-Wundef","-Wpointer-arith","-Wvolatile-register-var","-Wformat","-Wformat-security","-Wbad-function-cast","-Wwrite-strings","-Wmissing-prototypes","-Werror-implicit-function-declaration","-Winit-self","-pipe","-fvisibility=hidden","-fno-math-errno","-funsafe-math-optimizations","-fno-rounding-math","-funroll-loops","-fstack-protector-strong" ]
    build: "COMPBASE OUTFILE -Wl,-z  /src/vlc/test/.libs/libvlc_demux_dec_run.a /src/vlc/lib/.libs/libvlc.a /src/vlc/modules/.libs/libconsole_logger_plugin.a /src/vlc/modules/.libs/libaiff_plugin.a /src/vlc/modules/.libs/libasf_plugin.a /src/vlc/modules/.libs/libau_plugin.a /src/vlc/modules/.libs/libavi_plugin.a /src/vlc/modules/.libs/libcaf_plugin.a /src/vlc/modules/.libs/libes_plugin.a /src/vlc/modules/.libs/libflacsys_plugin.a /src/vlc/modules/.libs/libh26x_plugin.a /src/vlc/modules/.libs/libmjpeg_plugin.a /src/vlc/modules/.libs/libmp4_plugin.a /src/vlc/modules/.libs/libnsv_plugin.a /src/vlc/modules/.libs/libnuv_plugin.a /src/vlc/modules/.libs/libps_plugin.a /src/vlc/modules/.libs/libpva_plugin.a /src/vlc/modules/.libs/libsap_plugin.a /src/vlc/modules/.libs/libsmf_plugin.a /src/vlc/modules/.libs/libsubtitle_plugin.a /src/vlc/modules/.libs/libtta_plugin.a /src/vlc/modules/.libs/libttml_plugin.a /src/vlc/modules/.libs/libty_plugin.a /src/vlc/modules/.libs/libvoc_plugin.a /src/vlc/modules/.libs/libwav_plugin.a /src/vlc/modules/.libs/libwebvtt_plugin.a /src/vlc/modules/.libs/libxa_plugin.a /src/vlc/modules/.libs/libpacketizer_a52_plugin.a /src/vlc/modules/.libs/libpacketizer_copy_plugin.a /src/vlc/modules/.libs/libpacketizer_dts_plugin.a /src/vlc/modules/.libs/libpacketizer_flac_plugin.a /src/vlc/modules/.libs/libpacketizer_h264_plugin.a /src/vlc/modules/.libs/libpacketizer_hevc_plugin.a /src/vlc/modules/.libs/libpacketizer_mlp_plugin.a /src/vlc/modules/.libs/libpacketizer_mpeg4audio_plugin.a /src/vlc/modules/.libs/libpacketizer_mpeg4video_plugin.a /src/vlc/modules/.libs/libpacketizer_mpegaudio_plugin.a /src/vlc/modules/.libs/libpacketizer_mpegvideo_plugin.a /src/vlc/modules/.libs/libpacketizer_vc1_plugin.a /src/vlc/modules/.libs/librawaud_plugin.a /src/vlc/modules/.libs/librawvid_plugin.a /src/vlc/modules/.libs/libfilesystem_plugin.a /src/vlc/modules/.libs/libadpcm_plugin.a /src/vlc/modules/.libs/libaes3_plugin.a /src/vlc/modules/.libs/libaraw_plugin.a /src/vlc/modules/.libs/libg711_plugin.a /src/vlc/modules/.libs/liblpcm_plugin.a /src/vlc/modules/.libs/libuleaddvaudio_plugin.a /src/vlc/modules/.libs/librawvideo_plugin.a /src/vlc/modules/.libs/libcc_plugin.a /src/vlc/modules/.libs/libcvdsub_plugin.a /src/vlc/modules/.libs/libdvbsub_plugin.a /src/vlc/modules/.libs/libscte18_plugin.a /src/vlc/modules/.libs/libscte27_plugin.a /src/vlc/modules/.libs/libspudec_plugin.a /src/vlc/modules/.libs/libstl_plugin.a /src/vlc/modules/.libs/libsubsdec_plugin.a /src/vlc/modules/.libs/libsubsusf_plugin.a /src/vlc/modules/.libs/libsvcdsub_plugin.a /src/vlc/modules/.libs/libtextst_plugin.a /src/vlc/modules/.libs/libsubstx3g_plugin.a /src/vlc/modules/.libs/libtelx_plugin.a /src/vlc/src/.libs/libvlccore.a /src/vlc/compat/.libs/libcompat.a   -lm -pthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/vlc/test/vlc-demux-libfuzzer.c" ]
  
  #clang -DHAVE_CONFIG_H -I. -I..   -I../include -I../include  -DSRCDIR=\".\" -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link  -Werror=invalid-command-line-argument -Werror=unknown-warning-option -pthread -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wvolatile-register-var -Wformat -Wformat-security -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Werror-implicit-function-declaration -Winit-self -pipe -fvisibility=hidden -fno-math-errno -funsafe-math-optimizations -fno-rounding-math -funroll-loops -fstack-protector-strong -MT vlc-demux-libfuzzer.o -MD -MP -MF $depbase.Tpo -c -o vlc-demux-libfuzzer.o vlc-demux-libfuzzer.c &&\
  #
  #
  #clang -DSRCDIR=\".\" -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -Werror=invalid-command-line-argument -Werror=unknown-warning-option -pthread -Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wvolatile-register-var -Wformat -Wformat-security -Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Werror-implicit-function-declaration -Winit-self -pipe -fvisibility=hidden -fno-math-errno -funsafe-math-optimizations -fno-rounding-math -funroll-loops -fstack-protector-strong -fsanitize=fuzzer
  #  -Wl,-z -Wl,defs -o vlc-demux-dec-libfuzzer vlc-demux-libfuzzer.o  ./.libs/libvlc_demux_dec_run.a /src/vlc/lib/.libs/libvlc.a /src/vlc/modules/.libs/libconsole_logger_plugin.a /src/vlc/modules/.libs/libaiff_plugin.a /src/vlc/modules/.libs/libasf_plugin.a /src/vlc/modules/.libs/libau_plugin.a /src/vlc/modules/.libs/libavi_plugin.a /src/vlc/modules/.libs/libcaf_plugin.a /src/vlc/modules/.libs/libes_plugin.a /src/vlc/modules/.libs/libflacsys_plugin.a /src/vlc/modules/.libs/libh26x_plugin.a /src/vlc/modules/.libs/libmjpeg_plugin.a /src/vlc/modules/.libs/libmp4_plugin.a /src/vlc/modules/.libs/libnsv_plugin.a /src/vlc/modules/.libs/libnuv_plugin.a /src/vlc/modules/.libs/libps_plugin.a /src/vlc/modules/.libs/libpva_plugin.a /src/vlc/modules/.libs/libsap_plugin.a /src/vlc/modules/.libs/libsmf_plugin.a /src/vlc/modules/.libs/libsubtitle_plugin.a /src/vlc/modules/.libs/libtta_plugin.a /src/vlc/modules/.libs/libttml_plugin.a /src/vlc/modules/.libs/libty_plugin.a /src/vlc/modules/.libs/libvoc_plugin.a /src/vlc/modules/.libs/libwav_plugin.a /src/vlc/modules/.libs/libwebvtt_plugin.a /src/vlc/modules/.libs/libxa_plugin.a /src/vlc/modules/.libs/libpacketizer_a52_plugin.a /src/vlc/modules/.libs/libpacketizer_copy_plugin.a /src/vlc/modules/.libs/libpacketizer_dts_plugin.a /src/vlc/modules/.libs/libpacketizer_flac_plugin.a /src/vlc/modules/.libs/libpacketizer_h264_plugin.a /src/vlc/modules/.libs/libpacketizer_hevc_plugin.a /src/vlc/modules/.libs/libpacketizer_mlp_plugin.a /src/vlc/modules/.libs/libpacketizer_mpeg4audio_plugin.a /src/vlc/modules/.libs/libpacketizer_mpeg4video_plugin.a /src/vlc/modules/.libs/libpacketizer_mpegaudio_plugin.a /src/vlc/modules/.libs/libpacketizer_mpegvideo_plugin.a /src/vlc/modules/.libs/libpacketizer_vc1_plugin.a /src/vlc/modules/.libs/librawaud_plugin.a /src/vlc/modules/.libs/librawvid_plugin.a /src/vlc/modules/.libs/libfilesystem_plugin.a /src/vlc/modules/.libs/libadpcm_plugin.a /src/vlc/modules/.libs/libaes3_plugin.a /src/vlc/modules/.libs/libaraw_plugin.a /src/vlc/modules/.libs/libg711_plugin.a /src/vlc/modules/.libs/liblpcm_plugin.a /src/vlc/modules/.libs/libuleaddvaudio_plugin.a /src/vlc/modules/.libs/librawvideo_plugin.a /src/vlc/modules/.libs/libcc_plugin.a /src/vlc/modules/.libs/libcvdsub_plugin.a /src/vlc/modules/.libs/libdvbsub_plugin.a /src/vlc/modules/.libs/libscte18_plugin.a /src/vlc/modules/.libs/libscte27_plugin.a /src/vlc/modules/.libs/libspudec_plugin.a /src/vlc/modules/.libs/libstl_plugin.a /src/vlc/modules/.libs/libsubsdec_plugin.a /src/vlc/modules/.libs/libsubsusf_plugin.a /src/vlc/modules/.libs/libsvcdsub_plugin.a /src/vlc/modules/.libs/libtextst_plugin.a /src/vlc/modules/.libs/libsubstx3g_plugin.a /src/vlc/modules/.libs/libtelx_plugin.a /src/vlc/src/.libs/libvlccore.a /src/vlc/compat/.libs/libcompat.a -lstdc++ -lm -pthread

  w3m:
    language: "c"
    image: "fuzzdrivergpt/w3m:env"
    apiblocklist: [ "^$" ]
    precode: '#include "wc.h"\n'
    headers: { 
      "/src/w3m/libwc" : "*.h",
      "/src/w3m" : "*.h" 
    }
    binaries: [ "/src/w3m/libwc/libwc.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/w3m","-I/src/w3m/libwc" ,"-DHAVE_CONFIG_H"]
    build: "COMPBASE OUTFILE /src/w3m/Str.o /src/w3m/myctype.o /src/w3m/libwc/libwc.a /usr/lib/x86_64-linux-gnu/libgc.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/w3m/fuzz/fuzz-conv.c" ]
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -c ../fuzz/fuzz-conv.c -o fuzz_conv.o -I../ -I./
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer fuzz_conv.o -o /out/fuzz_conv -I./libwc -DUSE_UNICODE -I. -I./.. -DHAVE_CONFIG_H ../Str.o ../myctype.o libwc.a /usr/lib/x86_64-linux-gnu/libgc.a


  wasm3:
    language: "c"
    image: "fuzzdrivergpt/wasm3:env"
    apiblocklist: [ "^$" ]
    precode: '#include "wasm3.h"\n#include "m3_api_libc.h"\n'
    headers: { "/src/wasm3/source" : "*.h" }
    binaries: [ "/src/wasm3/build/source/libm3.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/wasm3/source", "-DM3_COMPILE_OPCODES" ]
    build: "COMPBASE OUTFILE  /src/wasm3/build/source/libm3.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/wasm3/platforms/app_fuzz/fuzzer.c" ]
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -c /src/wasm3/platforms/app_fuzz/fuzzer.c -o fuzzer.o -I/src/wasm3/source
  #
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -fsanitize=fuzzer -o /out/fuzzer fuzzer.o /src/wasm3/build/source/libm3.a


  wavpack:
    language: "c"
    image: "fuzzdrivergpt/wavpack:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libwavpack.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include","-I/src/wavpack/cli", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/wavpack/src/.libs/libwavpack.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/wavpack/fuzzing/fuzzer.cc" ]
  
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++11 -I/src/wavpack/include -I/src/wavpack/cli /src/wavpack/fuzzing/fuzzer.cc -o /out/fuzzer -fsanitize=fuzzer /src/wavpack/src/.libs/libwavpack.a

  wolfmqtt:
    language: "c"
    image: "fuzzdrivergpt/wolfmqtt:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libwolfmqtt.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-I/src/wolfssl/","-I/src/wolfmqtt/" ]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libwolfmqtt.a /src/wolfssl/src/.libs/libwolfssl.a -lm -lpthread -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/wolfmqtt-fuzzers/fuzzer.cpp" ]
  
  
  # clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -std=c++17 -I /src/fuzzing-headers/include/ -I/src/wolfssl/ -I/src/wolfmqtt/ /src/wolfmqtt-fuzzers/fuzzer.cpp /src/wolfmqtt/src/.libs/libwolfmqtt.a /src/wolfssl/src/.libs/libwolfssl.a -fsanitize=fuzzer -o /out/wolfmqtt-fuzzer

  zlib:
    language: "c"
    image: "fuzzdrivergpt/zlib:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libz.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include","-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link" ]
    build: "COMPBASE OUTFILE /src/zlib/libz.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/checksum_fuzzer.c","/src/compress_fuzzer.c","/src/example_dict_fuzzer.c","/src/example_flush_fuzzer.c","/src/example_large_fuzzer.c","/src/example_small_fuzzer.c","/src/libfuzzer","/src/minigzip_fuzzer.c","/src/zlib_uncompress2_fuzzer.cc","/src/zlib_uncompress_fuzzer.cc" ]
  
  
  #+ clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -I. /src/compress_fuzzer.c -c -o /tmp/compress_fuzzer.o
  #+ clang++ -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -stdlib=libc++ -o /out/compress_fuzzer /tmp/compress_fuzzer.o -stdlib=libc++ -fsanitize=fuzzer ./libz.a

  zstd:
    language: "c"
    image: "fuzzdrivergpt/zstd:env"
    apiblocklist: [ "^$" ]
    precode: ''
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libzstd.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-Wall","-Wextra","-Wcast-qual","-Wcast-align","-Wshadow","-Wstrict-aliasing=1","-Wswitch-enum","-Wdeclaration-after-statement","-Wstrict-prototypes","-Wundef","-Wpointer-arith","-Wvla","-Wformat=2","-Winit-self","-Wfloat-equal","-Wwrite-strings","-Wredundant-decls","-Wmissing-prototypes","-Wc++-compat","-Qunused-arguments","-Wa,--noexecstack","-DXXH_NAMESPACE=ZSTD_","-DDEBUGLEVEL=2","-DZSTD_LEGACY_SUPPORT=1","-z","noexecstack" ]
    build: "COMPBASE OUTFILE /usr/lib/libFuzzingEngine.a /src/zstd/fuzzdrivergpt-install/lib/libzstd.a   -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "block_decompress.c","block_round_trip.c","decompress_dstSize_tooSmall.c","dictionary_decompress.c","dictionary_loader.c","dictionary_round_trip.c","dictionary_stream_round_trip.c","fse_read_ncount.c","fuzz_data_producer.c","fuzz_helpers.c","huf_decompress.c","huf_round_trip.c","raw_dictionary_round_trip.c","regression_driver.c","seekable_roundtrip.c","sequence_compression_api.c","simple_compress.c","simple_decompress.c","simple_round_trip.c","stream_decompress.c","stream_round_trip.c","zstd_frame_info.c","zstd_helpers.c" ]
  
  #-DDEBUGLEVEL=1 -DMEM_FORCE_MEMORY_ACCESS=0 -DFUZZ_RNG_SEED_SIZE=4     -fno-omit-frame-pointer -gline-tables-only     -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -stdlib=libc++ /usr/lib/libFuzzingEngine.a simple_compress
  #
  #clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -Wall -Wextra -Wcast-qual -Wcast-align -Wshadow -Wstrict-aliasing=1 -Wswitch-enum -Wdeclaration-after-statement -Wstrict-prototypes -Wundef -Wpointer-arith -Wvla -Wformat=2 -Winit-self -Wfloat-equal -Wwrite-strings -Wredundant-decls -Wmissing-prototypes -Wc++-compat  -Qunused-arguments -Wa,--noexecstack  -DXXH_NAMESPACE=ZSTD_ -DDEBUGLEVEL=2 -DZSTD_LEGACY_SUPPORT=1   -z noexecstack  fuzz_data_producer.c   -o fuzz_data_producer


  zydis:
    language: "c"
    image: "fuzzdrivergpt/zydis:env"
    apiblocklist: [ "^$" ]
    precode: '#include "Zydis/Decoder.h"\n#include "Zydis/DecoderTypes.h"\n#include "Zydis/Defines.h"\n#include "Zydis/Disassembler.h"\n#include "Zydis/Encoder.h"\n#include "Zydis/Formatter.h"\n#include "Zydis/FormatterBuffer.h"\n#include "Zydis/MetaInfo.h"\n#include "Zydis/Mnemonic.h"\n#include "Zydis/Register.h"\n#include "Zydis/Segment.h"\n#include "Zydis/SharedTypes.h"\n#include "Zydis/ShortString.h"\n#include "Zydis/Status.h"\n#include "Zydis/Utils.h"\n#include "Zydis/Zydis.h"\n'
    headers: { "/root/workspace/fuzzdrivergpt/install/include" : "**/*" }
    binaries: [ "/root/workspace/fuzzdrivergpt/install/lib/libZydis.a" ]
    compile: [ "/usr/local/bin/clang-15", "-isystem", "/usr/local/lib/clang/15.0.0/include", "-isystem", "/usr/local/include", "-isystem", "/usr/include/x86_64-linux-gnu", "-isystem", "/usr/include", "-fsanitize=address", "-fsanitize=fuzzer","-I/root/workspace/fuzzdrivergpt/install/include", "-O1","-fno-omit-frame-pointer","-gline-tables-only","-DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION","-fsanitize=address","-fsanitize-address-use-after-scope","-fsanitize=fuzzer-no-link","-fsanitize=fuzzer" ,"-DZYDIS_LIBFUZZER","-I/src/zydis/dependencies/zycore/include"]
    build: "COMPBASE OUTFILE /root/workspace/fuzzdrivergpt/install/lib/libZydis.a /src/zydis/build/zycore/libZycore.a -o OUTEXE"
    run: "OUTEXE -detect_leaks=0 -max_total_time=60 -timeout=30 -artifact_prefix=ARTIFACTDIR/ -close_fd_mask=3 SEEDDIR"
    known_drivers: [ "/src/zydis/tools/ZydisFuzzDecoder.c","/src/zydis/tools/ZydisFuzzEncoder.c","/src/zydis/tools/ZydisFuzzReEncoding.c" ]
  
  # clang -O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=address -fsanitize-address-use-after-scope -fsanitize=fuzzer-no-link -fsanitize=fuzzer ../tools/ZydisFuzzDecoder.c ../tools/ZydisFuzzShared.c -DZYDIS_LIBFUZZER -o /out/ZydisFuzzDecoder -I . -I./zycore -I ../include -I ../dependencies/zycore/include ./libZydis.a


